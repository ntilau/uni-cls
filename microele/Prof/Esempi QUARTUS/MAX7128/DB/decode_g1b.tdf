--lpm_decode CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="MAX7000AE" IGNORE_CASCADE_BUFFERS="OFF" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 5.1 cbx_cycloneii 2005:08:30:10:31:44:SJ cbx_lpm_add_sub 2005:09:30:12:13:06:SJ cbx_lpm_compare 2005:07:12:04:41:28:SJ cbx_lpm_decode 2005:04:28:09:28:48:SJ cbx_mgl 2005:10:09:07:39:04:SJ cbx_stratix 2005:10:07:15:53:08:SJ cbx_stratixii 2005:07:27:05:50:56:SJ  VERSION_END


--  Copyright (C) 1991-2005 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 96 
SUBDESIGN decode_g1b
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE
	cmpr1_aeb_int	:	WIRE;
	cmpr1_aeb	:	WIRE;
	cmpr1_dataa[4..0]	:	WIRE;
	cmpr1_datab[4..0]	:	WIRE;
	cmpr10_aeb_int	:	WIRE;
	cmpr10_aeb	:	WIRE;
	cmpr10_dataa[4..0]	:	WIRE;
	cmpr10_datab[4..0]	:	WIRE;
	cmpr11_aeb_int	:	WIRE;
	cmpr11_aeb	:	WIRE;
	cmpr11_dataa[4..0]	:	WIRE;
	cmpr11_datab[4..0]	:	WIRE;
	cmpr12_aeb_int	:	WIRE;
	cmpr12_aeb	:	WIRE;
	cmpr12_dataa[4..0]	:	WIRE;
	cmpr12_datab[4..0]	:	WIRE;
	cmpr13_aeb_int	:	WIRE;
	cmpr13_aeb	:	WIRE;
	cmpr13_dataa[4..0]	:	WIRE;
	cmpr13_datab[4..0]	:	WIRE;
	cmpr14_aeb_int	:	WIRE;
	cmpr14_aeb	:	WIRE;
	cmpr14_dataa[4..0]	:	WIRE;
	cmpr14_datab[4..0]	:	WIRE;
	cmpr15_aeb_int	:	WIRE;
	cmpr15_aeb	:	WIRE;
	cmpr15_dataa[4..0]	:	WIRE;
	cmpr15_datab[4..0]	:	WIRE;
	cmpr16_aeb_int	:	WIRE;
	cmpr16_aeb	:	WIRE;
	cmpr16_dataa[4..0]	:	WIRE;
	cmpr16_datab[4..0]	:	WIRE;
	cmpr17_aeb_int	:	WIRE;
	cmpr17_aeb	:	WIRE;
	cmpr17_dataa[4..0]	:	WIRE;
	cmpr17_datab[4..0]	:	WIRE;
	cmpr18_aeb_int	:	WIRE;
	cmpr18_aeb	:	WIRE;
	cmpr18_dataa[4..0]	:	WIRE;
	cmpr18_datab[4..0]	:	WIRE;
	cmpr19_aeb_int	:	WIRE;
	cmpr19_aeb	:	WIRE;
	cmpr19_dataa[4..0]	:	WIRE;
	cmpr19_datab[4..0]	:	WIRE;
	cmpr2_aeb_int	:	WIRE;
	cmpr2_aeb	:	WIRE;
	cmpr2_dataa[4..0]	:	WIRE;
	cmpr2_datab[4..0]	:	WIRE;
	cmpr20_aeb_int	:	WIRE;
	cmpr20_aeb	:	WIRE;
	cmpr20_dataa[4..0]	:	WIRE;
	cmpr20_datab[4..0]	:	WIRE;
	cmpr21_aeb_int	:	WIRE;
	cmpr21_aeb	:	WIRE;
	cmpr21_dataa[4..0]	:	WIRE;
	cmpr21_datab[4..0]	:	WIRE;
	cmpr22_aeb_int	:	WIRE;
	cmpr22_aeb	:	WIRE;
	cmpr22_dataa[4..0]	:	WIRE;
	cmpr22_datab[4..0]	:	WIRE;
	cmpr23_aeb_int	:	WIRE;
	cmpr23_aeb	:	WIRE;
	cmpr23_dataa[4..0]	:	WIRE;
	cmpr23_datab[4..0]	:	WIRE;
	cmpr24_aeb_int	:	WIRE;
	cmpr24_aeb	:	WIRE;
	cmpr24_dataa[4..0]	:	WIRE;
	cmpr24_datab[4..0]	:	WIRE;
	cmpr25_aeb_int	:	WIRE;
	cmpr25_aeb	:	WIRE;
	cmpr25_dataa[4..0]	:	WIRE;
	cmpr25_datab[4..0]	:	WIRE;
	cmpr26_aeb_int	:	WIRE;
	cmpr26_aeb	:	WIRE;
	cmpr26_dataa[4..0]	:	WIRE;
	cmpr26_datab[4..0]	:	WIRE;
	cmpr27_aeb_int	:	WIRE;
	cmpr27_aeb	:	WIRE;
	cmpr27_dataa[4..0]	:	WIRE;
	cmpr27_datab[4..0]	:	WIRE;
	cmpr28_aeb_int	:	WIRE;
	cmpr28_aeb	:	WIRE;
	cmpr28_dataa[4..0]	:	WIRE;
	cmpr28_datab[4..0]	:	WIRE;
	cmpr29_aeb_int	:	WIRE;
	cmpr29_aeb	:	WIRE;
	cmpr29_dataa[4..0]	:	WIRE;
	cmpr29_datab[4..0]	:	WIRE;
	cmpr3_aeb_int	:	WIRE;
	cmpr3_aeb	:	WIRE;
	cmpr3_dataa[4..0]	:	WIRE;
	cmpr3_datab[4..0]	:	WIRE;
	cmpr30_aeb_int	:	WIRE;
	cmpr30_aeb	:	WIRE;
	cmpr30_dataa[4..0]	:	WIRE;
	cmpr30_datab[4..0]	:	WIRE;
	cmpr31_aeb_int	:	WIRE;
	cmpr31_aeb	:	WIRE;
	cmpr31_dataa[4..0]	:	WIRE;
	cmpr31_datab[4..0]	:	WIRE;
	cmpr32_aeb_int	:	WIRE;
	cmpr32_aeb	:	WIRE;
	cmpr32_dataa[4..0]	:	WIRE;
	cmpr32_datab[4..0]	:	WIRE;
	cmpr4_aeb_int	:	WIRE;
	cmpr4_aeb	:	WIRE;
	cmpr4_dataa[4..0]	:	WIRE;
	cmpr4_datab[4..0]	:	WIRE;
	cmpr5_aeb_int	:	WIRE;
	cmpr5_aeb	:	WIRE;
	cmpr5_dataa[4..0]	:	WIRE;
	cmpr5_datab[4..0]	:	WIRE;
	cmpr6_aeb_int	:	WIRE;
	cmpr6_aeb	:	WIRE;
	cmpr6_dataa[4..0]	:	WIRE;
	cmpr6_datab[4..0]	:	WIRE;
	cmpr7_aeb_int	:	WIRE;
	cmpr7_aeb	:	WIRE;
	cmpr7_dataa[4..0]	:	WIRE;
	cmpr7_datab[4..0]	:	WIRE;
	cmpr8_aeb_int	:	WIRE;
	cmpr8_aeb	:	WIRE;
	cmpr8_dataa[4..0]	:	WIRE;
	cmpr8_datab[4..0]	:	WIRE;
	cmpr9_aeb_int	:	WIRE;
	cmpr9_aeb	:	WIRE;
	cmpr9_dataa[4..0]	:	WIRE;
	cmpr9_datab[4..0]	:	WIRE;
	const_data0w[4..0]	: WIRE;
	const_data10w[4..0]	: WIRE;
	const_data11w[4..0]	: WIRE;
	const_data12w[4..0]	: WIRE;
	const_data13w[4..0]	: WIRE;
	const_data14w[4..0]	: WIRE;
	const_data15w[4..0]	: WIRE;
	const_data16w[4..0]	: WIRE;
	const_data17w[4..0]	: WIRE;
	const_data18w[4..0]	: WIRE;
	const_data19w[4..0]	: WIRE;
	const_data1w[4..0]	: WIRE;
	const_data20w[4..0]	: WIRE;
	const_data21w[4..0]	: WIRE;
	const_data22w[4..0]	: WIRE;
	const_data23w[4..0]	: WIRE;
	const_data24w[4..0]	: WIRE;
	const_data25w[4..0]	: WIRE;
	const_data26w[4..0]	: WIRE;
	const_data27w[4..0]	: WIRE;
	const_data28w[4..0]	: WIRE;
	const_data29w[4..0]	: WIRE;
	const_data2w[4..0]	: WIRE;
	const_data30w[4..0]	: WIRE;
	const_data31w[4..0]	: WIRE;
	const_data3w[4..0]	: WIRE;
	const_data4w[4..0]	: WIRE;
	const_data5w[4..0]	: WIRE;
	const_data6w[4..0]	: WIRE;
	const_data7w[4..0]	: WIRE;
	const_data8w[4..0]	: WIRE;
	const_data9w[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;

BEGIN 
	IF (cmpr1_dataa[] == cmpr1_datab[]) THEN
		cmpr1_aeb_int = VCC;
	ELSE
		cmpr1_aeb_int = GND;
	END IF;
	cmpr1_aeb = cmpr1_aeb_int;
	cmpr1_dataa[] = data[];
	cmpr1_datab[] = const_data0w[];
	IF (cmpr10_dataa[] == cmpr10_datab[]) THEN
		cmpr10_aeb_int = VCC;
	ELSE
		cmpr10_aeb_int = GND;
	END IF;
	cmpr10_aeb = cmpr10_aeb_int;
	cmpr10_dataa[] = data[];
	cmpr10_datab[] = const_data9w[];
	IF (cmpr11_dataa[] == cmpr11_datab[]) THEN
		cmpr11_aeb_int = VCC;
	ELSE
		cmpr11_aeb_int = GND;
	END IF;
	cmpr11_aeb = cmpr11_aeb_int;
	cmpr11_dataa[] = data[];
	cmpr11_datab[] = const_data10w[];
	IF (cmpr12_dataa[] == cmpr12_datab[]) THEN
		cmpr12_aeb_int = VCC;
	ELSE
		cmpr12_aeb_int = GND;
	END IF;
	cmpr12_aeb = cmpr12_aeb_int;
	cmpr12_dataa[] = data[];
	cmpr12_datab[] = const_data11w[];
	IF (cmpr13_dataa[] == cmpr13_datab[]) THEN
		cmpr13_aeb_int = VCC;
	ELSE
		cmpr13_aeb_int = GND;
	END IF;
	cmpr13_aeb = cmpr13_aeb_int;
	cmpr13_dataa[] = data[];
	cmpr13_datab[] = const_data12w[];
	IF (cmpr14_dataa[] == cmpr14_datab[]) THEN
		cmpr14_aeb_int = VCC;
	ELSE
		cmpr14_aeb_int = GND;
	END IF;
	cmpr14_aeb = cmpr14_aeb_int;
	cmpr14_dataa[] = data[];
	cmpr14_datab[] = const_data13w[];
	IF (cmpr15_dataa[] == cmpr15_datab[]) THEN
		cmpr15_aeb_int = VCC;
	ELSE
		cmpr15_aeb_int = GND;
	END IF;
	cmpr15_aeb = cmpr15_aeb_int;
	cmpr15_dataa[] = data[];
	cmpr15_datab[] = const_data14w[];
	IF (cmpr16_dataa[] == cmpr16_datab[]) THEN
		cmpr16_aeb_int = VCC;
	ELSE
		cmpr16_aeb_int = GND;
	END IF;
	cmpr16_aeb = cmpr16_aeb_int;
	cmpr16_dataa[] = data[];
	cmpr16_datab[] = const_data15w[];
	IF (cmpr17_dataa[] == cmpr17_datab[]) THEN
		cmpr17_aeb_int = VCC;
	ELSE
		cmpr17_aeb_int = GND;
	END IF;
	cmpr17_aeb = cmpr17_aeb_int;
	cmpr17_dataa[] = data[];
	cmpr17_datab[] = const_data16w[];
	IF (cmpr18_dataa[] == cmpr18_datab[]) THEN
		cmpr18_aeb_int = VCC;
	ELSE
		cmpr18_aeb_int = GND;
	END IF;
	cmpr18_aeb = cmpr18_aeb_int;
	cmpr18_dataa[] = data[];
	cmpr18_datab[] = const_data17w[];
	IF (cmpr19_dataa[] == cmpr19_datab[]) THEN
		cmpr19_aeb_int = VCC;
	ELSE
		cmpr19_aeb_int = GND;
	END IF;
	cmpr19_aeb = cmpr19_aeb_int;
	cmpr19_dataa[] = data[];
	cmpr19_datab[] = const_data18w[];
	IF (cmpr2_dataa[] == cmpr2_datab[]) THEN
		cmpr2_aeb_int = VCC;
	ELSE
		cmpr2_aeb_int = GND;
	END IF;
	cmpr2_aeb = cmpr2_aeb_int;
	cmpr2_dataa[] = data[];
	cmpr2_datab[] = const_data1w[];
	IF (cmpr20_dataa[] == cmpr20_datab[]) THEN
		cmpr20_aeb_int = VCC;
	ELSE
		cmpr20_aeb_int = GND;
	END IF;
	cmpr20_aeb = cmpr20_aeb_int;
	cmpr20_dataa[] = data[];
	cmpr20_datab[] = const_data19w[];
	IF (cmpr21_dataa[] == cmpr21_datab[]) THEN
		cmpr21_aeb_int = VCC;
	ELSE
		cmpr21_aeb_int = GND;
	END IF;
	cmpr21_aeb = cmpr21_aeb_int;
	cmpr21_dataa[] = data[];
	cmpr21_datab[] = const_data20w[];
	IF (cmpr22_dataa[] == cmpr22_datab[]) THEN
		cmpr22_aeb_int = VCC;
	ELSE
		cmpr22_aeb_int = GND;
	END IF;
	cmpr22_aeb = cmpr22_aeb_int;
	cmpr22_dataa[] = data[];
	cmpr22_datab[] = const_data21w[];
	IF (cmpr23_dataa[] == cmpr23_datab[]) THEN
		cmpr23_aeb_int = VCC;
	ELSE
		cmpr23_aeb_int = GND;
	END IF;
	cmpr23_aeb = cmpr23_aeb_int;
	cmpr23_dataa[] = data[];
	cmpr23_datab[] = const_data22w[];
	IF (cmpr24_dataa[] == cmpr24_datab[]) THEN
		cmpr24_aeb_int = VCC;
	ELSE
		cmpr24_aeb_int = GND;
	END IF;
	cmpr24_aeb = cmpr24_aeb_int;
	cmpr24_dataa[] = data[];
	cmpr24_datab[] = const_data23w[];
	IF (cmpr25_dataa[] == cmpr25_datab[]) THEN
		cmpr25_aeb_int = VCC;
	ELSE
		cmpr25_aeb_int = GND;
	END IF;
	cmpr25_aeb = cmpr25_aeb_int;
	cmpr25_dataa[] = data[];
	cmpr25_datab[] = const_data24w[];
	IF (cmpr26_dataa[] == cmpr26_datab[]) THEN
		cmpr26_aeb_int = VCC;
	ELSE
		cmpr26_aeb_int = GND;
	END IF;
	cmpr26_aeb = cmpr26_aeb_int;
	cmpr26_dataa[] = data[];
	cmpr26_datab[] = const_data25w[];
	IF (cmpr27_dataa[] == cmpr27_datab[]) THEN
		cmpr27_aeb_int = VCC;
	ELSE
		cmpr27_aeb_int = GND;
	END IF;
	cmpr27_aeb = cmpr27_aeb_int;
	cmpr27_dataa[] = data[];
	cmpr27_datab[] = const_data26w[];
	IF (cmpr28_dataa[] == cmpr28_datab[]) THEN
		cmpr28_aeb_int = VCC;
	ELSE
		cmpr28_aeb_int = GND;
	END IF;
	cmpr28_aeb = cmpr28_aeb_int;
	cmpr28_dataa[] = data[];
	cmpr28_datab[] = const_data27w[];
	IF (cmpr29_dataa[] == cmpr29_datab[]) THEN
		cmpr29_aeb_int = VCC;
	ELSE
		cmpr29_aeb_int = GND;
	END IF;
	cmpr29_aeb = cmpr29_aeb_int;
	cmpr29_dataa[] = data[];
	cmpr29_datab[] = const_data28w[];
	IF (cmpr3_dataa[] == cmpr3_datab[]) THEN
		cmpr3_aeb_int = VCC;
	ELSE
		cmpr3_aeb_int = GND;
	END IF;
	cmpr3_aeb = cmpr3_aeb_int;
	cmpr3_dataa[] = data[];
	cmpr3_datab[] = const_data2w[];
	IF (cmpr30_dataa[] == cmpr30_datab[]) THEN
		cmpr30_aeb_int = VCC;
	ELSE
		cmpr30_aeb_int = GND;
	END IF;
	cmpr30_aeb = cmpr30_aeb_int;
	cmpr30_dataa[] = data[];
	cmpr30_datab[] = const_data29w[];
	IF (cmpr31_dataa[] == cmpr31_datab[]) THEN
		cmpr31_aeb_int = VCC;
	ELSE
		cmpr31_aeb_int = GND;
	END IF;
	cmpr31_aeb = cmpr31_aeb_int;
	cmpr31_dataa[] = data[];
	cmpr31_datab[] = const_data30w[];
	IF (cmpr32_dataa[] == cmpr32_datab[]) THEN
		cmpr32_aeb_int = VCC;
	ELSE
		cmpr32_aeb_int = GND;
	END IF;
	cmpr32_aeb = cmpr32_aeb_int;
	cmpr32_dataa[] = data[];
	cmpr32_datab[] = const_data31w[];
	IF (cmpr4_dataa[] == cmpr4_datab[]) THEN
		cmpr4_aeb_int = VCC;
	ELSE
		cmpr4_aeb_int = GND;
	END IF;
	cmpr4_aeb = cmpr4_aeb_int;
	cmpr4_dataa[] = data[];
	cmpr4_datab[] = const_data3w[];
	IF (cmpr5_dataa[] == cmpr5_datab[]) THEN
		cmpr5_aeb_int = VCC;
	ELSE
		cmpr5_aeb_int = GND;
	END IF;
	cmpr5_aeb = cmpr5_aeb_int;
	cmpr5_dataa[] = data[];
	cmpr5_datab[] = const_data4w[];
	IF (cmpr6_dataa[] == cmpr6_datab[]) THEN
		cmpr6_aeb_int = VCC;
	ELSE
		cmpr6_aeb_int = GND;
	END IF;
	cmpr6_aeb = cmpr6_aeb_int;
	cmpr6_dataa[] = data[];
	cmpr6_datab[] = const_data5w[];
	IF (cmpr7_dataa[] == cmpr7_datab[]) THEN
		cmpr7_aeb_int = VCC;
	ELSE
		cmpr7_aeb_int = GND;
	END IF;
	cmpr7_aeb = cmpr7_aeb_int;
	cmpr7_dataa[] = data[];
	cmpr7_datab[] = const_data6w[];
	IF (cmpr8_dataa[] == cmpr8_datab[]) THEN
		cmpr8_aeb_int = VCC;
	ELSE
		cmpr8_aeb_int = GND;
	END IF;
	cmpr8_aeb = cmpr8_aeb_int;
	cmpr8_dataa[] = data[];
	cmpr8_datab[] = const_data7w[];
	IF (cmpr9_dataa[] == cmpr9_datab[]) THEN
		cmpr9_aeb_int = VCC;
	ELSE
		cmpr9_aeb_int = GND;
	END IF;
	cmpr9_aeb = cmpr9_aeb_int;
	cmpr9_dataa[] = data[];
	cmpr9_datab[] = const_data8w[];
	const_data0w[] = B"00000";
	const_data10w[] = B"01010";
	const_data11w[] = B"01011";
	const_data12w[] = B"01100";
	const_data13w[] = B"01101";
	const_data14w[] = B"01110";
	const_data15w[] = B"01111";
	const_data16w[] = B"10000";
	const_data17w[] = B"10001";
	const_data18w[] = B"10010";
	const_data19w[] = B"10011";
	const_data1w[] = B"00001";
	const_data20w[] = B"10100";
	const_data21w[] = B"10101";
	const_data22w[] = B"10110";
	const_data23w[] = B"10111";
	const_data24w[] = B"11000";
	const_data25w[] = B"11001";
	const_data26w[] = B"11010";
	const_data27w[] = B"11011";
	const_data28w[] = B"11100";
	const_data29w[] = B"11101";
	const_data2w[] = B"00010";
	const_data30w[] = B"11110";
	const_data31w[] = B"11111";
	const_data3w[] = B"00011";
	const_data4w[] = B"00100";
	const_data5w[] = B"00101";
	const_data6w[] = B"00110";
	const_data7w[] = B"00111";
	const_data8w[] = B"01000";
	const_data9w[] = B"01001";
	eq[] = eq_node[];
	eq_node[] = ( cmpr32_aeb, cmpr31_aeb, cmpr30_aeb, cmpr29_aeb, cmpr28_aeb, cmpr27_aeb, cmpr26_aeb, cmpr25_aeb, cmpr24_aeb, cmpr23_aeb, cmpr22_aeb, cmpr21_aeb, cmpr20_aeb, cmpr19_aeb, cmpr18_aeb, cmpr17_aeb, cmpr16_aeb, cmpr15_aeb, cmpr14_aeb, cmpr13_aeb, cmpr12_aeb, cmpr11_aeb, cmpr10_aeb, cmpr9_aeb, cmpr8_aeb, cmpr7_aeb, cmpr6_aeb, cmpr5_aeb, cmpr4_aeb, cmpr3_aeb, cmpr2_aeb, cmpr1_aeb);
END;
--VALID FILE
