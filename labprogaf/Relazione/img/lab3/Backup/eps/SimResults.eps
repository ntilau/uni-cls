%!PS-Adobe-3.0 EPSF-3.0
%%Title: BER_simresults.pdf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 5/8/2009 5:19:23
%%For: Lorenzo
%%BoundingBox: 12 286 582 555
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (HP ColorLaserJet 5/5M) (2015.104) 4
%%LanguageLevel: 2
%%HiResBoundingBox: 12.9601 286.2334 581.0400 554.4866
%%CropBox: 12.9601 286.2334 581.0400 554.4866
%ADO_BeginApplicationHeaderComments
%%Creator: Adobe Acrobat 9.1.0
%%For: Lorenzo
%%LanguageLevel: 2
%ADO_EndApplicationHeaderComments
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments

%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments

%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(Questo lavoro richiede una quantità di memoria maggiore di quella disponibile nella stampante.)
100 500(Attenersi alle istruzioni seguenti; quindi stampare di nuovo:)100 485
(Per il formato di output, scegliere Massima portabilità.)115 470
(Controllare che la quantità di memoria PostScript disponibile sia accurata nella scheda Impostazioni periferica.)
115 455(Ridurre il numero di caratteri del documento.)115 440
(Stampare il documento in parti.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 300 V 0 0 -72 300 V 12.99968 826.99932 ] def 
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 456 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreatorTool="cairo 1.5.15 (http://cairographics.org)"
   pdf:Producer="cairo 1.5.15 (http://cairographics.org)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup

%%Page: 1 1

%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [12.960010528564 286.23333740234 581.03997802734 554.48657226563]]
[/BleedBox [12.960010528564 286.23333740234 581.03997802734 554.48657226563]]
[/ArtBox [12.96 287.433 581.04 555.687 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
gsave
4.16667 4.16667 scale
-12.96 -15.12 translate
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12.96 287.433 mo
12.96 555.687 li
581.04 555.687 li
581.04 287.433 li
cp
clp
[1.37897 0 0 1.37897 12.96 287.433 ]ct
.36 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
-211.68 109.813 mo
-211.68 17.773 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.284153 .225864 .228733 3.0518e-5 cmyk
@
-187.078 109.813 mo
-187.078 17.773 li
@
-162.602 109.813 mo
-162.602 17.773 li
@
-138.121 109.813 mo
-138.121 17.773 li
@
-113.641 109.813 mo
-113.641 17.773 li
@
-89.16 109.813 mo
-89.16 17.773 li
@
-236.16 115.332 mo
-236.16 17.773 li
.750179 .679652 .670191 .901488 cmyk
@
-231.238 112.57 mo
-231.238 109.813 li
@
-226.32 112.57 mo
-226.32 109.813 li
@
-221.398 112.57 mo
-221.398 109.813 li
@
-216.48 112.57 mo
-216.48 109.813 li
@
-211.68 109.813 mo
-211.68 115.332 li
@
-206.762 112.57 mo
-206.762 109.813 li
@
-201.84 112.57 mo
-201.84 109.813 li
@
-196.922 112.57 mo
-196.922 109.813 li
@
-192 112.57 mo
-192 109.813 li
@
-187.078 109.813 mo
-187.078 115.332 li
@
-182.281 112.57 mo
-182.281 109.813 li
@
-177.359 112.57 mo
-177.359 109.813 li
@
-172.441 112.57 mo
-172.441 109.813 li
@
-167.52 112.57 mo
-167.52 109.813 li
@
-162.602 109.813 mo
-162.602 115.332 li
@
-157.801 112.57 mo
-157.801 109.813 li
@
-152.879 112.57 mo
-152.879 109.813 li
@
-147.961 112.57 mo
-147.961 109.813 li
@
-143.039 112.57 mo
-143.039 109.813 li
@
-138.121 109.813 mo
-138.121 115.332 li
@
-133.199 112.57 mo
-133.199 109.813 li
@
-128.398 112.57 mo
-128.398 109.813 li
@
-123.48 112.57 mo
-123.48 109.813 li
@
-118.559 112.57 mo
-118.559 109.813 li
@
-113.641 109.813 mo
-113.641 115.332 li
@
-108.719 112.57 mo
-108.719 109.813 li
@
-103.922 112.57 mo
-103.922 109.813 li
@
-99 112.57 mo
-99 109.813 li
@
-94.078 112.57 mo
-94.078 109.813 li
@
-89.16 109.813 mo
-89.16 115.332 li
@
-84.238 112.57 mo
-84.238 109.813 li
@
-79.32 112.57 mo
-79.32 109.813 li
@
-74.52 112.57 mo
-74.52 109.813 li
@
-69.602 112.57 mo
-69.602 109.813 li
@
-64.68 115.332 mo
-64.68 17.773 li
@
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE
1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g2 <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D
1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E
2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7A
DC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0
C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/g3 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE5
48E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C1
0DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698F
DFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A
0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0
A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6
A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
/g4 <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE02
3151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/g5 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD
9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63
F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B
50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC493
72EF96DD9EB13A793559C13CFDFE477> |-
/g6 <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F1
2980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA3
0490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF19362
8C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA
7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B
2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D9
1DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/g7 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC
1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A104
25162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D
888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60
C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B
546505C954A88> |-
/g8 <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3
B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55
546101EE3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJBW+Arial /PBAAAA+Arial findfont ct_VMDictPut
/NNOJBW+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 247{/.notdef}rp]
NNOJBW+Arial nf
NNOJBW+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
-213.359 121.57 mo
(\001)sh
-188.762 121.57 mo
(\002)sh
-164.281 121.57 mo
(\003)sh
-139.801 121.57 mo
(\004)sh
-115.324 121.57 mo
(\005)sh
-90.8438 121.57 mo
(\006)sh
-237.84 121.57 mo
(\007)sh
-66.3594 121.57 mo
(\010)sh
-236.16 86.891 mo
-64.68 86.891 li
.284153 .225864 .228733 3.0518e-5 cmyk
@
-236.16 63.852 mo
-64.68 63.852 li
@
-236.16 40.691 mo
-64.68 40.691 li
@
-241.559 109.813 mo
-64.68 109.813 li
.750179 .679652 .670191 .901488 cmyk
@
-238.801 98.41 mo
-236.16 98.41 li
@
-241.559 86.891 mo
-236.16 86.891 li
@
-238.801 75.371 mo
-236.16 75.371 li
@
-241.559 63.852 mo
-236.16 63.852 li
@
-238.801 52.332 mo
-236.16 52.332 li
@
-241.559 40.691 mo
-236.16 40.691 li
@
-238.801 29.293 mo
-236.16 29.293 li
@
-241.559 17.773 mo
-64.68 17.773 li
@
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBW+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g9 <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C071
A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17D
B36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1F
DB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603B
C4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7EF
B46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219571
FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A1
9A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A559
77C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBW+Arial /Encoding get
dup 9 /g9 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBW+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 246{/.notdef}rp]
NNOJBW+Arial nf
NNOJBW+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
-249 88.5703 mo
(\002)sh
-245.594 88.5703 mo
(\007)sh
-249 65.5313 mo
(\004)sh
-245.594 65.5313 mo
(\007)sh
-249 42.4922 mo
(\006)sh
-245.594 42.4922 mo
(\007)sh
-245.641 111.613 mo
(\007)sh
-249 19.4531 mo
(\011)sh
-245.594 19.4531 mo
(\007)sh
-236.16 109.813 mo
-236.039 109.813 li
3.0518e-5 .990631 1 .000396735 cmyk
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-192.359 108.73 li
@
-192.359 108.73 mo
-191.52 108.73 li
@
-191.52 108.73 mo
-190.559 108.73 li
@
-190.559 108.73 mo
-189.602 108.73 li
@
-189.602 108.73 mo
-188.762 108.73 li
@
-188.762 108.73 mo
-187.801 108.73 li
@
-187.801 108.73 mo
-186.84 108.73 li
@
-186.84 108.73 mo
-185.879 108.73 li
@
-185.879 108.73 mo
-185.039 108.73 li
@
-185.039 108.73 mo
-184.078 108.73 li
@
-184.078 108.73 mo
-183.121 108.73 li
@
-183.121 108.73 mo
-182.281 108.73 li
@
-182.281 108.73 mo
-181.32 108.73 li
@
-181.32 108.73 mo
-180.359 108.73 li
@
-180.359 108.73 mo
-179.398 108.73 li
@
-179.398 108.73 mo
-178.559 108.73 li
@
-178.559 108.73 mo
-177.602 108.73 li
@
-177.602 108.73 mo
-176.641 108.73 li
@
-176.641 108.73 mo
-175.801 108.73 li
@
-175.801 108.73 mo
-174.84 108.73 li
@
-174.84 108.73 mo
-173.879 108.73 li
@
-173.879 108.73 mo
-173.039 108.73 li
@
-173.039 108.73 mo
-172.078 108.73 li
@
-172.078 108.73 mo
-171.121 108.73 li
@
-171.121 108.73 mo
-170.16 108.73 li
@
-170.16 108.73 mo
-169.32 108.73 li
@
-169.32 108.73 mo
-168.359 108.73 li
@
-168.359 108.73 mo
-167.398 108.73 li
@
-167.398 108.73 mo
-166.559 108.73 li
@
-166.559 108.73 mo
-165.602 108.73 li
@
-165.602 108.73 mo
-164.641 108.73 li
@
-164.641 108.73 mo
-163.68 108.73 li
@
-163.68 108.73 mo
-162.84 108.73 li
@
-162.84 108.73 mo
-161.879 108.73 li
@
-161.879 108.73 mo
-160.922 108.73 li
@
-160.922 108.73 mo
-160.078 108.73 li
@
-160.078 108.73 mo
-159.121 108.73 li
@
-159.121 108.73 mo
-158.16 108.73 li
@
-158.16 108.73 mo
-157.199 108.73 li
@
-157.199 108.73 mo
-156.359 108.73 li
@
-156.359 108.73 mo
-155.398 108.73 li
@
-155.398 108.73 mo
-154.441 108.73 li
@
-154.441 108.73 mo
-153.602 108.73 li
@
-153.602 108.73 mo
-152.641 108.73 li
@
-152.641 108.73 mo
-151.68 108.73 li
@
-151.68 108.73 mo
-150.719 108.73 li
@
-150.719 108.73 mo
-149.879 108.73 li
@
-149.879 108.73 mo
-148.922 108.73 li
@
-148.922 108.73 mo
-147.961 108.73 li
@
-147.961 108.73 mo
-147.121 108.73 li
@
-147.121 108.73 mo
-146.16 108.73 li
@
-146.16 108.73 mo
-145.199 108.73 li
@
-145.199 108.73 mo
-144.359 108.73 li
@
-144.359 108.73 mo
-143.398 108.73 li
@
-143.398 108.73 mo
-142.441 108.73 li
@
-142.441 108.73 mo
-141.48 108.73 li
@
-141.48 108.73 mo
-140.641 108.73 li
@
-140.641 108.73 mo
-139.68 108.73 li
@
-139.68 108.73 mo
-138.719 108.73 li
@
-138.719 108.73 mo
-137.879 108.73 li
@
-137.879 108.73 mo
-136.922 108.73 li
@
-136.922 108.73 mo
-135.961 108.73 li
@
-135.961 108.73 mo
-135 108.73 li
@
-135 108.73 mo
-134.16 108.73 li
@
-134.16 108.73 mo
-133.199 108.73 li
@
-133.199 108.73 mo
-132.238 108.73 li
@
-132.238 108.73 mo
-131.398 108.73 li
@
-131.398 108.73 mo
-130.441 108.73 li
@
-130.441 108.73 mo
-129.48 108.73 li
@
-129.48 108.73 mo
-128.52 108.73 li
@
-128.52 108.73 mo
-127.68 108.73 li
@
-127.68 108.73 mo
-126.719 108.73 li
@
-126.719 108.73 mo
-125.762 108.73 li
@
-125.762 108.73 mo
-124.922 108.73 li
@
-124.922 108.73 mo
-123.961 108.73 li
@
-123.961 108.73 mo
-123 108.73 li
@
-123 108.73 mo
-122.039 108.73 li
@
-122.039 108.73 mo
-121.199 108.73 li
@
-121.199 108.73 mo
-120.238 108.73 li
@
-120.238 108.73 mo
-119.281 108.73 li
@
-119.281 108.73 mo
-118.441 108.73 li
@
-118.441 108.73 mo
-117.48 108.73 li
@
-117.48 108.73 mo
-116.52 108.73 li
@
-116.52 108.73 mo
-115.68 108.73 li
@
-115.68 108.73 mo
-114.719 108.73 li
@
-114.719 108.73 mo
-113.762 108.73 li
@
-113.762 108.73 mo
-112.801 108.73 li
@
-112.801 108.73 mo
-111.961 108.73 li
@
-111.961 108.73 mo
-111 108.73 li
@
-111 108.73 mo
-110.039 108.73 li
@
-110.039 108.73 mo
-109.199 108.73 li
@
-109.199 108.73 mo
-108.238 108.73 li
@
-108.238 108.73 mo
-107.281 108.73 li
@
-107.281 108.73 mo
-106.32 108.73 li
@
-106.32 108.73 mo
-105.48 108.73 li
@
-105.48 108.73 mo
-104.52 108.73 li
@
-104.52 108.73 mo
-103.559 108.73 li
@
-103.559 108.73 mo
-102.719 108.73 li
@
-102.719 108.73 mo
-101.762 108.73 li
@
-101.762 108.73 mo
-100.801 108.73 li
@
-100.801 108.73 mo
-99.84 108.73 li
@
-99.84 108.73 mo
-99 108.73 li
@
-99 108.73 mo
-98.039 108.73 li
@
-98.039 108.73 mo
-97.078 108.73 li
@
-97.078 108.73 mo
-96.238 108.73 li
@
-96.238 108.73 mo
-95.281 108.73 li
@
-95.281 108.73 mo
-94.32 108.73 li
@
-94.32 108.73 mo
-93.359 108.73 li
@
-93.359 108.73 mo
-92.52 108.73 li
@
-92.52 108.73 mo
-91.559 108.73 li
@
-91.559 108.73 mo
-90.602 108.73 li
@
-90.602 108.73 mo
-89.762 108.73 li
@
-89.762 108.73 mo
-88.801 108.73 li
@
-88.801 108.73 mo
-87.84 108.73 li
@
-87.84 108.73 mo
-87 108.73 li
@
-87 108.73 mo
-86.039 108.73 li
@
-86.039 108.73 mo
-85.078 108.73 li
@
-85.078 108.73 mo
-84.121 108.73 li
@
-84.121 108.73 mo
-83.281 108.73 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-226.801 109.813 li
@
-226.801 109.813 mo
-225.84 109.813 li
@
-225.84 109.813 mo
-225 109.813 li
@
-225 109.813 mo
-224.039 109.813 li
@
-224.039 109.813 mo
-223.078 109.813 li
@
-223.078 109.813 mo
-222.121 109.813 li
@
-222.121 109.813 mo
-221.281 109.813 li
@
-221.281 109.813 mo
-220.32 109.813 li
@
-220.32 109.813 mo
-219.359 109.813 li
@
-219.359 109.813 mo
-218.52 109.813 li
@
-218.52 109.813 mo
-217.559 109.813 li
@
-217.559 109.813 mo
-216.602 109.813 li
@
-216.602 109.813 mo
-215.762 109.813 li
@
-215.762 109.813 mo
-214.801 109.813 li
@
-214.801 109.813 mo
-213.84 109.813 li
@
-213.84 109.813 mo
-212.879 109.813 li
@
-212.879 109.813 mo
-212.039 109.813 li
@
-212.039 109.813 mo
-211.078 109.813 li
@
-211.078 109.813 mo
-210.121 109.813 li
@
-210.121 109.813 mo
-209.281 109.813 li
@
-209.281 109.813 mo
-208.32 109.813 li
@
-208.32 109.813 mo
-207.359 109.813 li
@
-207.359 109.813 mo
-206.398 109.813 li
@
-206.398 109.813 mo
-205.559 109.813 li
@
-205.559 109.813 mo
-204.602 109.813 li
@
-204.602 109.813 mo
-203.641 109.813 li
@
-203.641 109.813 mo
-202.801 109.813 li
@
-202.801 109.813 mo
-201.84 109.813 li
@
-201.84 109.813 mo
-200.879 109.813 li
@
-200.879 109.813 mo
-199.922 109.813 li
@
-199.922 109.813 mo
-199.078 109.813 li
@
-199.078 109.813 mo
-198.121 109.813 li
@
-198.121 109.813 mo
-197.16 109.813 li
@
-197.16 109.813 mo
-196.32 109.813 li
@
-196.32 109.813 mo
-195.359 109.813 li
@
-195.359 109.813 mo
-194.398 109.813 li
@
-194.398 109.813 mo
-193.441 109.813 li
@
-193.441 109.813 mo
-192.602 109.813 li
@
-192.602 109.813 mo
-191.641 109.813 li
@
-191.641 109.813 mo
-190.68 109.813 li
@
-190.68 109.813 mo
-189.84 109.813 li
@
-189.84 109.813 mo
-188.879 109.813 li
@
-188.879 109.813 mo
-187.922 109.813 li
@
-187.922 109.813 mo
-187.078 109.813 li
@
-187.078 109.813 mo
-186.121 109.813 li
@
-186.121 109.813 mo
-185.16 109.813 li
@
-185.16 109.813 mo
-184.199 109.813 li
@
-184.199 109.813 mo
-183.359 109.813 li
@
-183.359 109.813 mo
-182.398 109.813 li
@
-182.398 109.813 mo
-181.441 109.813 li
@
-181.441 109.813 mo
-180.602 109.813 li
@
-180.602 109.813 mo
-179.641 109.813 li
@
-179.641 109.813 mo
-178.68 109.813 li
@
-178.68 109.813 mo
-177.719 109.813 li
@
-177.719 109.813 mo
-176.879 109.813 li
@
-176.879 109.813 mo
-175.922 109.813 li
@
-175.922 109.813 mo
-174.961 109.813 li
@
-174.961 109.813 mo
-174.121 109.813 li
@
-174.121 109.813 mo
-173.16 109.813 li
@
-173.16 109.813 mo
-172.199 109.813 li
@
-172.199 109.813 mo
-171.238 109.813 li
@
-171.238 109.813 mo
-170.398 109.813 li
@
-170.398 109.813 mo
-169.441 109.813 li
@
-169.441 109.813 mo
-168.48 109.813 li
@
-168.48 109.813 mo
-167.641 109.813 li
@
-167.641 109.813 mo
-166.68 109.813 li
@
-166.68 109.813 mo
-165.719 109.813 li
@
-165.719 109.813 mo
-164.762 109.813 li
@
-164.762 109.813 mo
-163.922 109.813 li
@
-163.922 109.813 mo
-162.961 109.813 li
@
-162.961 109.813 mo
-162 109.813 li
@
-162 109.813 mo
-161.16 109.813 li
@
-161.16 109.813 mo
-160.199 109.813 li
@
-160.199 109.813 mo
-159.238 109.813 li
@
-159.238 109.813 mo
-158.398 109.813 li
@
-158.398 109.813 mo
-157.441 109.813 li
@
-157.441 109.813 mo
-156.48 109.813 li
@
-156.48 109.813 mo
-155.52 109.813 li
@
-155.52 109.813 mo
-154.68 109.813 li
@
-154.68 109.813 mo
-153.719 109.813 li
@
-153.719 109.813 mo
-152.762 109.813 li
@
-152.762 109.813 mo
-151.922 109.813 li
@
-151.922 109.813 mo
-150.961 109.813 li
@
-150.961 109.813 mo
-150 109.813 li
@
-150 109.813 mo
-149.039 109.813 li
@
-149.039 109.813 mo
-148.199 109.813 li
@
-148.199 109.813 mo
-147.238 109.813 li
@
-147.238 109.813 mo
-146.281 109.813 li
@
-146.281 109.813 mo
-145.441 109.813 li
@
-145.441 109.813 mo
-144.48 109.813 li
@
-144.48 109.813 mo
-143.52 109.813 li
@
-143.52 109.813 mo
-142.559 109.813 li
@
-142.559 109.813 mo
-141.719 109.813 li
@
-141.719 109.813 mo
-140.762 109.813 li
@
-140.762 109.813 mo
-139.801 109.813 li
@
-139.801 109.813 mo
-138.961 109.813 li
@
-138.961 109.813 mo
-138 109.813 li
@
-138 109.813 mo
-137.039 109.813 li
@
-137.039 109.813 mo
-136.078 109.813 li
@
-136.078 109.813 mo
-135.238 109.813 li
@
-135.238 109.813 mo
-134.281 109.813 li
@
-134.281 109.813 mo
-133.32 109.813 li
@
-133.32 109.813 mo
-132.48 109.813 li
@
-132.48 109.813 mo
-131.52 109.813 li
@
-131.52 109.813 mo
-130.559 109.813 li
@
-130.559 109.813 mo
-129.719 109.813 li
@
-129.719 109.813 mo
-128.762 109.813 li
@
-128.762 109.813 mo
-127.801 109.813 li
@
-127.801 109.813 mo
-126.84 109.813 li
@
-126.84 109.813 mo
-126 109.813 li
@
-126 109.813 mo
-125.039 109.813 li
@
-125.039 109.813 mo
-124.078 109.813 li
@
-124.078 109.813 mo
-123.238 109.813 li
@
-123.238 109.813 mo
-122.281 109.813 li
@
-122.281 109.813 mo
-121.32 109.813 li
@
-121.32 109.813 mo
-120.359 109.813 li
@
-120.359 109.813 mo
-119.52 109.813 li
@
-119.52 109.813 mo
-118.559 109.813 li
@
-118.559 109.813 mo
-117.602 109.813 li
@
-117.602 109.813 mo
-116.762 109.813 li
@
-116.762 109.813 mo
-115.801 109.813 li
@
-115.801 109.813 mo
-114.84 109.813 li
@
-114.84 109.813 mo
-113.879 109.813 li
@
-113.879 109.813 mo
-113.039 109.813 li
@
-113.039 109.813 mo
-112.078 109.813 li
@
-112.078 109.813 mo
-111.121 109.813 li
@
-111.121 109.813 mo
-110.281 109.813 li
@
-110.281 109.813 mo
-109.32 109.813 li
@
-109.32 109.813 mo
-108.359 109.813 li
@
-108.359 109.813 mo
-107.398 109.813 li
@
-107.398 109.813 mo
-106.559 109.813 li
@
-106.559 109.813 mo
-105.602 109.813 li
@
-105.602 109.813 mo
-104.641 109.813 li
@
-104.641 109.813 mo
-103.801 109.813 li
@
-103.801 109.813 mo
-102.84 109.813 li
@
-102.84 109.813 mo
-101.879 109.813 li
@
-101.879 109.813 mo
-101.039 109.813 li
@
-101.039 109.813 mo
-100.078 109.813 li
@
-100.078 109.813 mo
-99.121 109.813 li
@
-99.121 109.813 mo
-98.16 109.813 li
@
-98.16 109.813 mo
-97.32 109.813 li
@
-97.32 109.813 mo
-96.359 109.813 li
@
-96.359 109.813 mo
-95.398 109.813 li
@
-95.398 109.813 mo
-94.559 109.813 li
@
-94.559 109.813 mo
-93.602 109.813 li
@
-93.602 109.813 mo
-92.641 109.813 li
@
-92.641 109.813 mo
-91.68 109.813 li
@
-91.68 109.813 mo
-90.84 109.813 li
@
-90.84 109.813 mo
-89.879 109.813 li
@
-89.879 109.813 mo
-88.922 109.813 li
@
-88.922 109.813 mo
-88.078 109.813 li
@
-88.078 109.813 mo
-87.121 109.813 li
@
-87.121 109.813 mo
-86.16 109.813 li
@
-86.16 109.813 mo
-85.199 109.813 li
@
-85.199 109.813 mo
-84.359 109.813 li
@
-84.359 109.813 mo
-83.398 109.813 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.801 108.73 li
@
-232.801 108.73 mo
-232.199 107.531 li
@
-232.199 107.531 mo
-231.238 107.531 li
@
-231.238 107.531 mo
-230.398 107.531 li
@
-230.398 107.531 mo
-229.441 107.531 li
@
-229.441 107.531 mo
-228.48 107.531 li
@
-228.48 107.531 mo
-227.52 107.531 li
@
-227.52 107.531 mo
-226.68 107.531 li
@
-226.68 107.531 mo
-225.719 107.531 li
@
-225.719 107.531 mo
-224.762 107.531 li
@
-224.762 107.531 mo
-223.922 107.531 li
@
-223.922 107.531 mo
-222.961 107.531 li
@
-222.961 107.531 mo
-222 107.531 li
@
-222 107.531 mo
-221.039 107.531 li
@
-221.039 107.531 mo
-220.199 107.531 li
@
-220.199 107.531 mo
-219.238 107.531 li
@
-219.238 107.531 mo
-218.281 107.531 li
@
-218.281 107.531 mo
-217.441 107.531 li
@
-217.441 107.531 mo
-216.48 107.531 li
@
-216.48 107.531 mo
-215.52 107.531 li
@
-215.52 107.531 mo
-214.559 107.531 li
@
-214.559 107.531 mo
-213.719 107.531 li
@
-213.719 107.531 mo
-212.762 107.531 li
@
-212.762 107.531 mo
-211.801 107.531 li
@
-211.801 107.531 mo
-210.961 107.531 li
@
-210.961 107.531 mo
-210 107.531 li
@
-210 107.531 mo
-209.039 107.531 li
@
-209.039 107.531 mo
-208.078 107.531 li
@
-208.078 107.531 mo
-207.238 107.531 li
@
-207.238 107.531 mo
-206.281 107.531 li
@
-206.281 107.531 mo
-205.32 107.531 li
@
-205.32 107.531 mo
-204.48 107.531 li
@
-204.48 107.531 mo
-203.52 107.531 li
@
-203.52 107.531 mo
-202.559 107.531 li
@
-202.559 107.531 mo
-201.719 107.531 li
@
-201.719 107.531 mo
-200.762 107.531 li
@
-200.762 107.531 mo
-199.801 107.531 li
@
-199.801 107.531 mo
-198.84 107.531 li
@
-198.84 107.531 mo
-198 107.531 li
@
-198 107.531 mo
-197.039 107.531 li
@
-197.039 107.531 mo
-196.078 107.531 li
@
-196.078 107.531 mo
-195.238 107.531 li
@
-195.238 107.531 mo
-194.281 107.531 li
@
-194.281 107.531 mo
-193.32 107.531 li
@
-193.32 107.531 mo
-192.359 107.531 li
@
-192.359 107.531 mo
-191.52 107.531 li
@
-191.52 107.531 mo
-190.559 107.531 li
@
-190.559 107.531 mo
-189.602 107.531 li
@
-189.602 107.531 mo
-188.762 107.531 li
@
-188.762 107.531 mo
-187.801 107.531 li
@
-187.801 107.531 mo
-186.84 107.531 li
@
-186.84 107.531 mo
-185.879 107.531 li
@
-185.879 107.531 mo
-185.039 107.531 li
@
-185.039 107.531 mo
-184.078 107.531 li
@
-184.078 107.531 mo
-183.121 107.531 li
@
-183.121 107.531 mo
-182.281 107.531 li
@
-182.281 107.531 mo
-181.32 107.531 li
@
-181.32 107.531 mo
-180.359 107.531 li
@
-180.359 107.531 mo
-179.398 107.531 li
@
-179.398 107.531 mo
-178.559 107.531 li
@
-178.559 107.531 mo
-177.602 107.531 li
@
-177.602 107.531 mo
-176.641 107.531 li
@
-176.641 107.531 mo
-175.801 107.531 li
@
-175.801 107.531 mo
-174.84 107.531 li
@
-174.84 107.531 mo
-173.879 107.531 li
@
-173.879 107.531 mo
-173.039 107.531 li
@
-173.039 107.531 mo
-172.078 107.531 li
@
-172.078 107.531 mo
-171.121 107.531 li
@
-171.121 107.531 mo
-170.16 107.531 li
@
-170.16 107.531 mo
-169.32 107.531 li
@
-169.32 107.531 mo
-168.359 107.531 li
@
-168.359 107.531 mo
-167.398 107.531 li
@
-167.398 107.531 mo
-166.559 107.531 li
@
-166.559 107.531 mo
-165.602 107.531 li
@
-165.602 107.531 mo
-164.641 107.531 li
@
-164.641 107.531 mo
-163.68 107.531 li
@
-163.68 107.531 mo
-162.84 107.531 li
@
-162.84 107.531 mo
-161.879 107.531 li
@
-161.879 107.531 mo
-160.922 107.531 li
@
-160.922 107.531 mo
-160.078 107.531 li
@
-160.078 107.531 mo
-159.121 107.531 li
@
-159.121 107.531 mo
-158.16 107.531 li
@
-158.16 107.531 mo
-157.199 107.531 li
@
-157.199 107.531 mo
-156.359 107.531 li
@
-156.359 107.531 mo
-155.398 107.531 li
@
-155.398 107.531 mo
-154.441 107.531 li
@
-154.441 107.531 mo
-153.602 107.531 li
@
-153.602 107.531 mo
-152.641 107.531 li
@
-152.641 107.531 mo
-151.68 107.531 li
@
-151.68 107.531 mo
-150.719 107.531 li
@
-150.719 107.531 mo
-149.879 107.531 li
@
-149.879 107.531 mo
-148.922 107.531 li
@
-148.922 107.531 mo
-147.961 107.531 li
@
-147.961 107.531 mo
-147.121 107.531 li
@
-147.121 107.531 mo
-146.16 107.531 li
@
-146.16 107.531 mo
-145.199 107.531 li
@
-145.199 107.531 mo
-144.359 107.531 li
@
-144.359 107.531 mo
-143.398 107.531 li
@
-143.398 107.531 mo
-142.441 107.531 li
@
-142.441 107.531 mo
-141.48 107.531 li
@
-141.48 107.531 mo
-140.641 107.531 li
@
-140.641 107.531 mo
-139.68 107.531 li
@
-139.68 107.531 mo
-138.719 107.531 li
@
-138.719 107.531 mo
-137.879 107.531 li
@
-137.879 107.531 mo
-136.922 107.531 li
@
-136.922 107.531 mo
-135.961 107.531 li
@
-135.961 107.531 mo
-135 107.531 li
@
-135 107.531 mo
-134.16 107.531 li
@
-134.16 107.531 mo
-133.199 107.531 li
@
-133.199 107.531 mo
-132.238 107.531 li
@
-132.238 107.531 mo
-131.398 107.531 li
@
-131.398 107.531 mo
-130.441 107.531 li
@
-130.441 107.531 mo
-129.48 107.531 li
@
-129.48 107.531 mo
-128.52 107.531 li
@
-128.52 107.531 mo
-127.68 107.531 li
@
-127.68 107.531 mo
-126.719 107.531 li
@
-126.719 107.531 mo
-125.762 107.531 li
@
-125.762 107.531 mo
-124.922 107.531 li
@
-124.922 107.531 mo
-123.961 107.531 li
@
-123.961 107.531 mo
-123 107.531 li
@
-123 107.531 mo
-122.039 107.531 li
@
-122.039 107.531 mo
-121.199 107.531 li
@
-121.199 107.531 mo
-120.238 107.531 li
@
-120.238 107.531 mo
-119.281 107.531 li
@
-119.281 107.531 mo
-118.441 107.531 li
@
-118.441 107.531 mo
-117.48 107.531 li
@
-117.48 107.531 mo
-116.52 107.531 li
@
-116.52 107.531 mo
-115.68 107.531 li
@
-115.68 107.531 mo
-114.719 107.531 li
@
-114.719 107.531 mo
-113.762 107.531 li
@
-113.762 107.531 mo
-112.801 107.531 li
@
-112.801 107.531 mo
-111.961 107.531 li
@
-111.961 107.531 mo
-111 107.531 li
@
-111 107.531 mo
-110.039 107.531 li
@
-110.039 107.531 mo
-109.801 106.453 li
@
-109.801 106.453 mo
-108.84 106.453 li
@
-108.84 106.453 mo
-107.879 106.453 li
@
-107.879 106.453 mo
-106.922 106.453 li
@
-106.922 106.453 mo
-106.078 106.453 li
@
-106.078 106.453 mo
-105.121 106.453 li
@
-105.121 106.453 mo
-104.16 106.453 li
@
-104.16 106.453 mo
-103.32 106.453 li
@
-103.32 106.453 mo
-102.359 106.453 li
@
-102.359 106.453 mo
-101.398 106.453 li
@
-101.398 106.453 mo
-100.441 106.453 li
@
-100.441 106.453 mo
-99.602 106.453 li
@
-99.602 106.453 mo
-98.641 106.453 li
@
-98.641 106.453 mo
-97.68 106.453 li
@
-97.68 106.453 mo
-96.84 106.453 li
@
-96.84 106.453 mo
-95.879 106.453 li
@
-95.879 106.453 mo
-94.922 106.453 li
@
-94.922 106.453 mo
-93.961 106.453 li
@
-93.961 106.453 mo
-93.121 106.453 li
@
-93.121 106.453 mo
-92.16 106.453 li
@
-92.16 106.453 mo
-91.199 106.453 li
@
-91.199 106.453 mo
-90.359 106.453 li
@
-90.359 106.453 mo
-89.398 106.453 li
@
-89.398 106.453 mo
-88.441 106.453 li
@
-88.441 106.453 mo
-87.48 106.453 li
@
-87.48 106.453 mo
-86.641 106.453 li
@
-86.641 106.453 mo
-85.68 106.453 li
@
-85.68 106.453 mo
-84.719 106.453 li
@
-84.719 106.453 mo
-83.879 106.453 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.398 108.73 li
@
-233.398 108.73 mo
-232.441 108.73 li
@
-232.441 108.73 mo
-231.48 108.73 li
@
-231.48 108.73 mo
-230.641 108.73 li
@
-230.641 108.73 mo
-229.68 108.73 li
@
-229.68 108.73 mo
-228.719 108.73 li
@
-228.719 108.73 mo
-227.879 108.73 li
@
-227.879 108.73 mo
-226.922 108.73 li
@
-226.922 108.73 mo
-225.961 108.73 li
@
-225.961 108.73 mo
-225.121 108.73 li
@
-225.121 108.73 mo
-224.16 108.73 li
@
-224.16 108.73 mo
-223.199 108.73 li
@
-223.199 108.73 mo
-222.238 108.73 li
@
-222.238 108.73 mo
-221.398 108.73 li
@
-221.398 108.73 mo
-220.441 108.73 li
@
-220.441 108.73 mo
-219.48 108.73 li
@
-219.48 108.73 mo
-218.641 108.73 li
@
-218.641 108.73 mo
-217.68 108.73 li
@
-217.68 108.73 mo
-216.719 108.73 li
@
-216.719 108.73 mo
-215.762 108.73 li
@
-215.762 108.73 mo
-214.922 108.73 li
@
-214.922 108.73 mo
-213.961 108.73 li
@
-213.961 108.73 mo
-213 108.73 li
@
-213 108.73 mo
-212.16 108.73 li
@
-212.16 108.73 mo
-211.199 108.73 li
@
-211.199 108.73 mo
-210.238 108.73 li
@
-210.238 108.73 mo
-209.281 108.73 li
@
-209.281 108.73 mo
-208.441 108.73 li
@
-208.441 108.73 mo
-207.48 108.73 li
@
-207.48 108.73 mo
-206.52 108.73 li
@
-206.52 108.73 mo
-205.68 108.73 li
@
-205.68 108.73 mo
-204.719 108.73 li
@
-204.719 108.73 mo
-203.762 108.73 li
@
-203.762 108.73 mo
-202.801 108.73 li
@
-202.801 108.73 mo
-201.961 108.73 li
@
-201.961 108.73 mo
-201 108.73 li
@
-201 108.73 mo
-200.039 108.73 li
@
-200.039 108.73 mo
-199.199 108.73 li
@
-199.199 108.73 mo
-198.238 108.73 li
@
-198.238 108.73 mo
-197.281 108.73 li
@
-197.281 108.73 mo
-196.441 108.73 li
@
-196.441 108.73 mo
-195.48 108.73 li
@
-195.48 108.73 mo
-194.52 108.73 li
@
-194.52 108.73 mo
-193.559 108.73 li
@
-193.559 108.73 mo
-192.719 108.73 li
@
-192.719 108.73 mo
-191.762 108.73 li
@
-191.762 108.73 mo
-190.801 108.73 li
@
-190.801 108.73 mo
-189.961 108.73 li
@
-189.961 108.73 mo
-189 108.73 li
@
-189 108.73 mo
-188.039 108.73 li
@
-188.039 108.73 mo
-187.078 108.73 li
@
-187.078 108.73 mo
-186.238 108.73 li
@
-186.238 108.73 mo
-185.281 108.73 li
@
-185.281 108.73 mo
-184.32 108.73 li
@
-184.32 108.73 mo
-183.48 108.73 li
@
-183.48 108.73 mo
-182.52 108.73 li
@
-182.52 108.73 mo
-181.559 108.73 li
@
-181.559 108.73 mo
-180.602 108.73 li
@
-180.602 108.73 mo
-179.762 108.73 li
@
-179.762 108.73 mo
-178.801 108.73 li
@
-178.801 108.73 mo
-177.84 108.73 li
@
-177.84 108.73 mo
-177.121 107.531 li
@
-177.121 107.531 mo
-176.16 107.531 li
@
-176.16 107.531 mo
-175.32 107.531 li
@
-175.32 107.531 mo
-174.359 107.531 li
@
-174.359 107.531 mo
-173.398 107.531 li
@
-173.398 107.531 mo
-172.441 107.531 li
@
-172.441 107.531 mo
-171.602 107.531 li
@
-171.602 107.531 mo
-170.641 107.531 li
@
-170.641 107.531 mo
-169.68 107.531 li
@
-169.68 107.531 mo
-168.84 107.531 li
@
-168.84 107.531 mo
-167.879 107.531 li
@
-167.879 107.531 mo
-166.922 107.531 li
@
-166.922 107.531 mo
-165.961 107.531 li
@
-165.961 107.531 mo
-165.121 107.531 li
@
-165.121 107.531 mo
-164.16 107.531 li
@
-164.16 107.531 mo
-163.199 107.531 li
@
-163.199 107.531 mo
-162.359 107.531 li
@
-162.359 107.531 mo
-161.398 107.531 li
@
-161.398 107.531 mo
-160.441 107.531 li
@
-160.441 107.531 mo
-159.48 107.531 li
@
-159.48 107.531 mo
-158.641 107.531 li
@
-158.641 107.531 mo
-157.68 107.531 li
@
-157.68 107.531 mo
-156.719 107.531 li
@
-156.719 107.531 mo
-155.879 107.531 li
@
-155.879 107.531 mo
-154.922 107.531 li
@
-154.922 107.531 mo
-153.961 107.531 li
@
-153.961 107.531 mo
-153.121 107.531 li
@
-153.121 107.531 mo
-152.16 107.531 li
@
-152.16 107.531 mo
-151.199 107.531 li
@
-151.199 107.531 mo
-150.238 107.531 li
@
-150.238 107.531 mo
-149.398 107.531 li
@
-149.398 107.531 mo
-148.441 107.531 li
@
-148.441 107.531 mo
-147.48 107.531 li
@
-147.48 107.531 mo
-146.641 107.531 li
@
-146.641 107.531 mo
-145.68 107.531 li
@
-145.68 107.531 mo
-144.719 107.531 li
@
-144.719 107.531 mo
-143.762 107.531 li
@
-143.762 107.531 mo
-142.922 107.531 li
@
-142.922 107.531 mo
-141.961 107.531 li
@
-141.961 107.531 mo
-141 107.531 li
@
-141 107.531 mo
-140.16 107.531 li
@
-140.16 107.531 mo
-139.199 107.531 li
@
-139.199 107.531 mo
-138.238 107.531 li
@
-138.238 107.531 mo
-137.281 107.531 li
@
-137.281 107.531 mo
-136.441 107.531 li
@
-136.441 107.531 mo
-135.48 107.531 li
@
-135.48 107.531 mo
-134.52 107.531 li
@
-134.52 107.531 mo
-133.68 107.531 li
@
-133.68 107.531 mo
-132.719 107.531 li
@
-132.719 107.531 mo
-131.762 107.531 li
@
-131.762 107.531 mo
-130.801 107.531 li
@
-130.801 107.531 mo
-129.961 107.531 li
@
-129.961 107.531 mo
-129 107.531 li
@
-129 107.531 mo
-128.039 107.531 li
@
-128.039 107.531 mo
-127.199 107.531 li
@
-127.199 107.531 mo
-126.238 107.531 li
@
-126.238 107.531 mo
-125.281 107.531 li
@
-125.281 107.531 mo
-124.441 107.531 li
@
-124.441 107.531 mo
-123.48 107.531 li
@
-123.48 107.531 mo
-122.52 107.531 li
@
-122.52 107.531 mo
-121.559 107.531 li
@
-121.559 107.531 mo
-120.719 107.531 li
@
-120.719 107.531 mo
-119.762 107.531 li
@
-119.762 107.531 mo
-118.801 107.531 li
@
-118.801 107.531 mo
-117.961 107.531 li
@
-117.961 107.531 mo
-117 107.531 li
@
-117 107.531 mo
-116.039 107.531 li
@
-116.039 107.531 mo
-115.078 107.531 li
@
-115.078 107.531 mo
-114.238 107.531 li
@
-114.238 107.531 mo
-113.281 107.531 li
@
-113.281 107.531 mo
-112.32 107.531 li
@
-112.32 107.531 mo
-112.199 106.453 li
@
-112.199 106.453 mo
-111.238 106.453 li
@
-111.238 106.453 mo
-110.398 106.453 li
@
-110.398 106.453 mo
-109.441 106.453 li
@
-109.441 106.453 mo
-108.48 106.453 li
@
-108.48 106.453 mo
-107.52 106.453 li
@
-107.52 106.453 mo
-106.68 106.453 li
@
-106.68 106.453 mo
-105.719 106.453 li
@
-105.719 106.453 mo
-104.762 106.453 li
@
-104.762 106.453 mo
-103.922 106.453 li
@
-103.922 106.453 mo
-102.961 106.453 li
@
-102.961 106.453 mo
-102 106.453 li
@
-102 106.453 mo
-101.039 106.453 li
@
-101.039 106.453 mo
-100.199 106.453 li
@
-100.199 106.453 mo
-99.238 106.453 li
@
-99.238 106.453 mo
-98.281 106.453 li
@
-98.281 106.453 mo
-97.441 106.453 li
@
-97.441 106.453 mo
-96.48 106.453 li
@
-96.48 106.453 mo
-95.52 106.453 li
@
-95.52 106.453 mo
-94.559 106.453 li
@
-94.559 106.453 mo
-93.719 106.453 li
@
-93.719 106.453 mo
-92.762 106.453 li
@
-92.762 106.453 mo
-91.801 106.453 li
@
-91.801 106.453 mo
-90.961 106.453 li
@
-90.961 106.453 mo
-90 106.453 li
@
-90 106.453 mo
-89.039 106.453 li
@
-89.039 106.453 mo
-88.078 106.453 li
@
-88.078 106.453 mo
-87.238 106.453 li
@
-87.238 106.453 mo
-86.281 106.453 li
@
-86.281 106.453 mo
-85.32 106.453 li
@
-85.32 106.453 mo
-84.48 106.453 li
@
-84.48 106.453 mo
-83.52 106.453 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-229.199 108.73 li
@
-229.199 108.73 mo
-228.238 108.73 li
@
-228.238 108.73 mo
-227.281 108.73 li
@
-227.281 108.73 mo
-226.32 108.73 li
@
-226.32 108.73 mo
-225.48 108.73 li
@
-225.48 108.73 mo
-224.52 108.73 li
@
-224.52 108.73 mo
-223.559 108.73 li
@
-223.559 108.73 mo
-222.719 108.73 li
@
-222.719 108.73 mo
-221.762 108.73 li
@
-221.762 108.73 mo
-220.801 108.73 li
@
-220.801 108.73 mo
-219.84 108.73 li
@
-219.84 108.73 mo
-219 108.73 li
@
-219 108.73 mo
-218.039 108.73 li
@
-218.039 108.73 mo
-217.078 108.73 li
@
-217.078 108.73 mo
-216.238 108.73 li
@
-216.238 108.73 mo
-215.281 108.73 li
@
-215.281 108.73 mo
-214.32 108.73 li
@
-214.32 108.73 mo
-213.359 108.73 li
@
-213.359 108.73 mo
-212.52 108.73 li
@
-212.52 108.73 mo
-211.559 108.73 li
@
-211.559 108.73 mo
-210.602 108.73 li
@
-210.602 108.73 mo
-209.762 108.73 li
@
-209.762 108.73 mo
-208.801 108.73 li
@
-208.801 108.73 mo
-207.84 108.73 li
@
-207.84 108.73 mo
-207 108.73 li
@
-207 108.73 mo
-206.039 108.73 li
@
-206.039 108.73 mo
-205.078 108.73 li
@
-205.078 108.73 mo
-204.121 108.73 li
@
-204.121 108.73 mo
-203.281 108.73 li
@
-203.281 108.73 mo
-202.32 108.73 li
@
-202.32 108.73 mo
-201.359 108.73 li
@
-201.359 108.73 mo
-200.52 108.73 li
@
-200.52 108.73 mo
-199.559 108.73 li
@
-199.559 108.73 mo
-198.602 108.73 li
@
-198.602 108.73 mo
-197.641 108.73 li
@
-197.641 108.73 mo
-196.801 108.73 li
@
-196.801 108.73 mo
-195.84 108.73 li
@
-195.84 108.73 mo
-194.879 108.73 li
@
-194.879 108.73 mo
-194.039 108.73 li
@
-194.039 108.73 mo
-193.078 108.73 li
@
-193.078 108.73 mo
-192.121 108.73 li
@
-192.121 108.73 mo
-191.16 108.73 li
@
-191.16 108.73 mo
-191.16 107.531 li
@
-191.16 107.531 mo
-190.199 107.531 li
@
-190.199 107.531 mo
-189.359 107.531 li
@
-189.359 107.531 mo
-188.398 107.531 li
@
-188.398 107.531 mo
-187.441 107.531 li
@
-187.441 107.531 mo
-186.48 107.531 li
@
-186.48 107.531 mo
-185.641 107.531 li
@
-185.641 107.531 mo
-184.68 107.531 li
@
-184.68 107.531 mo
-183.719 107.531 li
@
-183.719 107.531 mo
-182.879 107.531 li
@
-182.879 107.531 mo
-181.922 107.531 li
@
-181.922 107.531 mo
-180.961 107.531 li
@
-180.961 107.531 mo
-180 107.531 li
@
-180 107.531 mo
-179.16 107.531 li
@
-179.16 107.531 mo
-178.199 107.531 li
@
-178.199 107.531 mo
-177.238 107.531 li
@
-177.238 107.531 mo
-176.398 107.531 li
@
-176.398 107.531 mo
-175.441 107.531 li
@
-175.441 107.531 mo
-174.48 107.531 li
@
-174.48 107.531 mo
-173.641 107.531 li
@
-173.641 107.531 mo
-172.68 107.531 li
@
-172.68 107.531 mo
-171.719 107.531 li
@
-171.719 107.531 mo
-170.762 107.531 li
@
-170.762 107.531 mo
-169.922 107.531 li
@
-169.922 107.531 mo
-168.961 107.531 li
@
-168.961 107.531 mo
-168 107.531 li
@
-168 107.531 mo
-167.16 107.531 li
@
-167.16 107.531 mo
-166.199 107.531 li
@
-166.199 107.531 mo
-165.238 107.531 li
@
-165.238 107.531 mo
-164.281 107.531 li
@
-164.281 107.531 mo
-163.441 107.531 li
@
-163.441 107.531 mo
-162.48 107.531 li
@
-162.48 107.531 mo
-161.52 107.531 li
@
-161.52 107.531 mo
-160.68 107.531 li
@
-160.68 107.531 mo
-159.961 106.453 li
@
-159.961 106.453 mo
-159 106.453 li
@
-159 106.453 mo
-158.16 106.453 li
@
-158.16 106.453 mo
-157.199 106.453 li
@
-157.199 106.453 mo
-156.238 106.453 li
@
-156.238 106.453 mo
-155.398 106.453 li
@
-155.398 106.453 mo
-154.441 106.453 li
@
-154.441 106.453 mo
-153.48 106.453 li
@
-153.48 106.453 mo
-152.52 106.453 li
@
-152.52 106.453 mo
-151.68 106.453 li
@
-151.68 106.453 mo
-150.719 106.453 li
@
-150.719 106.453 mo
-149.762 106.453 li
@
-149.762 106.453 mo
-148.922 106.453 li
@
-148.922 106.453 mo
-147.961 106.453 li
@
-147.961 106.453 mo
-147 106.453 li
@
-147 106.453 mo
-146.039 106.453 li
@
-146.039 106.453 mo
-145.199 106.453 li
@
-145.199 106.453 mo
-144.238 106.453 li
@
-144.238 106.453 mo
-143.281 106.453 li
@
-143.281 106.453 mo
-142.441 106.453 li
@
-142.441 106.453 mo
-141.48 106.453 li
@
-141.48 106.453 mo
-140.52 106.453 li
@
-140.52 106.453 mo
-139.68 106.453 li
@
-139.68 106.453 mo
-138.719 106.453 li
@
-138.719 106.453 mo
-137.762 106.453 li
@
-137.762 106.453 mo
-137.281 105.25 li
@
-137.281 105.25 mo
-136.32 105.25 li
@
-136.32 105.25 mo
-135.48 105.25 li
@
-135.48 105.25 mo
-134.52 105.25 li
@
-134.52 105.25 mo
-133.559 105.25 li
@
-133.559 105.25 mo
-133.078 104.051 li
@
-133.078 104.051 mo
-132.121 104.051 li
@
-132.121 104.051 mo
-131.16 104.051 li
@
-131.16 104.051 mo
-130.32 104.051 li
@
-130.32 104.051 mo
-129.359 104.051 li
@
-129.359 104.051 mo
-128.762 102.973 li
@
-128.762 102.973 mo
-127.801 102.973 li
@
-127.801 102.973 mo
-126.84 102.973 li
@
-126.84 102.973 mo
-126 102.973 li
@
-126 102.973 mo
-125.039 102.973 li
@
-125.039 102.973 mo
-124.078 102.973 li
@
-124.078 102.973 mo
-123.238 102.973 li
@
-123.238 102.973 mo
-122.281 102.973 li
@
-122.281 102.973 mo
-121.32 102.973 li
@
-121.32 102.973 mo
-120.359 102.973 li
@
-120.359 102.973 mo
-119.52 102.973 li
@
-119.52 102.973 mo
-118.559 102.973 li
@
-118.559 102.973 mo
-117.602 102.973 li
@
-117.602 102.973 mo
-116.762 102.973 li
@
-116.762 102.973 mo
-115.801 102.973 li
@
-115.801 102.973 mo
-114.84 102.973 li
@
-114.84 102.973 mo
-113.879 102.973 li
@
-113.879 102.973 mo
-113.039 102.973 li
@
-113.039 102.973 mo
-112.078 102.973 li
@
-112.078 102.973 mo
-111.121 102.973 li
@
-111.121 102.973 mo
-111 101.773 li
@
-111 101.773 mo
-110.039 101.773 li
@
-110.039 101.773 mo
-109.199 101.773 li
@
-109.199 101.773 mo
-108.238 101.773 li
@
-108.238 101.773 mo
-107.281 101.773 li
@
-107.281 101.773 mo
-106.32 101.773 li
@
-106.32 101.773 mo
-105.48 101.773 li
@
-105.48 101.773 mo
-104.52 101.773 li
@
-104.52 101.773 mo
-103.559 101.773 li
@
-103.559 101.773 mo
-102.719 101.773 li
@
-102.719 101.773 mo
-101.762 101.773 li
@
-101.762 101.773 mo
-100.801 101.773 li
@
-100.801 101.773 mo
-99.84 101.773 li
@
-99.84 101.773 mo
-99 101.773 li
@
-99 101.773 mo
-98.039 101.773 li
@
-98.039 101.773 mo
-97.078 101.773 li
@
-97.078 101.773 mo
-96.238 101.773 li
@
-96.238 101.773 mo
-95.281 101.773 li
@
-95.281 101.773 mo
-94.32 101.773 li
@
-94.32 101.773 mo
-93.359 101.773 li
@
-93.359 101.773 mo
-92.52 101.773 li
@
-92.52 101.773 mo
-91.559 101.773 li
@
-91.559 101.773 mo
-90.602 101.773 li
@
-90.602 101.773 mo
-89.762 101.773 li
@
-89.762 101.773 mo
-88.801 101.773 li
@
-88.801 101.773 mo
-87.84 101.773 li
@
-87.84 101.773 mo
-87 101.773 li
@
-87 101.773 mo
-86.039 101.773 li
@
-86.039 101.773 mo
-85.078 101.773 li
@
-85.078 101.773 mo
-84.121 101.773 li
@
-84.121 101.773 mo
-83.281 101.773 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-233.281 109.813 li
@
-233.281 109.813 mo
-232.32 109.813 li
@
-232.32 109.813 mo
-231.48 109.813 li
@
-231.48 109.813 mo
-230.52 109.813 li
@
-230.52 109.813 mo
-229.559 109.813 li
@
-229.559 109.813 mo
-228.602 109.813 li
@
-228.602 109.813 mo
-227.762 109.813 li
@
-227.762 109.813 mo
-227.281 108.73 li
@
-227.281 108.73 mo
-226.32 108.73 li
@
-226.32 108.73 mo
-226.078 107.531 li
@
-226.078 107.531 mo
-225.121 107.531 li
@
-225.121 107.531 mo
-224.281 106.453 li
@
-224.281 106.453 mo
-223.32 106.453 li
@
-223.32 106.453 mo
-222.961 105.25 li
@
-222.961 105.25 mo
-222.121 105.25 li
@
-222.121 105.25 mo
-221.16 105.25 li
@
-221.16 105.25 mo
-220.199 105.25 li
@
-220.199 105.25 mo
-219.961 104.051 li
@
-219.961 104.051 mo
-219 104.051 li
@
-219 104.051 mo
-218.039 104.051 li
@
-218.039 104.051 mo
-217.199 104.051 li
@
-217.199 104.051 mo
-216.238 104.051 li
@
-216.238 104.051 mo
-215.641 102.973 li
@
-215.641 102.973 mo
-214.68 102.973 li
@
-214.68 102.973 mo
-213.84 101.773 li
@
-213.84 101.773 mo
-213.238 100.691 li
@
-213.238 100.691 mo
-212.641 99.492 li
@
-212.641 99.492 mo
-211.68 99.492 li
@
-211.68 99.492 mo
-210.719 99.492 li
@
-210.719 99.492 mo
-209.879 99.492 li
@
-209.879 99.492 mo
-208.922 99.492 li
@
-208.922 99.492 mo
-207.961 99.492 li
@
-207.961 99.492 mo
-207 99.492 li
@
-207 99.492 mo
-206.16 99.492 li
@
-206.16 99.492 mo
-205.199 99.492 li
@
-205.199 99.492 mo
-204.238 99.492 li
@
-204.238 99.492 mo
-203.398 99.492 li
@
-203.398 99.492 mo
-202.441 99.492 li
@
-202.441 99.492 mo
-201.48 99.492 li
@
-201.48 99.492 mo
-200.52 99.492 li
@
-200.52 99.492 mo
-199.68 99.492 li
@
-199.68 99.492 mo
-198.719 99.492 li
@
-198.719 99.492 mo
-197.762 99.492 li
@
-197.762 99.492 mo
-196.922 99.492 li
@
-196.922 99.492 mo
-195.961 99.492 li
@
-195.961 99.492 mo
-195 99.492 li
@
-195 99.492 mo
-194.039 99.492 li
@
-194.039 99.492 mo
-193.199 99.492 li
@
-193.199 99.492 mo
-192.238 99.492 li
@
-192.238 99.492 mo
-191.281 99.492 li
@
-191.281 99.492 mo
-190.441 99.492 li
@
-190.441 99.492 mo
-189.48 99.492 li
@
-189.48 99.492 mo
-188.52 99.492 li
@
-188.52 99.492 mo
-187.68 99.492 li
@
-187.68 99.492 mo
-186.719 99.492 li
@
-186.719 99.492 mo
-185.762 99.492 li
@
-185.762 99.492 mo
-184.801 99.492 li
@
-184.801 99.492 mo
-184.441 98.293 li
@
-184.441 98.293 mo
-183.48 98.293 li
@
-183.48 98.293 mo
-182.641 98.293 li
@
-182.641 98.293 mo
-181.68 98.293 li
@
-181.68 98.293 mo
-180.719 98.293 li
@
-180.719 98.293 mo
-179.879 98.293 li
@
-179.879 98.293 mo
-178.922 98.293 li
@
-178.922 98.293 mo
-178.32 97.211 li
@
-178.32 97.211 mo
-177.359 97.211 li
@
-177.359 97.211 mo
-176.52 97.211 li
@
-176.52 97.211 mo
-175.922 96.012 li
@
-175.922 96.012 mo
-174.961 96.012 li
@
-174.961 96.012 mo
-174 96.012 li
@
-174 96.012 mo
-173.039 96.012 li
@
-173.039 96.012 mo
-172.199 96.012 li
@
-172.199 96.012 mo
-171.238 96.012 li
@
-171.238 96.012 mo
-170.281 96.012 li
@
-170.281 96.012 mo
-169.441 96.012 li
@
-169.441 96.012 mo
-169.078 94.934 li
@
-169.078 94.934 mo
-168.238 94.934 li
@
-168.238 94.934 mo
-167.281 94.934 li
@
-167.281 94.934 mo
-166.32 94.934 li
@
-166.32 94.934 mo
-165.359 94.934 li
@
-165.359 94.934 mo
-164.52 94.934 li
@
-164.52 94.934 mo
-163.559 94.934 li
@
-163.559 94.934 mo
-162.602 94.934 li
@
-162.602 94.934 mo
-161.762 94.934 li
@
-161.762 94.934 mo
-160.801 94.934 li
@
-160.801 94.934 mo
-159.84 94.934 li
@
-159.84 94.934 mo
-159 94.934 li
@
-159 94.934 mo
-158.039 94.934 li
@
-158.039 94.934 mo
-157.559 93.73 li
@
-157.559 93.73 mo
-156.602 93.73 li
@
-156.602 93.73 mo
-155.641 93.73 li
@
-155.641 93.73 mo
-154.801 93.73 li
@
-154.801 93.73 mo
-153.84 93.73 li
@
-153.84 93.73 mo
-152.879 93.73 li
@
-152.879 93.73 mo
-151.922 92.652 li
@
-151.922 92.652 mo
-151.078 92.652 li
@
-151.078 92.652 mo
-150.121 92.652 li
@
-150.121 92.652 mo
-149.52 91.453 li
@
-149.52 91.453 mo
-148.559 91.453 li
@
-148.559 91.453 mo
-148.32 90.25 li
@
-148.32 90.25 mo
-147.359 90.25 li
@
-147.359 90.25 mo
-146.52 89.172 li
@
-146.52 89.172 mo
-145.559 89.172 li
@
-145.559 89.172 mo
-144.602 89.172 li
@
-144.602 89.172 mo
-143.762 89.172 li
@
-143.762 89.172 mo
-143.398 87.973 li
@
-143.398 87.973 mo
-142.559 87.973 li
@
-142.559 87.973 mo
-141.602 87.973 li
@
-141.602 87.973 mo
-140.641 87.973 li
@
-140.641 87.973 mo
-139.68 87.973 li
@
-139.68 87.973 mo
-138.84 87.973 li
@
-138.84 87.973 mo
-137.879 87.973 li
@
-137.879 87.973 mo
-136.922 87.973 li
@
-136.922 87.973 mo
-136.68 86.891 li
@
-136.68 86.891 mo
-135.719 86.891 li
@
-135.719 86.891 mo
-134.879 86.891 li
@
-134.879 86.891 mo
-133.922 86.891 li
@
-133.922 86.891 mo
-132.961 86.891 li
@
-132.961 86.891 mo
-132 86.891 li
@
-132 86.891 mo
-131.16 86.891 li
@
-131.16 86.891 mo
-130.559 85.691 li
@
-130.559 85.691 mo
-129.719 85.691 li
@
-129.719 85.691 mo
-128.762 85.691 li
@
-128.762 85.691 mo
-127.801 85.691 li
@
-127.801 85.691 mo
-126.84 85.691 li
@
-126.84 85.691 mo
-126 85.691 li
@
-126 85.691 mo
-125.039 85.691 li
@
-125.039 85.691 mo
-124.441 84.492 li
@
-124.441 84.492 mo
-123.48 84.492 li
@
-123.48 84.492 mo
-122.641 84.492 li
@
-122.641 84.492 mo
-121.68 84.492 li
@
-121.68 84.492 mo
-120.719 84.492 li
@
-120.719 84.492 mo
-119.762 84.492 li
@
-119.762 84.492 mo
-118.922 84.492 li
@
-118.922 84.492 mo
-117.961 84.492 li
@
-117.961 84.492 mo
-117 84.492 li
@
-117 84.492 mo
-116.16 84.492 li
@
-116.16 84.492 mo
-115.199 84.492 li
@
-115.199 84.492 mo
-114.238 84.492 li
@
-114.238 84.492 mo
-113.281 84.492 li
@
-113.281 84.492 mo
-112.441 84.492 li
@
-112.441 84.492 mo
-112.199 83.293 li
@
-112.199 83.293 mo
-111.238 83.293 li
@
-111.238 83.293 mo
-110.398 83.293 li
@
-110.398 83.293 mo
-109.441 83.293 li
@
-109.441 83.293 mo
-108.602 82.211 li
@
-108.602 82.211 mo
-107.641 82.211 li
@
-107.641 82.211 mo
-106.68 82.211 li
@
-106.68 82.211 mo
-105.719 82.211 li
@
-105.719 82.211 mo
-105.48 81.012 li
@
-105.48 81.012 mo
-104.52 81.012 li
@
-104.52 81.012 mo
-103.559 81.012 li
@
-103.559 81.012 mo
-102.719 81.012 li
@
-102.719 81.012 mo
-101.762 81.012 li
@
-101.762 81.012 mo
-100.801 81.012 li
@
-100.801 81.012 mo
-99.84 81.012 li
@
-99.84 81.012 mo
-99 81.012 li
@
-99 81.012 mo
-98.039 79.934 li
@
-98.039 79.934 mo
-97.199 79.934 li
@
-97.199 79.934 mo
-96.238 79.934 li
@
-96.238 79.934 mo
-95.281 79.934 li
@
-95.281 79.934 mo
-94.441 79.934 li
@
-94.441 79.934 mo
-93.48 79.934 li
@
-93.48 79.934 mo
-92.52 79.934 li
@
-92.52 79.934 mo
-91.68 79.934 li
@
-91.68 79.934 mo
-90.719 79.934 li
@
-90.719 79.934 mo
-89.762 79.934 li
@
-89.762 79.934 mo
-88.801 79.934 li
@
-88.801 79.934 mo
-87.961 79.934 li
@
-87.961 79.934 mo
-87 79.934 li
@
-87 79.934 mo
-86.039 79.934 li
@
-86.039 79.934 mo
-85.801 78.73 li
@
-85.801 78.73 mo
-84.961 78.73 li
@
-84.961 78.73 mo
-84 78.73 li
@
-84 78.73 mo
-83.039 78.73 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-234 108.73 li
@
-234 108.73 mo
-233.16 108.73 li
@
-233.16 108.73 mo
-232.199 108.73 li
@
-232.199 108.73 mo
-231.238 108.73 li
@
-231.238 108.73 mo
-231 107.531 li
@
-231 107.531 mo
-230.398 106.453 li
@
-230.398 106.453 mo
-229.801 105.25 li
@
-229.801 105.25 mo
-228.84 105.25 li
@
-228.84 105.25 mo
-227.879 105.25 li
@
-227.879 105.25 mo
-226.922 105.25 li
@
-226.922 105.25 mo
-226.68 104.051 li
@
-226.68 104.051 mo
-225.719 104.051 li
@
-225.719 104.051 mo
-224.879 102.973 li
@
-224.879 102.973 mo
-223.922 102.973 li
@
-223.922 102.973 mo
-222.961 102.973 li
@
-222.961 102.973 mo
-222.121 102.973 li
@
-222.121 102.973 mo
-221.16 102.973 li
@
-221.16 102.973 mo
-220.199 102.973 li
@
-220.199 102.973 mo
-219.238 102.973 li
@
-219.238 102.973 mo
-218.398 102.973 li
@
-218.398 102.973 mo
-217.441 102.973 li
@
-217.441 102.973 mo
-216.48 102.973 li
@
-216.48 102.973 mo
-215.641 102.973 li
@
-215.641 102.973 mo
-214.68 102.973 li
@
-214.68 102.973 mo
-214.441 101.773 li
@
-214.441 101.773 mo
-213.48 101.773 li
@
-213.48 101.773 mo
-212.641 100.691 li
@
-212.641 100.691 mo
-211.68 100.691 li
@
-211.68 100.691 mo
-210.719 100.691 li
@
-210.719 100.691 mo
-209.879 100.691 li
@
-209.879 100.691 mo
-208.922 100.691 li
@
-208.922 100.691 mo
-207.961 100.691 li
@
-207.961 100.691 mo
-207 100.691 li
@
-207 100.691 mo
-206.398 99.492 li
@
-206.398 99.492 mo
-205.801 98.293 li
@
-205.801 98.293 mo
-204.961 98.293 li
@
-204.961 98.293 mo
-204 98.293 li
@
-204 98.293 mo
-203.039 98.293 li
@
-203.039 98.293 mo
-202.199 98.293 li
@
-202.199 98.293 mo
-201.238 98.293 li
@
-201.238 98.293 mo
-200.398 97.211 li
@
-200.398 97.211 mo
-199.801 96.012 li
@
-199.801 96.012 mo
-198.84 96.012 li
@
-198.84 96.012 mo
-198.48 94.934 li
@
-198.48 94.934 mo
-197.879 93.73 li
@
-197.879 93.73 mo
-197.039 93.73 li
@
-197.039 93.73 mo
-196.078 93.73 li
@
-196.078 93.73 mo
-195.121 93.73 li
@
-195.121 93.73 mo
-194.879 92.652 li
@
-194.879 92.652 mo
-193.922 92.652 li
@
-193.922 92.652 mo
-192.961 92.652 li
@
-192.961 92.652 mo
-192.121 92.652 li
@
-192.121 92.652 mo
-191.16 92.652 li
@
-191.16 92.652 mo
-190.199 92.652 li
@
-190.199 92.652 mo
-189.359 92.652 li
@
-189.359 92.652 mo
-188.398 92.652 li
@
-188.398 92.652 mo
-187.441 92.652 li
@
-187.441 92.652 mo
-186.961 91.453 li
@
-186.961 91.453 mo
-186 91.453 li
@
-186 91.453 mo
-185.039 91.453 li
@
-185.039 91.453 mo
-184.078 91.453 li
@
-184.078 91.453 mo
-183.238 91.453 li
@
-183.238 91.453 mo
-182.281 91.453 li
@
-182.281 91.453 mo
-181.32 90.25 li
@
-181.32 90.25 mo
-180.48 90.25 li
@
-180.48 90.25 mo
-179.52 90.25 li
@
-179.52 90.25 mo
-178.559 90.25 li
@
-178.559 90.25 mo
-177.719 90.25 li
@
-177.719 90.25 mo
-176.762 90.25 li
@
-176.762 90.25 mo
-175.801 90.25 li
@
-175.801 90.25 mo
-174.84 90.25 li
@
-174.84 90.25 mo
-174.719 89.172 li
@
-174.719 89.172 mo
-173.762 89.172 li
@
-173.762 89.172 mo
-172.801 89.172 li
@
-172.801 89.172 mo
-171.84 89.172 li
@
-171.84 89.172 mo
-171 89.172 li
@
-171 89.172 mo
-170.039 89.172 li
@
-170.039 89.172 mo
-169.078 89.172 li
@
-169.078 89.172 mo
-168.238 89.172 li
@
-168.238 89.172 mo
-167.281 89.172 li
@
-167.281 89.172 mo
-166.32 89.172 li
@
-166.32 89.172 mo
-165.359 89.172 li
@
-165.359 89.172 mo
-164.879 87.973 li
@
-164.879 87.973 mo
-164.16 86.891 li
@
-164.16 86.891 mo
-163.32 86.891 li
@
-163.32 86.891 mo
-163.078 85.691 li
@
-163.078 85.691 mo
-162.48 84.492 li
@
-162.48 84.492 mo
-161.52 84.492 li
@
-161.52 84.492 mo
-160.559 84.492 li
@
-160.559 84.492 mo
-160.559 83.293 li
@
-160.559 83.293 mo
-159.602 83.293 li
@
-159.602 83.293 mo
-158.762 83.293 li
@
-158.762 83.293 mo
-158.16 82.211 li
@
-158.16 82.211 mo
-157.199 82.211 li
@
-157.199 82.211 mo
-156.238 82.211 li
@
-156.238 82.211 mo
-155.398 82.211 li
@
-155.398 82.211 mo
-155.039 81.012 li
@
-155.039 81.012 mo
-154.199 81.012 li
@
-154.199 81.012 mo
-153.84 79.934 li
@
-153.84 79.934 mo
-152.879 79.934 li
@
-152.879 79.934 mo
-151.922 79.934 li
@
-151.922 79.934 mo
-151.078 79.934 li
@
-151.078 79.934 mo
-150.719 78.73 li
@
-150.719 78.73 mo
-149.879 78.73 li
@
-149.879 78.73 mo
-148.922 78.73 li
@
-148.922 78.73 mo
-147.961 78.73 li
@
-147.961 78.73 mo
-147.121 78.73 li
@
-147.121 78.73 mo
-146.16 78.73 li
@
-146.16 78.73 mo
-145.199 78.73 li
@
-145.199 78.73 mo
-144.359 78.73 li
@
-144.359 78.73 mo
-144 77.531 li
@
-144 77.531 mo
-143.16 77.531 li
@
-143.16 77.531 mo
-142.199 77.531 li
@
-142.199 77.531 mo
-141.238 77.531 li
@
-141.238 77.531 mo
-140.281 77.531 li
@
-140.281 77.531 mo
-139.68 76.453 li
@
-139.68 76.453 mo
-138.84 76.453 li
@
-138.84 76.453 mo
-137.879 76.453 li
@
-137.879 76.453 mo
-136.922 76.453 li
@
-136.922 76.453 mo
-136.078 76.453 li
@
-136.078 76.453 mo
-135.121 76.453 li
@
-135.121 76.453 mo
-134.16 76.453 li
@
-134.16 76.453 mo
-133.199 76.453 li
@
-133.199 76.453 mo
-132.359 76.453 li
@
-132.359 76.453 mo
-131.398 76.453 li
@
-131.398 76.453 mo
-130.559 75.25 li
@
-130.559 75.25 mo
-129.719 75.25 li
@
-129.719 75.25 mo
-128.762 75.25 li
@
-128.762 75.25 mo
-127.801 75.25 li
@
-127.801 75.25 mo
-126.84 75.25 li
@
-126.84 75.25 mo
-126 75.25 li
@
-126 75.25 mo
-125.039 75.25 li
@
-125.039 75.25 mo
-124.078 75.25 li
@
-124.078 75.25 mo
-123.84 74.172 li
@
-123.84 74.172 mo
-122.879 74.172 li
@
-122.879 74.172 mo
-122.039 74.172 li
@
-122.039 74.172 mo
-121.078 74.172 li
@
-121.078 74.172 mo
-120.121 74.172 li
@
-120.121 74.172 mo
-119.52 72.973 li
@
-119.52 72.973 mo
-118.559 72.973 li
@
-118.559 72.973 mo
-117.719 72.973 li
@
-117.719 72.973 mo
-116.762 72.973 li
@
-116.762 72.973 mo
-115.801 72.973 li
@
-115.801 72.973 mo
-114.961 72.973 li
@
-114.961 72.973 mo
-114 72.973 li
@
-114 72.973 mo
-113.039 72.973 li
@
-113.039 72.973 mo
-112.078 72.973 li
@
-112.078 72.973 mo
-111.238 72.973 li
@
-111.238 72.973 mo
-110.398 71.891 li
@
-110.398 71.891 mo
-109.441 71.891 li
@
-109.441 71.891 mo
-109.199 70.691 li
@
-109.199 70.691 mo
-108.238 70.691 li
@
-108.238 70.691 mo
-107.879 69.492 li
@
-107.879 69.492 mo
-106.922 69.492 li
@
-106.922 69.492 mo
-106.078 69.492 li
@
-106.078 69.492 mo
-105.121 69.492 li
@
-105.121 69.492 mo
-104.16 69.492 li
@
-104.16 69.492 mo
-103.32 69.492 li
@
-103.32 69.492 mo
-102.961 68.41 li
@
-102.961 68.41 mo
-102.121 68.41 li
@
-102.121 68.41 mo
-101.16 68.41 li
@
-101.16 68.41 mo
-100.199 68.41 li
@
-100.199 68.41 mo
-99.238 68.41 li
@
-99.238 68.41 mo
-98.398 68.41 li
@
-98.398 68.41 mo
-98.039 67.211 li
@
-98.039 67.211 mo
-97.199 67.211 li
@
-97.199 67.211 mo
-96.84 66.133 li
@
-96.84 66.133 mo
-96 66.133 li
@
-96 66.133 mo
-95.039 64.934 li
@
-95.039 64.934 mo
-94.078 64.934 li
@
-94.078 64.934 mo
-93.238 64.934 li
@
-93.238 64.934 mo
-92.281 64.934 li
@
-92.281 64.934 mo
-91.441 63.852 li
@
-91.441 63.852 mo
-90.48 63.852 li
@
-90.48 63.852 mo
-89.52 63.852 li
@
-89.52 63.852 mo
-88.68 63.852 li
@
-88.68 63.852 mo
-87.719 63.852 li
@
-87.719 63.852 mo
-86.762 63.852 li
@
-86.762 63.852 mo
-85.801 63.852 li
@
-85.801 63.852 mo
-84.961 63.852 li
@
-84.961 63.852 mo
-84 63.852 li
@
-84 63.852 mo
-83.039 63.852 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-234 108.73 li
@
-234 108.73 mo
-233.398 107.531 li
@
-233.398 107.531 mo
-232.801 106.453 li
@
-232.801 106.453 mo
-231.84 106.453 li
@
-231.84 106.453 mo
-231 105.25 li
@
-231 105.25 mo
-230.039 105.25 li
@
-230.039 105.25 mo
-229.078 105.25 li
@
-229.078 105.25 mo
-228.121 105.25 li
@
-228.121 105.25 mo
-227.281 105.25 li
@
-227.281 105.25 mo
-226.68 104.051 li
@
-226.68 104.051 mo
-225.719 104.051 li
@
-225.719 104.051 mo
-224.879 102.973 li
@
-224.879 102.973 mo
-223.922 102.973 li
@
-223.922 102.973 mo
-222.961 101.773 li
@
-222.961 101.773 mo
-222.121 101.773 li
@
-222.121 101.773 mo
-221.16 101.773 li
@
-221.16 101.773 mo
-220.199 101.773 li
@
-220.199 101.773 mo
-219.961 100.691 li
@
-219.961 100.691 mo
-219 100.691 li
@
-219 100.691 mo
-218.039 100.691 li
@
-218.039 100.691 mo
-217.199 100.691 li
@
-217.199 100.691 mo
-216.238 100.691 li
@
-216.238 100.691 mo
-215.281 100.691 li
@
-215.281 100.691 mo
-214.441 100.691 li
@
-214.441 100.691 mo
-213.48 100.691 li
@
-213.48 100.691 mo
-212.52 100.691 li
@
-212.52 100.691 mo
-212.039 99.492 li
@
-212.039 99.492 mo
-211.078 99.492 li
@
-211.078 99.492 mo
-210.121 98.293 li
@
-210.121 98.293 mo
-209.281 98.293 li
@
-209.281 98.293 mo
-208.32 98.293 li
@
-208.32 98.293 mo
-207.359 98.293 li
@
-207.359 98.293 mo
-206.398 98.293 li
@
-206.398 98.293 mo
-205.801 97.211 li
@
-205.801 97.211 mo
-204.961 97.211 li
@
-204.961 97.211 mo
-204.602 96.012 li
@
-204.602 96.012 mo
-203.762 96.012 li
@
-203.762 96.012 mo
-202.801 96.012 li
@
-202.801 96.012 mo
-202.199 94.934 li
@
-202.199 94.934 mo
-201.238 94.934 li
@
-201.238 94.934 mo
-201 93.73 li
@
-201 93.73 mo
-200.039 93.73 li
@
-200.039 93.73 mo
-199.078 93.73 li
@
-199.078 93.73 mo
-198.48 92.652 li
@
-198.48 92.652 mo
-197.641 92.652 li
@
-197.641 92.652 mo
-196.68 92.652 li
@
-196.68 92.652 mo
-196.078 91.453 li
@
-196.078 91.453 mo
-195.121 91.453 li
@
-195.121 91.453 mo
-194.879 90.25 li
@
-194.879 90.25 mo
-193.922 90.25 li
@
-193.922 90.25 mo
-192.961 90.25 li
@
-192.961 90.25 mo
-192.359 89.172 li
@
-192.359 89.172 mo
-191.52 89.172 li
@
-191.52 89.172 mo
-191.16 87.973 li
@
-191.16 87.973 mo
-190.199 87.973 li
@
-190.199 87.973 mo
-189.359 86.891 li
@
-189.359 86.891 mo
-188.398 86.891 li
@
-188.398 86.891 mo
-187.559 86.891 li
@
-187.559 86.891 mo
-186.602 86.891 li
@
-186.602 86.891 mo
-185.641 86.891 li
@
-185.641 86.891 mo
-184.68 86.891 li
@
-184.68 86.891 mo
-183.84 86.891 li
@
-183.84 86.891 mo
-183.238 85.691 li
@
-183.238 85.691 mo
-182.281 85.691 li
@
-182.281 85.691 mo
-181.32 85.691 li
@
-181.32 85.691 mo
-180.719 84.492 li
@
-180.719 84.492 mo
-180.121 83.293 li
@
-180.121 83.293 mo
-179.281 83.293 li
@
-179.281 83.293 mo
-178.32 83.293 li
@
-178.32 83.293 mo
-177.359 83.293 li
@
-177.359 83.293 mo
-176.52 82.211 li
@
-176.52 82.211 mo
-175.559 82.211 li
@
-175.559 82.211 mo
-175.32 81.012 li
@
-175.32 81.012 mo
-174.359 81.012 li
@
-174.359 81.012 mo
-174 79.934 li
@
-174 79.934 mo
-173.398 78.73 li
@
-173.398 78.73 mo
-172.441 78.73 li
@
-172.441 78.73 mo
-171.602 78.73 li
@
-171.602 78.73 mo
-170.641 78.73 li
@
-170.641 78.73 mo
-169.68 78.73 li
@
-169.68 78.73 mo
-168.84 78.73 li
@
-168.84 78.73 mo
-167.879 78.73 li
@
-167.879 78.73 mo
-166.922 78.73 li
@
-166.922 78.73 mo
-166.078 77.531 li
@
-166.078 77.531 mo
-165.48 76.453 li
@
-165.48 76.453 mo
-164.52 76.453 li
@
-164.52 76.453 mo
-163.68 76.453 li
@
-163.68 76.453 mo
-162.719 76.453 li
@
-162.719 76.453 mo
-161.762 76.453 li
@
-161.762 76.453 mo
-160.801 76.453 li
@
-160.801 76.453 mo
-159.961 75.25 li
@
-159.961 75.25 mo
-159 75.25 li
@
-159 75.25 mo
-158.16 75.25 li
@
-158.16 75.25 mo
-157.559 74.172 li
@
-157.559 74.172 mo
-156.602 74.172 li
@
-156.602 74.172 mo
-155.641 74.172 li
@
-155.641 74.172 mo
-154.801 74.172 li
@
-154.801 74.172 mo
-154.441 72.973 li
@
-154.441 72.973 mo
-153.48 72.973 li
@
-153.48 72.973 mo
-153.238 71.891 li
@
-153.238 71.891 mo
-152.641 70.691 li
@
-152.641 70.691 mo
-151.68 70.691 li
@
-151.68 70.691 mo
-151.32 69.492 li
@
-151.32 69.492 mo
-150.48 69.492 li
@
-150.48 69.492 mo
-149.52 69.492 li
@
-149.52 69.492 mo
-148.559 69.492 li
@
-148.559 69.492 mo
-148.32 68.41 li
@
-148.32 68.41 mo
-147.359 68.41 li
@
-147.359 68.41 mo
-146.52 67.211 li
@
-146.52 67.211 mo
-145.559 67.211 li
@
-145.559 67.211 mo
-144.602 67.211 li
@
-144.602 67.211 mo
-143.762 67.211 li
@
-143.762 67.211 mo
-142.801 67.211 li
@
-142.801 67.211 mo
-142.199 66.133 li
@
-142.199 66.133 mo
-141.602 64.934 li
@
-141.602 64.934 mo
-140.641 64.934 li
@
-140.641 64.934 mo
-140.398 63.852 li
@
-140.398 63.852 mo
-139.441 63.852 li
@
-139.441 63.852 mo
-138.48 63.852 li
@
-138.48 63.852 mo
-138.48 62.652 li
@
-138.48 62.652 mo
-137.641 62.652 li
@
-137.641 62.652 mo
-136.68 61.453 li
@
-136.68 61.453 mo
-135.719 61.453 li
@
-135.719 61.453 mo
-134.879 61.453 li
@
-134.879 61.453 mo
-133.922 61.453 li
@
-133.922 61.453 mo
-132.961 61.453 li
@
-132.961 61.453 mo
-132 61.453 li
@
-132 61.453 mo
-131.16 61.453 li
@
-131.16 61.453 mo
-130.199 61.453 li
@
-130.199 61.453 mo
-129.238 61.453 li
@
-129.238 61.453 mo
-128.398 61.453 li
@
-128.398 61.453 mo
-127.441 61.453 li
@
-127.441 61.453 mo
-126.48 61.453 li
@
-126.48 61.453 mo
-125.641 61.453 li
@
-125.641 61.453 mo
-124.68 61.453 li
@
-124.68 61.453 mo
-123.84 60.371 li
@
-123.84 60.371 mo
-122.879 60.371 li
@
-122.879 60.371 mo
-122.039 59.172 li
@
-122.039 59.172 mo
-121.078 59.172 li
@
-121.078 59.172 mo
-120.121 59.172 li
@
-120.121 59.172 mo
-119.16 59.172 li
@
-119.16 59.172 mo
-118.32 59.172 li
@
-118.32 59.172 mo
-117.359 59.172 li
@
-117.359 59.172 mo
-116.398 59.172 li
@
-116.398 59.172 mo
-115.559 59.172 li
@
-115.559 59.172 mo
-114.602 58.09 li
@
-114.602 58.09 mo
-113.762 58.09 li
@
-113.762 58.09 mo
-112.801 58.09 li
@
-112.801 58.09 mo
-111.84 58.09 li
@
-111.84 58.09 mo
-111 58.09 li
@
-111 58.09 mo
-110.039 58.09 li
@
-110.039 58.09 mo
-109.078 58.09 li
@
-109.078 58.09 mo
-108.602 56.891 li
@
-108.602 56.891 mo
-107.879 55.691 li
@
-107.879 55.691 mo
-106.922 55.691 li
@
-106.922 55.691 mo
-106.078 55.691 li
@
-106.078 55.691 mo
-105.121 55.691 li
@
-105.121 55.691 mo
-104.16 55.691 li
@
-104.16 55.691 mo
-103.32 55.691 li
@
-103.32 55.691 mo
-102.961 54.613 li
@
-102.961 54.613 mo
-102.121 54.613 li
@
-102.121 54.613 mo
-101.16 54.613 li
@
-101.16 54.613 mo
-100.199 54.613 li
@
-100.199 54.613 mo
-99.238 54.613 li
@
-99.238 54.613 mo
-98.398 54.613 li
@
-98.398 54.613 mo
-97.441 54.613 li
@
-97.441 54.613 mo
-96.48 54.613 li
@
-96.48 54.613 mo
-95.641 54.613 li
@
-95.641 54.613 mo
-95.039 53.41 li
@
-95.039 53.41 mo
-94.078 53.41 li
@
-94.078 53.41 mo
-93.238 52.332 li
@
-93.238 52.332 mo
-92.281 52.332 li
@
-92.281 52.332 mo
-91.32 52.332 li
@
-91.32 52.332 mo
-90.48 52.332 li
@
-90.48 52.332 mo
-89.52 52.332 li
@
-89.52 52.332 mo
-88.559 52.332 li
@
-88.559 52.332 mo
-87.602 52.332 li
@
-87.602 52.332 mo
-86.762 52.332 li
@
-86.762 52.332 mo
-85.801 51.133 li
@
-85.801 51.133 mo
-84.961 51.133 li
@
-84.961 51.133 mo
-84.602 50.051 li
@
-84.602 50.051 mo
-83.762 50.051 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-234 108.73 li
@
-234 108.73 mo
-233.398 107.531 li
@
-233.398 107.531 mo
-232.441 107.531 li
@
-232.441 107.531 mo
-232.199 106.453 li
@
-232.199 106.453 mo
-231.238 106.453 li
@
-231.238 106.453 mo
-230.398 105.25 li
@
-230.398 105.25 mo
-229.441 105.25 li
@
-229.441 105.25 mo
-228.48 105.25 li
@
-228.48 105.25 mo
-227.52 105.25 li
@
-227.52 105.25 mo
-226.68 104.051 li
@
-226.68 104.051 mo
-225.719 104.051 li
@
-225.719 104.051 mo
-224.879 104.051 li
@
-224.879 104.051 mo
-224.281 102.973 li
@
-224.281 102.973 mo
-223.32 102.973 li
@
-223.32 102.973 mo
-222.359 102.973 li
@
-222.359 102.973 mo
-221.52 102.973 li
@
-221.52 102.973 mo
-220.559 102.973 li
@
-220.559 102.973 mo
-219.602 102.973 li
@
-219.602 102.973 mo
-218.641 102.973 li
@
-218.641 102.973 mo
-217.801 102.973 li
@
-217.801 102.973 mo
-216.961 101.773 li
@
-216.961 101.773 mo
-216 101.773 li
@
-216 101.773 mo
-215.641 100.691 li
@
-215.641 100.691 mo
-214.68 100.691 li
@
-214.68 100.691 mo
-213.84 100.691 li
@
-213.84 100.691 mo
-212.879 100.691 li
@
-212.879 100.691 mo
-212.641 99.492 li
@
-212.641 99.492 mo
-211.68 99.492 li
@
-211.68 99.492 mo
-210.719 99.492 li
@
-210.719 99.492 mo
-209.879 99.492 li
@
-209.879 99.492 mo
-208.922 99.492 li
@
-208.922 99.492 mo
-207.961 99.492 li
@
-207.961 99.492 mo
-207 99.492 li
@
-207 99.492 mo
-206.16 99.492 li
@
-206.16 99.492 mo
-205.801 98.293 li
@
-205.801 98.293 mo
-204.961 98.293 li
@
-204.961 98.293 mo
-204.602 97.211 li
@
-204.602 97.211 mo
-203.762 97.211 li
@
-203.762 97.211 mo
-202.801 96.012 li
@
-202.801 96.012 mo
-201.84 96.012 li
@
-201.84 96.012 mo
-201 96.012 li
@
-201 96.012 mo
-200.039 96.012 li
@
-200.039 96.012 mo
-199.801 94.934 li
@
-199.801 94.934 mo
-198.84 94.934 li
@
-198.84 94.934 mo
-197.879 94.934 li
@
-197.879 94.934 mo
-197.281 93.73 li
@
-197.281 93.73 mo
-196.441 93.73 li
@
-196.441 93.73 mo
-195.48 93.73 li
@
-195.48 93.73 mo
-194.52 93.73 li
@
-194.52 93.73 mo
-194.281 92.652 li
@
-194.281 92.652 mo
-193.32 92.652 li
@
-193.32 92.652 mo
-192.961 91.453 li
@
-192.961 91.453 mo
-192.121 91.453 li
@
-192.121 91.453 mo
-191.762 90.25 li
@
-191.762 90.25 mo
-190.922 90.25 li
@
-190.922 90.25 mo
-189.961 90.25 li
@
-189.961 90.25 mo
-189 90.25 li
@
-189 90.25 mo
-188.16 90.25 li
@
-188.16 90.25 mo
-187.199 90.25 li
@
-187.199 90.25 mo
-186.238 90.25 li
@
-186.238 90.25 mo
-185.281 90.25 li
@
-185.281 90.25 mo
-184.441 89.172 li
@
-184.441 89.172 mo
-183.48 89.172 li
@
-183.48 89.172 mo
-182.641 89.172 li
@
-182.641 89.172 mo
-181.68 89.172 li
@
-181.68 89.172 mo
-181.32 87.973 li
@
-181.32 87.973 mo
-180.48 87.973 li
@
-180.48 87.973 mo
-179.52 87.973 li
@
-179.52 87.973 mo
-178.559 87.973 li
@
-178.559 87.973 mo
-178.32 86.891 li
@
-178.32 86.891 mo
-177.359 86.891 li
@
-177.359 86.891 mo
-176.52 86.891 li
@
-176.52 86.891 mo
-175.559 86.891 li
@
-175.559 86.891 mo
-174.602 86.891 li
@
-174.602 86.891 mo
-174 85.691 li
@
-174 85.691 mo
-173.039 85.691 li
@
-173.039 85.691 mo
-172.199 85.691 li
@
-172.199 85.691 mo
-171.602 84.492 li
@
-171.602 84.492 mo
-170.641 84.492 li
@
-170.641 84.492 mo
-169.68 84.492 li
@
-169.68 84.492 mo
-169.078 83.293 li
@
-169.078 83.293 mo
-168.238 83.293 li
@
-168.238 83.293 mo
-167.281 83.293 li
@
-167.281 83.293 mo
-166.32 83.293 li
@
-166.32 83.293 mo
-165.359 83.293 li
@
-165.359 83.293 mo
-164.879 82.211 li
@
-164.879 82.211 mo
-163.922 82.211 li
@
-163.922 82.211 mo
-163.68 81.012 li
@
-163.68 81.012 mo
-162.719 81.012 li
@
-162.719 81.012 mo
-161.762 81.012 li
@
-161.762 81.012 mo
-160.801 81.012 li
@
-160.801 81.012 mo
-159.961 79.934 li
@
-159.961 79.934 mo
-159 79.934 li
@
-159 79.934 mo
-158.762 78.73 li
@
-158.762 78.73 mo
-157.801 78.73 li
@
-157.801 78.73 mo
-157.559 77.531 li
@
-157.559 77.531 mo
-156.602 77.531 li
@
-156.602 77.531 mo
-156.238 76.453 li
@
-156.238 76.453 mo
-155.398 76.453 li
@
-155.398 76.453 mo
-154.441 75.25 li
@
-154.441 75.25 mo
-153.48 75.25 li
@
-153.48 75.25 mo
-153.238 74.172 li
@
-153.238 74.172 mo
-152.641 72.973 li
@
-152.641 72.973 mo
-151.68 72.973 li
@
-151.68 72.973 mo
-150.719 72.973 li
@
-150.719 72.973 mo
-150.719 71.891 li
@
-150.719 71.891 mo
-149.879 71.891 li
@
-149.879 71.891 mo
-148.922 71.891 li
@
-148.922 71.891 mo
-147.961 71.891 li
@
-147.961 71.891 mo
-147.719 70.691 li
@
-147.719 70.691 mo
-146.762 70.691 li
@
-146.762 70.691 mo
-145.922 70.691 li
@
-145.922 70.691 mo
-144.961 70.691 li
@
-144.961 70.691 mo
-144.602 69.492 li
@
-144.602 69.492 mo
-143.762 69.492 li
@
-143.762 69.492 mo
-142.801 69.492 li
@
-142.801 69.492 mo
-141.84 69.492 li
@
-141.84 69.492 mo
-141.602 68.41 li
@
-141.602 68.41 mo
-140.641 68.41 li
@
-140.641 68.41 mo
-139.68 68.41 li
@
-139.68 68.41 mo
-138.84 68.41 li
@
-138.84 68.41 mo
-137.879 68.41 li
@
-137.879 68.41 mo
-136.922 68.41 li
@
-136.922 68.41 mo
-136.078 68.41 li
@
-136.078 68.41 mo
-135.121 68.41 li
@
-135.121 68.41 mo
-134.16 68.41 li
@
-134.16 68.41 mo
-133.199 68.41 li
@
-133.199 68.41 mo
-132.359 68.41 li
@
-132.359 68.41 mo
-131.398 68.41 li
@
-131.398 68.41 mo
-130.559 67.211 li
@
-130.559 67.211 mo
-129.719 67.211 li
@
-129.719 67.211 mo
-128.762 67.211 li
@
-128.762 67.211 mo
-128.16 66.133 li
@
-128.16 66.133 mo
-127.199 66.133 li
@
-127.199 66.133 mo
-126.238 66.133 li
@
-126.238 66.133 mo
-126.238 64.934 li
@
-126.238 64.934 mo
-125.641 63.852 li
@
-125.641 63.852 mo
-124.801 63.852 li
@
-124.801 63.852 mo
-124.441 62.652 li
@
-124.441 62.652 mo
-123.48 62.652 li
@
-123.48 62.652 mo
-122.641 62.652 li
@
-122.641 62.652 mo
-122.039 61.453 li
@
-122.039 61.453 mo
-121.441 60.371 li
@
-121.441 60.371 mo
-120.48 60.371 li
@
-120.48 60.371 mo
-119.52 60.371 li
@
-119.52 60.371 mo
-118.559 60.371 li
@
-118.559 60.371 mo
-117.719 59.172 li
@
-117.719 59.172 mo
-116.762 59.172 li
@
-116.762 59.172 mo
-115.801 59.172 li
@
-115.801 59.172 mo
-114.961 59.172 li
@
-114.961 59.172 mo
-114.602 58.09 li
@
-114.602 58.09 mo
-114 56.891 li
@
-114 56.891 mo
-113.16 56.891 li
@
-113.16 56.891 mo
-112.199 56.891 li
@
-112.199 56.891 mo
-111.602 55.691 li
@
-111.602 55.691 mo
-110.641 55.691 li
@
-110.641 55.691 mo
-109.801 55.691 li
@
-109.801 55.691 mo
-108.84 55.691 li
@
-108.84 55.691 mo
-107.879 54.613 li
@
-107.879 54.613 mo
-106.922 54.613 li
@
-106.922 54.613 mo
-106.078 54.613 li
@
-106.078 54.613 mo
-105.121 54.613 li
@
-105.121 54.613 mo
-104.879 53.41 li
@
-104.879 53.41 mo
-103.922 53.41 li
@
-103.922 53.41 mo
-102.961 53.41 li
@
-102.961 53.41 mo
-102.121 53.41 li
@
-102.121 53.41 mo
-101.16 53.41 li
@
-101.16 53.41 mo
-100.199 53.41 li
@
-100.199 53.41 mo
-99.238 53.41 li
@
-99.238 53.41 mo
-98.762 52.332 li
@
-98.762 52.332 mo
-97.801 52.332 li
@
-97.801 52.332 mo
-96.84 52.332 li
@
-96.84 52.332 mo
-96 52.332 li
@
-96 52.332 mo
-95.039 52.332 li
@
-95.039 52.332 mo
-94.078 52.332 li
@
-94.078 52.332 mo
-93.238 52.332 li
@
-93.238 52.332 mo
-92.281 52.332 li
@
-92.281 52.332 mo
-91.32 52.332 li
@
-91.32 52.332 mo
-90.48 52.332 li
@
-90.48 52.332 mo
-90.121 51.133 li
@
-90.121 51.133 mo
-89.281 51.133 li
@
-89.281 51.133 mo
-88.32 51.133 li
@
-88.32 51.133 mo
-87.359 51.133 li
@
-87.359 51.133 mo
-86.398 51.133 li
@
-86.398 51.133 mo
-85.559 51.133 li
@
-85.559 51.133 mo
-84.602 51.133 li
@
-84.602 51.133 mo
-83.641 51.133 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.602 108.73 li
@
-234.602 108.73 mo
-234 107.531 li
@
-234 107.531 mo
-233.16 107.531 li
@
-233.16 107.531 mo
-232.801 106.453 li
@
-232.801 106.453 mo
-231.84 106.453 li
@
-231.84 106.453 mo
-231 106.453 li
@
-231 106.453 mo
-230.039 106.453 li
@
-230.039 106.453 mo
-229.078 106.453 li
@
-229.078 106.453 mo
-228.121 106.453 li
@
-228.121 106.453 mo
-227.281 105.25 li
@
-227.281 105.25 mo
-226.32 105.25 li
@
-226.32 105.25 mo
-226.078 104.051 li
@
-226.078 104.051 mo
-225.48 102.973 li
@
-225.48 102.973 mo
-224.879 101.773 li
@
-224.879 101.773 mo
-223.922 101.773 li
@
-223.922 101.773 mo
-222.961 101.773 li
@
-222.961 101.773 mo
-222.359 100.691 li
@
-222.359 100.691 mo
-221.52 100.691 li
@
-221.52 100.691 mo
-220.559 100.691 li
@
-220.559 100.691 mo
-219.602 100.691 li
@
-219.602 100.691 mo
-218.641 100.691 li
@
-218.641 100.691 mo
-218.039 99.492 li
@
-218.039 99.492 mo
-217.441 98.293 li
@
-217.441 98.293 mo
-216.602 98.293 li
@
-216.602 98.293 mo
-215.641 97.211 li
@
-215.641 97.211 mo
-214.68 97.211 li
@
-214.68 97.211 mo
-214.441 96.012 li
@
-214.441 96.012 mo
-213.48 96.012 li
@
-213.48 96.012 mo
-213.238 94.934 li
@
-213.238 94.934 mo
-212.281 94.934 li
@
-212.281 94.934 mo
-212.039 93.73 li
@
-212.039 93.73 mo
-211.078 93.73 li
@
-211.078 93.73 mo
-210.121 93.73 li
@
-210.121 93.73 mo
-209.52 92.652 li
@
-209.52 92.652 mo
-208.68 92.652 li
@
-208.68 92.652 mo
-207.719 92.652 li
@
-207.719 92.652 mo
-206.762 92.652 li
@
-206.762 92.652 mo
-206.398 91.453 li
@
-206.398 91.453 mo
-205.559 91.453 li
@
-205.559 91.453 mo
-204.602 91.453 li
@
-204.602 91.453 mo
-203.641 91.453 li
@
-203.641 91.453 mo
-202.801 90.25 li
@
-202.801 90.25 mo
-202.199 89.172 li
@
-202.199 89.172 mo
-201.238 89.172 li
@
-201.238 89.172 mo
-200.398 89.172 li
@
-200.398 89.172 mo
-199.441 89.172 li
@
-199.441 89.172 mo
-199.199 87.973 li
@
-199.199 87.973 mo
-198.48 86.891 li
@
-198.48 86.891 mo
-197.641 86.891 li
@
-197.641 86.891 mo
-196.68 86.891 li
@
-196.68 86.891 mo
-195.719 86.891 li
@
-195.719 86.891 mo
-195.48 85.691 li
@
-195.48 85.691 mo
-194.52 85.691 li
@
-194.52 85.691 mo
-193.559 85.691 li
@
-193.559 85.691 mo
-192.719 85.691 li
@
-192.719 85.691 mo
-192.359 84.492 li
@
-192.359 84.492 mo
-191.52 84.492 li
@
-191.52 84.492 mo
-190.559 84.492 li
@
-190.559 84.492 mo
-189.961 83.293 li
@
-189.961 83.293 mo
-189 83.293 li
@
-189 83.293 mo
-188.16 83.293 li
@
-188.16 83.293 mo
-187.559 82.211 li
@
-187.559 82.211 mo
-186.602 82.211 li
@
-186.602 82.211 mo
-185.641 81.012 li
@
-185.641 81.012 mo
-184.68 81.012 li
@
-184.68 81.012 mo
-183.84 81.012 li
@
-183.84 81.012 mo
-183.238 79.934 li
@
-183.238 79.934 mo
-182.281 79.934 li
@
-182.281 79.934 mo
-182.039 78.73 li
@
-182.039 78.73 mo
-181.078 78.73 li
@
-181.078 78.73 mo
-180.719 77.531 li
@
-180.719 77.531 mo
-179.879 77.531 li
@
-179.879 77.531 mo
-179.52 76.453 li
@
-179.52 76.453 mo
-178.68 76.453 li
@
-178.68 76.453 mo
-177.719 76.453 li
@
-177.719 76.453 mo
-176.762 76.453 li
@
-176.762 76.453 mo
-175.922 75.25 li
@
-175.922 75.25 mo
-174.961 75.25 li
@
-174.961 75.25 mo
-174 75.25 li
@
-174 75.25 mo
-173.398 74.172 li
@
-173.398 74.172 mo
-172.441 74.172 li
@
-172.441 74.172 mo
-171.602 72.973 li
@
-171.602 72.973 mo
-170.641 72.973 li
@
-170.641 72.973 mo
-169.68 72.973 li
@
-169.68 72.973 mo
-169.078 71.891 li
@
-169.078 71.891 mo
-168.238 71.891 li
@
-168.238 71.891 mo
-167.281 71.891 li
@
-167.281 71.891 mo
-166.32 71.891 li
@
-166.32 71.891 mo
-166.078 70.691 li
@
-166.078 70.691 mo
-165.121 70.691 li
@
-165.121 70.691 mo
-164.879 69.492 li
@
-164.879 69.492 mo
-164.16 68.41 li
@
-164.16 68.41 mo
-163.68 67.211 li
@
-163.68 67.211 mo
-163.078 66.133 li
@
-163.078 66.133 mo
-162.48 64.934 li
@
-162.48 64.934 mo
-161.762 63.852 li
@
-161.762 63.852 mo
-160.801 63.852 li
@
-160.801 63.852 mo
-160.559 62.652 li
@
-160.559 62.652 mo
-159.961 61.453 li
@
-159.961 61.453 mo
-159 61.453 li
@
-159 61.453 mo
-158.16 61.453 li
@
-158.16 61.453 mo
-158.16 60.371 li
@
-158.16 60.371 mo
-157.199 60.371 li
@
-157.199 60.371 mo
-156.84 59.172 li
@
-156.84 59.172 mo
-156 59.172 li
@
-156 59.172 mo
-155.039 58.09 li
@
-155.039 58.09 mo
-154.199 58.09 li
@
-154.199 58.09 mo
-153.238 58.09 li
@
-153.238 58.09 mo
-152.641 56.891 li
@
-152.641 56.891 mo
-151.68 56.891 li
@
-151.68 56.891 mo
-150.719 56.891 li
@
-150.719 56.891 mo
-150.121 55.691 li
@
-150.121 55.691 mo
-149.281 55.691 li
@
-149.281 55.691 mo
-148.32 55.691 li
@
-148.32 55.691 mo
-148.32 54.613 li
@
-148.32 54.613 mo
-147.359 54.613 li
@
-147.359 54.613 mo
-146.52 54.613 li
@
-146.52 54.613 mo
-145.559 54.613 li
@
-145.559 54.613 mo
-144.602 54.613 li
@
-144.602 54.613 mo
-144 53.41 li
@
-144 53.41 mo
-143.398 52.332 li
@
-143.398 52.332 mo
-142.801 51.133 li
@
-142.801 51.133 mo
-142.199 50.051 li
@
-142.199 50.051 mo
-141.238 50.051 li
@
-141.238 50.051 mo
-140.281 50.051 li
@
-140.281 50.051 mo
-139.441 50.051 li
@
-139.441 50.051 mo
-139.078 48.852 li
@
-139.078 48.852 mo
-138.238 48.852 li
@
-138.238 48.852 mo
-137.281 48.852 li
@
-137.281 48.852 mo
-136.68 47.652 li
@
-136.68 47.652 mo
-135.719 47.652 li
@
-135.719 47.652 mo
-134.879 47.652 li
@
-134.879 47.652 mo
-133.922 47.652 li
@
-133.922 47.652 mo
-133.68 46.453 li
@
-133.68 46.453 mo
-132.719 46.453 li
@
-132.719 46.453 mo
-131.762 46.453 li
@
-131.762 46.453 mo
-130.801 46.453 li
@
-130.801 46.453 mo
-130.559 45.371 li
@
-130.559 45.371 mo
-129.719 45.371 li
@
-129.719 45.371 mo
-128.762 45.371 li
@
-128.762 45.371 mo
-128.762 44.172 li
@
-128.762 44.172 mo
-128.16 43.09 li
@
-128.16 43.09 mo
-127.199 43.09 li
@
-127.199 43.09 mo
-126.238 43.09 li
@
-126.238 43.09 mo
-126.238 41.891 li
@
-126.238 41.891 mo
-125.641 40.691 li
@
-125.641 40.691 mo
-124.801 40.691 li
@
-124.801 40.691 mo
-123.84 40.691 li
@
-123.84 40.691 mo
-123.238 39.613 li
@
-123.238 39.613 mo
-122.281 39.613 li
@
-122.281 39.613 mo
-122.039 38.41 li
@
-122.039 38.41 mo
-121.441 37.332 li
@
-121.441 37.332 mo
-120.48 37.332 li
@
-120.48 37.332 mo
-119.52 37.332 li
@
-119.52 37.332 mo
-118.559 37.332 li
@
-118.559 37.332 mo
-117.719 37.332 li
@
-117.719 37.332 mo
-116.762 37.332 li
@
-116.762 37.332 mo
-116.52 36.133 li
@
-116.52 36.133 mo
-115.559 36.133 li
@
-115.559 36.133 mo
-114.602 34.934 li
@
-114.602 34.934 mo
-114 33.852 li
@
-114 33.852 mo
-113.16 33.852 li
@
-113.16 33.852 mo
-112.199 33.852 li
@
-112.199 33.852 mo
-111.238 33.852 li
@
-111.238 33.852 mo
-110.398 33.852 li
@
-110.398 33.852 mo
-109.441 33.852 li
@
-109.441 33.852 mo
-108.48 33.852 li
@
-108.48 33.852 mo
-107.52 33.852 li
@
-107.52 33.852 mo
-106.68 33.852 li
@
-106.68 33.852 mo
-105.719 33.852 li
@
-105.719 33.852 mo
-104.762 33.852 li
@
-104.762 33.852 mo
-104.281 32.652 li
@
-104.281 32.652 mo
-103.32 32.652 li
@
-103.32 32.652 mo
-102.359 32.652 li
@
-102.359 32.652 mo
-101.52 32.652 li
@
-101.52 32.652 mo
-101.16 31.57 li
@
-101.16 31.57 mo
-100.32 31.57 li
@
-100.32 31.57 mo
-99.359 31.57 li
@
-99.359 31.57 mo
-98.398 31.57 li
@
-98.398 31.57 mo
-97.441 31.57 li
@
-97.441 31.57 mo
-96.84 30.371 li
@
-96.84 30.371 mo
-96.359 29.293 li
@
-96.359 29.293 mo
-95.398 29.293 li
@
-95.398 29.293 mo
-95.039 28.09 li
@
-95.039 28.09 mo
-94.078 28.09 li
@
-94.078 28.09 mo
-93.84 26.891 li
@
-93.84 26.891 mo
-93.238 25.813 li
@
-93.238 25.813 mo
-92.281 25.813 li
@
-92.281 25.813 mo
-91.32 25.813 li
@
-91.32 25.813 mo
-90.48 25.813 li
@
-90.48 25.813 mo
-89.52 25.813 li
@
-89.52 25.813 mo
-88.559 25.813 li
@
-88.559 25.813 mo
-87.602 25.813 li
@
-87.602 25.813 mo
-86.762 25.813 li
@
-86.762 25.813 mo
-85.801 25.813 li
@
-85.801 25.813 mo
-84.84 25.813 li
@
-84.84 25.813 mo
-84.602 24.613 li
@
-84.602 24.613 mo
-84 23.531 li
@
-84 23.531 mo
-83.16 23.531 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.238 109.813 li
@
-234.238 109.813 mo
-234 108.73 li
@
-234 108.73 mo
-233.398 107.531 li
@
-233.398 107.531 mo
-232.801 106.453 li
@
-232.801 106.453 mo
-232.199 105.25 li
@
-232.199 105.25 mo
-231.602 104.051 li
@
-231.602 104.051 mo
-230.641 104.051 li
@
-230.641 104.051 mo
-229.801 104.051 li
@
-229.801 104.051 mo
-229.199 102.973 li
@
-229.199 102.973 mo
-228.48 101.773 li
@
-228.48 101.773 mo
-227.52 101.773 li
@
-227.52 101.773 mo
-226.68 100.691 li
@
-226.68 100.691 mo
-226.078 99.492 li
@
-226.078 99.492 mo
-225.121 99.492 li
@
-225.121 99.492 mo
-224.281 98.293 li
@
-224.281 98.293 mo
-223.32 98.293 li
@
-223.32 98.293 mo
-222.359 97.211 li
@
-222.359 97.211 mo
-221.52 97.211 li
@
-221.52 97.211 mo
-221.16 96.012 li
@
-221.16 96.012 mo
-220.199 96.012 li
@
-220.199 96.012 mo
-219.961 94.934 li
@
-219.961 94.934 mo
-219 94.934 li
@
-219 94.934 mo
-218.039 94.934 li
@
-218.039 94.934 mo
-217.441 93.73 li
@
-217.441 93.73 mo
-216.602 93.73 li
@
-216.602 93.73 mo
-215.641 93.73 li
@
-215.641 93.73 mo
-214.68 93.73 li
@
-214.68 93.73 mo
-214.441 92.652 li
@
-214.441 92.652 mo
-213.48 92.652 li
@
-213.48 92.652 mo
-213.238 91.453 li
@
-213.238 91.453 mo
-212.281 91.453 li
@
-212.281 91.453 mo
-212.039 90.25 li
@
-212.039 90.25 mo
-211.078 90.25 li
@
-211.078 90.25 mo
-210.121 90.25 li
@
-210.121 90.25 mo
-209.52 89.172 li
@
-209.52 89.172 mo
-208.68 89.172 li
@
-208.68 89.172 mo
-207.719 89.172 li
@
-207.719 89.172 mo
-206.762 89.172 li
@
-206.762 89.172 mo
-205.801 87.973 li
@
-205.801 87.973 mo
-205.199 86.891 li
@
-205.199 86.891 mo
-204.359 86.891 li
@
-204.359 86.891 mo
-203.398 86.891 li
@
-203.398 86.891 mo
-202.441 86.891 li
@
-202.441 86.891 mo
-201.602 85.691 li
@
-201.602 85.691 mo
-200.641 85.691 li
@
-200.641 85.691 mo
-199.801 85.691 li
@
-199.801 85.691 mo
-199.801 84.492 li
@
-199.801 84.492 mo
-198.84 84.492 li
@
-198.84 84.492 mo
-197.879 83.293 li
@
-197.879 83.293 mo
-197.281 82.211 li
@
-197.281 82.211 mo
-196.441 82.211 li
@
-196.441 82.211 mo
-195.48 82.211 li
@
-195.48 82.211 mo
-194.879 81.012 li
@
-194.879 81.012 mo
-193.922 81.012 li
@
-193.922 81.012 mo
-192.961 79.934 li
@
-192.961 79.934 mo
-192.121 79.934 li
@
-192.121 79.934 mo
-191.16 79.934 li
@
-191.16 79.934 mo
-190.559 78.73 li
@
-190.559 78.73 mo
-189.602 78.73 li
@
-189.602 78.73 mo
-189.359 77.531 li
@
-189.359 77.531 mo
-188.398 77.531 li
@
-188.398 77.531 mo
-187.559 77.531 li
@
-187.559 77.531 mo
-186.961 76.453 li
@
-186.961 76.453 mo
-186 76.453 li
@
-186 76.453 mo
-185.039 76.453 li
@
-185.039 76.453 mo
-184.078 76.453 li
@
-184.078 76.453 mo
-183.238 76.453 li
@
-183.238 76.453 mo
-182.281 76.453 li
@
-182.281 76.453 mo
-181.32 76.453 li
@
-181.32 76.453 mo
-180.48 76.453 li
@
-180.48 76.453 mo
-179.52 76.453 li
@
-179.52 76.453 mo
-178.559 76.453 li
@
-178.559 76.453 mo
-178.32 75.25 li
@
-178.32 75.25 mo
-177.719 74.172 li
@
-177.719 74.172 mo
-176.762 74.172 li
@
-176.762 74.172 mo
-176.52 72.973 li
@
-176.52 72.973 mo
-175.559 72.973 li
@
-175.559 72.973 mo
-174.602 72.973 li
@
-174.602 72.973 mo
-173.641 72.973 li
@
-173.641 72.973 mo
-173.398 71.891 li
@
-173.398 71.891 mo
-172.441 71.891 li
@
-172.441 71.891 mo
-171.602 70.691 li
@
-171.602 70.691 mo
-170.641 70.691 li
@
-170.641 70.691 mo
-169.68 70.691 li
@
-169.68 70.691 mo
-168.84 70.691 li
@
-168.84 70.691 mo
-168.48 69.492 li
@
-168.48 69.492 mo
-167.641 69.492 li
@
-167.641 69.492 mo
-166.68 69.492 li
@
-166.68 69.492 mo
-166.078 68.41 li
@
-166.078 68.41 mo
-165.48 67.211 li
@
-165.48 67.211 mo
-164.52 67.211 li
@
-164.52 67.211 mo
-164.16 66.133 li
@
-164.16 66.133 mo
-163.68 64.934 li
@
-163.68 64.934 mo
-162.719 64.934 li
@
-162.719 64.934 mo
-161.762 63.852 li
@
-161.762 63.852 mo
-160.801 63.852 li
@
-160.801 63.852 mo
-159.961 63.852 li
@
-159.961 63.852 mo
-159 63.852 li
@
-159 63.852 mo
-158.16 62.652 li
@
-158.16 62.652 mo
-157.199 62.652 li
@
-157.199 62.652 mo
-156.238 61.453 li
@
-156.238 61.453 mo
-155.398 61.453 li
@
-155.398 61.453 mo
-155.039 60.371 li
@
-155.039 60.371 mo
-154.199 60.371 li
@
-154.199 60.371 mo
-153.84 59.172 li
@
-153.84 59.172 mo
-152.879 59.172 li
@
-152.879 59.172 mo
-152.641 58.09 li
@
-152.641 58.09 mo
-151.68 58.09 li
@
-151.68 58.09 mo
-151.32 56.891 li
@
-151.32 56.891 mo
-150.48 56.891 li
@
-150.48 56.891 mo
-150.121 55.691 li
@
-150.121 55.691 mo
-149.281 55.691 li
@
-149.281 55.691 mo
-148.32 55.691 li
@
-148.32 55.691 mo
-148.32 54.613 li
@
-148.32 54.613 mo
-147.359 54.613 li
@
-147.359 54.613 mo
-146.52 54.613 li
@
-146.52 54.613 mo
-145.922 53.41 li
@
-145.922 53.41 mo
-144.961 53.41 li
@
-144.961 53.41 mo
-144 52.332 li
@
-144 52.332 mo
-143.16 52.332 li
@
-143.16 52.332 mo
-142.199 51.133 li
@
-142.199 51.133 mo
-141.238 51.133 li
@
-141.238 51.133 mo
-140.281 51.133 li
@
-140.281 51.133 mo
-139.441 51.133 li
@
-139.441 51.133 mo
-138.48 51.133 li
@
-138.48 51.133 mo
-137.52 51.133 li
@
-137.52 51.133 mo
-137.281 50.051 li
@
-137.281 50.051 mo
-136.68 48.852 li
@
-136.68 48.852 mo
-135.719 48.852 li
@
-135.719 48.852 mo
-134.879 48.852 li
@
-134.879 48.852 mo
-133.922 48.852 li
@
-133.922 48.852 mo
-132.961 48.852 li
@
-132.961 48.852 mo
-132.359 47.652 li
@
-132.359 47.652 mo
-131.398 47.652 li
@
-131.398 47.652 mo
-130.559 47.652 li
@
-130.559 47.652 mo
-129.961 46.453 li
@
-129.961 46.453 mo
-129 46.453 li
@
-129 46.453 mo
-128.762 45.371 li
@
-128.762 45.371 mo
-128.16 44.172 li
@
-128.16 44.172 mo
-127.199 44.172 li
@
-127.199 44.172 mo
-126.238 44.172 li
@
-126.238 44.172 mo
-125.641 43.09 li
@
-125.641 43.09 mo
-124.801 43.09 li
@
-124.801 43.09 mo
-123.84 43.09 li
@
-123.84 43.09 mo
-123.238 41.891 li
@
-123.238 41.891 mo
-122.281 41.891 li
@
-122.281 41.891 mo
-121.441 41.891 li
@
-121.441 41.891 mo
-121.441 40.691 li
@
-121.441 40.691 mo
-120.48 40.691 li
@
-120.48 40.691 mo
-119.52 40.691 li
@
-119.52 40.691 mo
-118.559 40.691 li
@
-118.559 40.691 mo
-117.719 39.613 li
@
-117.719 39.613 mo
-116.762 39.613 li
@
-116.762 39.613 mo
-115.801 39.613 li
@
-115.801 39.613 mo
-114.961 39.613 li
@
-114.961 39.613 mo
-114.602 38.41 li
@
-114.602 38.41 mo
-114 37.332 li
@
-114 37.332 mo
-113.16 37.332 li
@
-113.16 37.332 mo
-112.199 37.332 li
@
-112.199 37.332 mo
-111.238 37.332 li
@
-111.238 37.332 mo
-110.398 37.332 li
@
-110.398 37.332 mo
-109.801 36.133 li
@
-109.801 36.133 mo
-108.84 36.133 li
@
-108.84 36.133 mo
-107.879 36.133 li
@
-107.879 36.133 mo
-106.922 36.133 li
@
-106.922 36.133 mo
-106.078 36.133 li
@
-106.078 36.133 mo
-105.121 36.133 li
@
-105.121 36.133 mo
-104.16 36.133 li
@
-104.16 36.133 mo
-103.32 36.133 li
@
-103.32 36.133 mo
-102.961 34.934 li
@
-102.961 34.934 mo
-102.359 33.852 li
@
-102.359 33.852 mo
-101.52 33.852 li
@
-101.52 33.852 mo
-100.559 33.852 li
@
-100.559 33.852 mo
-99.602 33.852 li
@
-99.602 33.852 mo
-98.762 32.652 li
@
-98.762 32.652 mo
-97.801 32.652 li
@
-97.801 32.652 mo
-96.84 32.652 li
@
-96.84 32.652 mo
-96.84 31.57 li
@
-96.84 31.57 mo
-96 31.57 li
@
-96 31.57 mo
-95.039 31.57 li
@
-95.039 31.57 mo
-94.078 31.57 li
@
-94.078 31.57 mo
-93.238 31.57 li
@
-93.238 31.57 mo
-92.281 31.57 li
@
-92.281 31.57 mo
-91.441 30.371 li
@
-91.441 30.371 mo
-90.48 30.371 li
@
-90.48 30.371 mo
-89.52 30.371 li
@
-89.52 30.371 mo
-88.68 30.371 li
@
-88.68 30.371 mo
-87.719 30.371 li
@
-87.719 30.371 mo
-86.762 30.371 li
@
-86.762 30.371 mo
-86.52 29.293 li
@
-86.52 29.293 mo
-85.559 29.293 li
@
-85.559 29.293 mo
-84.602 29.293 li
@
-84.602 29.293 mo
-84 28.09 li
@
-84 28.09 mo
-83.16 28.09 li
@
-236.16 109.813 mo
-236.039 109.813 li
@
-236.039 109.813 mo
-235.078 109.813 li
@
-235.078 109.813 mo
-234.602 108.73 li
@
-234.602 108.73 mo
-233.762 108.73 li
@
-233.762 108.73 mo
-232.801 108.73 li
@
-232.801 108.73 mo
-232.199 107.531 li
@
-232.199 107.531 mo
-231.602 106.453 li
@
-231.602 106.453 mo
-230.641 106.453 li
@
-230.641 106.453 mo
-230.398 105.25 li
@
-230.398 105.25 mo
-229.801 104.051 li
@
-229.801 104.051 mo
-228.84 104.051 li
@
-228.84 104.051 mo
-227.879 104.051 li
@
-227.879 104.051 mo
-227.281 102.973 li
@
-227.281 102.973 mo
-226.68 101.773 li
@
-226.68 101.773 mo
-225.719 101.773 li
@
-225.719 101.773 mo
-225.48 100.691 li
@
-225.48 100.691 mo
-224.52 100.691 li
@
-224.52 100.691 mo
-224.281 99.492 li
@
-224.281 99.492 mo
-223.32 99.492 li
@
-223.32 99.492 mo
-222.359 99.492 li
@
-222.359 99.492 mo
-221.762 98.293 li
@
-221.762 98.293 mo
-220.922 98.293 li
@
-220.922 98.293 mo
-219.961 98.293 li
@
-219.961 98.293 mo
-219.359 97.211 li
@
-219.359 97.211 mo
-218.398 97.211 li
@
-218.398 97.211 mo
-217.441 96.012 li
@
-217.441 96.012 mo
-216.602 96.012 li
@
-216.602 96.012 mo
-215.641 96.012 li
@
-215.641 96.012 mo
-215.039 94.934 li
@
-215.039 94.934 mo
-214.078 94.934 li
@
-214.078 94.934 mo
-213.84 93.73 li
@
-213.84 93.73 mo
-212.879 93.73 li
@
-212.879 93.73 mo
-212.039 93.73 li
@
-212.039 93.73 mo
-211.441 92.652 li
@
-211.441 92.652 mo
-210.48 92.652 li
@
-210.48 92.652 mo
-209.52 92.652 li
@
-209.52 92.652 mo
-208.68 92.652 li
@
-208.68 92.652 mo
-208.32 91.453 li
@
-208.32 91.453 mo
-207.359 91.453 li
@
-207.359 91.453 mo
-206.398 90.25 li
@
-206.398 90.25 mo
-205.559 90.25 li
@
-205.559 90.25 mo
-204.602 89.172 li
@
-204.602 89.172 mo
-203.762 89.172 li
@
-203.762 89.172 mo
-202.801 89.172 li
@
-202.801 89.172 mo
-202.199 87.973 li
@
-202.199 87.973 mo
-201.238 87.973 li
@
-201.238 87.973 mo
-200.398 87.973 li
@
-200.398 87.973 mo
-199.441 87.973 li
@
-199.441 87.973 mo
-199.199 86.891 li
@
-199.199 86.891 mo
-198.238 86.891 li
@
-198.238 86.891 mo
-197.879 85.691 li
@
-197.879 85.691 mo
-197.281 84.492 li
@
-197.281 84.492 mo
-196.441 84.492 li
@
-196.441 84.492 mo
-196.078 83.293 li
@
-196.078 83.293 mo
-195.121 83.293 li
@
-195.121 83.293 mo
-194.16 83.293 li
@
-194.16 83.293 mo
-193.32 83.293 li
@
-193.32 83.293 mo
-192.359 83.293 li
@
-192.359 83.293 mo
-191.398 83.293 li
@
-191.398 83.293 mo
-190.559 83.293 li
@
-190.559 83.293 mo
-189.961 82.211 li
@
-189.961 82.211 mo
-189.359 81.012 li
@
-189.359 81.012 mo
-188.398 81.012 li
@
-188.398 81.012 mo
-187.559 81.012 li
@
-187.559 81.012 mo
-187.559 79.934 li
@
-187.559 79.934 mo
-186.602 79.934 li
@
-186.602 79.934 mo
-186.238 78.73 li
@
-186.238 78.73 mo
-185.281 78.73 li
@
-185.281 78.73 mo
-185.039 77.531 li
@
-185.039 77.531 mo
-184.078 77.531 li
@
-184.078 77.531 mo
-183.238 77.531 li
@
-183.238 77.531 mo
-182.281 77.531 li
@
-182.281 77.531 mo
-181.32 77.531 li
@
-181.32 77.531 mo
-180.719 76.453 li
@
-180.719 76.453 mo
-179.879 76.453 li
@
-179.879 76.453 mo
-178.922 75.25 li
@
-178.922 75.25 mo
-178.32 74.172 li
@
-178.32 74.172 mo
-177.719 72.973 li
@
-177.719 72.973 mo
-176.762 72.973 li
@
-176.762 72.973 mo
-176.52 71.891 li
@
-176.52 71.891 mo
-175.559 71.891 li
@
-175.559 71.891 mo
-174.602 71.891 li
@
-174.602 71.891 mo
-174 70.691 li
@
-174 70.691 mo
-173.398 69.492 li
@
-173.398 69.492 mo
-172.441 69.492 li
@
-172.441 69.492 mo
-171.602 68.41 li
@
-171.602 68.41 mo
-170.641 68.41 li
@
-170.641 68.41 mo
-169.68 68.41 li
@
-169.68 68.41 mo
-169.078 67.211 li
@
-169.078 67.211 mo
-168.238 67.211 li
@
-168.238 67.211 mo
-167.281 67.211 li
@
-167.281 67.211 mo
-166.32 67.211 li
@
-166.32 67.211 mo
-166.078 66.133 li
@
-166.078 66.133 mo
-165.121 66.133 li
@
-165.121 66.133 mo
-164.879 64.934 li
@
-164.879 64.934 mo
-163.922 64.934 li
@
-163.922 64.934 mo
-163.078 64.934 li
@
-163.078 64.934 mo
-162.121 64.934 li
@
-162.121 64.934 mo
-161.16 64.934 li
@
-161.16 64.934 mo
-160.199 64.934 li
@
-160.199 64.934 mo
-159.359 64.934 li
@
-159.359 64.934 mo
-158.398 64.934 li
@
-158.398 64.934 mo
-157.559 63.852 li
@
-157.559 63.852 mo
-156.602 63.852 li
@
-156.602 63.852 mo
-156.238 62.652 li
@
-156.238 62.652 mo
-155.398 62.652 li
@
-155.398 62.652 mo
-154.441 61.453 li
@
-154.441 61.453 mo
-153.84 60.371 li
@
-153.84 60.371 mo
-152.879 60.371 li
@
-152.879 60.371 mo
-151.922 59.172 li
@
-151.922 59.172 mo
-151.078 59.172 li
@
-151.078 59.172 mo
-150.719 58.09 li
@
-150.719 58.09 mo
-150.121 56.891 li
@
-150.121 56.891 mo
-149.281 56.891 li
@
-149.281 56.891 mo
-148.32 56.891 li
@
-148.32 56.891 mo
-147.359 56.891 li
@
-147.359 56.891 mo
-146.52 56.891 li
@
-146.52 56.891 mo
-145.922 55.691 li
@
-145.922 55.691 mo
-144.961 55.691 li
@
-144.961 55.691 mo
-144 55.691 li
@
-144 55.691 mo
-143.16 55.691 li
@
-143.16 55.691 mo
-142.801 54.613 li
@
-142.801 54.613 mo
-141.961 54.613 li
@
-141.961 54.613 mo
-141 54.613 li
@
-141 54.613 mo
-140.398 53.41 li
@
-140.398 53.41 mo
-139.441 53.41 li
@
-139.441 53.41 mo
-138.48 53.41 li
@
-138.48 53.41 mo
-137.641 53.41 li
@
-137.641 53.41 mo
-136.68 52.332 li
@
-136.68 52.332 mo
-135.719 52.332 li
@
-135.719 52.332 mo
-135.48 51.133 li
@
-135.48 51.133 mo
-134.52 51.133 li
@
-134.52 51.133 mo
-133.68 51.133 li
@
-133.68 51.133 mo
-133.078 50.051 li
@
-133.078 50.051 mo
-132.121 50.051 li
@
-132.121 50.051 mo
-131.16 50.051 li
@
-131.16 50.051 mo
-130.32 50.051 li
@
-130.32 50.051 mo
-129.961 48.852 li
@
-129.961 48.852 mo
-129 48.852 li
@
-129 48.852 mo
-128.762 47.652 li
@
-128.762 47.652 mo
-128.16 46.453 li
@
-128.16 46.453 mo
-127.199 46.453 li
@
-127.199 46.453 mo
-126.238 46.453 li
@
-126.238 46.453 mo
-125.398 46.453 li
@
-125.398 46.453 mo
-124.441 46.453 li
@
-124.441 46.453 mo
-123.84 45.371 li
@
-123.84 45.371 mo
-122.879 45.371 li
@
-122.879 45.371 mo
-122.039 44.172 li
@
-122.039 44.172 mo
-121.078 44.172 li
@
-121.078 44.172 mo
-120.84 43.09 li
@
-120.84 43.09 mo
-119.879 43.09 li
@
-119.879 43.09 mo
-118.922 43.09 li
@
-118.922 43.09 mo
-118.922 41.891 li
@
-118.922 41.891 mo
-117.961 41.891 li
@
-117.961 41.891 mo
-117.719 40.691 li
@
-117.719 40.691 mo
-116.762 40.691 li
@
-116.762 40.691 mo
-116.52 39.613 li
@
-116.52 39.613 mo
-115.559 39.613 li
@
-115.559 39.613 mo
-115.199 38.41 li
@
-115.199 38.41 mo
-114.359 38.41 li
@
-114.359 38.41 mo
-114 37.332 li
@
-114 37.332 mo
-113.16 37.332 li
@
-113.16 37.332 mo
-112.199 36.133 li
@
-112.199 36.133 mo
-111.602 34.934 li
@
-111.602 34.934 mo
-110.641 34.934 li
@
-110.641 34.934 mo
-110.398 33.852 li
@
-110.398 33.852 mo
-109.441 33.852 li
@
-109.441 33.852 mo
-109.199 32.652 li
@
-109.199 32.652 mo
-108.238 32.652 li
@
-108.238 32.652 mo
-107.281 32.652 li
@
-107.281 32.652 mo
-106.32 32.652 li
@
-106.32 32.652 mo
-105.48 31.57 li
@
-105.48 31.57 mo
-104.52 31.57 li
@
-104.52 31.57 mo
-103.68 30.371 li
@
-103.68 30.371 mo
-102.719 30.371 li
@
-102.719 30.371 mo
-102.359 29.293 li
@
-102.359 29.293 mo
-101.52 29.293 li
@
-101.52 29.293 mo
-100.559 28.09 li
@
-100.559 28.09 mo
-99.602 28.09 li
@
-99.602 28.09 mo
-98.641 28.09 li
@
-98.641 28.09 mo
-98.039 26.891 li
@
-98.039 26.891 mo
-97.199 26.891 li
@
-97.199 26.891 mo
-96.84 25.813 li
@
-96.84 25.813 mo
-96 25.813 li
@
-96 25.813 mo
-95.039 25.813 li
@
-95.039 25.813 mo
-94.441 24.613 li
@
-94.441 24.613 mo
-93.48 24.613 li
@
-93.48 24.613 mo
-92.641 23.531 li
@
-92.641 23.531 mo
-92.039 22.332 li
@
-92.039 22.332 mo
-91.078 22.332 li
@
-91.078 22.332 mo
-90.121 22.332 li
@
-90.121 22.332 mo
-89.281 22.332 li
@
-89.281 22.332 mo
-88.32 22.332 li
@
-88.32 22.332 mo
-87.359 22.332 li
@
-87.359 22.332 mo
-86.398 22.332 li
@
-86.398 22.332 mo
-85.801 21.133 li
@
-85.801 21.133 mo
-84.961 21.133 li
@
-84.961 21.133 mo
-84 21.133 li
@
-84 21.133 mo
-83.039 21.133 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
24 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D0
65152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349C
FAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127
F5C42C88FB43C> |-
/g2 <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B1
71C8A80AB> |-
/g3 <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD
5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD9
9C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AF
B9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55
C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37
B> |-
/g4 <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B
0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8
B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EE
A03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C372
95284C077711C162623860AACA404F650F8D516970257> |-
/g5 <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000A
6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-
/g6 <1C60D8A8C9B854D00D> |-
/g7 <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5
F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E
2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD
96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E
1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3
287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B84
35558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4
172D53C8FCAF4D28F2B78D3A4BF03> |-
/g8 <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDC
E9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F
7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148
C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D365
48FE63FC8465B1B685766E782F0> |-
/g9 <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162
B37724F74F272B140D258652D102C2EAC46833C73F9> |-
/g10 <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA
7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883
CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DB
BA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405
FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5
CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D
53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307
B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D1
77B5D88A> |-
/g11 <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857
894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619
ADD420F549AB7C795751D32E8EE6> |-
/g12 <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D30
2C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC2
35F833AFCC30669C812FBF097879E1> |-
/g13 <1C60D8A8C9B8096E37F88C8CE86595C6DB8D7364ABD11096FDCAF5A3E9
D76C85AB63D3F346E42ED9D2AEF8A5EA4DF58A64FEEC> |-
/g14 <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210A
AD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B43
4C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047C
DFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F
32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D31
4851DE59> |-
/g15 <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |-
/g16 <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F
517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA
8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793
990906DA8D7F8ACFF6D70790F06B02> |-
/g17 <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A28
5C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCD
ADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5
203A8015DD09B7CE> |-
/g18 <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
/g19 <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE
4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52A
BD0227B6CDD854C568D5A6F3817645C5> |-
/g20 <1C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA
37FE8A> |-
/g21 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3AB
C1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10
425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31
D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC6
0C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5
B546505C954A88> |-
/g22 <1C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C11
15332A> |-
/g23 <1C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B39
7B613EE7D27104427D3AF38200F99E7A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial /HIBBAA+Arial findfont ct_VMDictPut
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
232{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
-170.281 135.613 mo
(\001)sh
-168.176 135.613 mo
(\002)sh
-166.496 135.613 mo
(\003)sh
-160.195 135.613 mo
(\004)sh
-155.992 135.613 mo
(\005)sh
-153.887 135.613 mo
(\006)sh
-151.785 135.613 mo
(\003)sh
-145.484 135.613 mo
(\007)sh
-141.703 135.613 mo
(\004)sh
-137.496 135.613 mo
(\010)sh
NNOJBX+Arial*1 [0 -7.56347 -7.55924 0 0 0 ]msf
-257.641 121.691 mo
(\011)sh
-257.641 117.852 mo
(\012)sh
-257.641 113.652 mo
(\013)sh
-257.641 111.133 mo
(\014)sh
-257.641 108.613 mo
(\015)sh
-257.641 105.973 mo
(\016)sh
-257.641 100.453 mo
(\017)sh
-257.641 96.2539 mo
(\020)sh
-257.641 92.0547 mo
(\021)sh
-257.641 87.8555 mo
(\001)sh
-257.641 85.6953 mo
(\022)sh
-257.641 83.1758 mo
(\015)sh
-257.641 80.5352 mo
(\023)sh
-257.641 78.0156 mo
(\024)sh
-257.641 75.8555 mo
(\025)sh
-257.641 71.6563 mo
(\026)sh
-257.641 69.4961 mo
(\027)sh
-257.641 65.0547 mo
(\011)sh
-257.641 61.2148 mo
(\012)sh
-257.641 57.0156 mo
(\013)sh
-257.641 54.4961 mo
(\014)sh
-257.641 51.9766 mo
(\015)sh
-257.641 49.3359 mo
(\016)sh
-257.641 43.8164 mo
(\017)sh
-257.641 39.6172 mo
(\020)sh
-257.641 35.418 mo
(\021)sh
-257.641 31.2188 mo
(\001)sh
-257.641 29.0586 mo
(\027)sh
-257.641 24.6172 mo
(\015)sh
-257.641 21.9805 mo
(\023)sh
-257.641 19.457 mo
(\024)sh
-257.641 17.2969 mo
(\025)sh
-257.641 13.0977 mo
(\026)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g24 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411
B66E9361DDE78FC667AB91EF9824> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 24 /g24 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 231{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
-169.801 9.25 mo
(\030)sh
-164.754 9.25 mo
(\013)sh
-162.234 9.25 mo
(\013)sh
-159.715 9.25 mo
(\017)sh
-155.512 9.25 mo
(\013)sh
-152.992 9.25 mo
(\006)sh
-150.891 9.25 mo
(\010)sh
-147.105 9.25 mo
(\017)sh
-142.902 9.25 mo
(\020)sh
-138.695 9.25 mo
(\021)sh
-134.488 9.25 mo
(\001)sh
-308.039 -237.707 mo
-308.039 -224.148 li
-289.918 -224.148 li
-289.918 -237.707 li
-308.039 -237.707 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B
66E9361DDE78FC667AB91EF9824> |-
/g2 <1C60D8A8C9B7EF322408646A760FED70F2D8214740020E61993A1FFE895
74C96FDDD947618591671EEE89936F7D0F90E6B11CE96BDCBF7B2C20479CB610
D934D0AFBB0721CA3EA49A2D6AB8F9A4A9273E60BD1ACDAB1F7447DBAAB4DD12
4EC36ECC57CEC13712AB1CAC8625150F69DBA3C4F574D88196863F5C61CC51A6
1AE68D44A27F86FFD139CDEF75DF80AB81E> |-
/g3 <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285
C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDA
DE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A52
03A8015DD09B7CE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJBY+Arial /QJJAAA+Arial findfont ct_VMDictPut
/NNOJBY+Arial*1 
[/.notdef /g1 /g2 /g3 252{/.notdef}rp]
NNOJBY+Arial nf
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-308.039 -227.387 mo
(\001)sh
-301.953 -227.387 mo
(\002)sh
-296.879 -227.387 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBY+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4 <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F1
554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D
4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C
980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB
4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F1
858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E
0C619907BEEF9FED49CD2B96F29B7B01884> |-
/g5 <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F
632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2
BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609
FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D295
257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F
0B222> |-
/g6 <1C60D8A8C9B854D00D> |-
/g7 <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F74
68DA1474C45> |-
/g8 <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE1128578
94FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619A
DD420F549AB7C795751D32E8EE6> |-
/g9 <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B
0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8
B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EE
A03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C372
95284C077711C162623860AACA404F650F8D516970257> |-
/g10 <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA
7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883
CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DB
BA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405
FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5
CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D
53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307
B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D1
77B5D88A> |-
/g11 <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/g12 <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D30
2C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC2
35F833AFCC30669C812FBF097879E1> |-
/g13 <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |-
/g14 <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E16
29C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDA
FEAD7BE7BD65F1051699CCF4B0> |-
/g15 <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D916
2B37724F74F272B140D258652D102C2EAC46833C73F9> |-
/g16 <1C60D8A8C9B8096E37F88C8CE86595C6DB8D7364ABD11096FDCAF5A3E9
D76C85AB63D3F346E42ED9D2AEF8A5EA4DF58A64FEEC> |-
/g17 <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210A
AD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B43
4C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047C
DFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F
32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D31
4851DE59> |-
/g18 <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |-
/g19 <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F
517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA
8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793
990906DA8D7F8ACFF6D70790F06B02> |-
/g20 <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |-
/g21 <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
/g22 <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE
4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52A
BD0227B6CDD854C568D5A6F3817645C5> |-
/g23 <1C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA
37FE8A> |-
/g24 <1C60D8A8C9B854D0F461D1A979903F917C33CF6EDB0A437B4DDC715015
0B60E1> |-
/g25 <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000
A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-
/g26 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3AB
C1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10
425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31
D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC6
0C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5
B546505C954A88> |-
/g27 <1C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C11
15332A> |-
/g28 <1C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B39
7B613EE7D27104427D3AF38200F99E7A> |-
/g29 <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/g30 <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |-
/g31 <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBY+Arial /Encoding get
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
dup 31 /g31 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBY+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
224{/.notdef}rp]
NNOJBY+Arial nf
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-288.121 -228.348 mo
(\004)sh
-282.035 -228.348 mo
(\001)sh
-275.945 -228.348 mo
(\005)sh
-269.359 -228.348 mo
(\006)sh
-266.82 -228.348 mo
(\007)sh
-261.492 -228.348 mo
(\006)sh
-258.957 -228.348 mo
(\010)sh
-255.918 -228.348 mo
(\011)sh
-250.844 -228.348 mo
(\012)sh
-245.77 -228.348 mo
(\013)sh
-243.742 -228.348 mo
(\014)sh
-240.707 -228.348 mo
(\015)sh
-233.105 -228.348 mo
(\012)sh
-228.031 -228.348 mo
(\016)sh
-223.469 -228.348 mo
(\014)sh
-220.43 -228.348 mo
(\017)sh
-215.867 -228.348 mo
(\012)sh
-210.793 -228.348 mo
(\010)sh
-207.754 -228.348 mo
(\014)sh
-204.715 -228.348 mo
(\020)sh
-201.477 -228.348 mo
(\021)sh
-194.887 -228.348 mo
(\022)sh
-189.813 -228.348 mo
(\023)sh
-184.742 -228.348 mo
(\003)sh
-179.668 -228.348 mo
(\024)sh
-177.129 -228.348 mo
(\025)sh
-174.09 -228.348 mo
(\020)sh
-170.852 -228.348 mo
(\026)sh
-167.813 -228.348 mo
(\027)sh
-165.277 -228.348 mo
(\030)sh
-162.738 -228.348 mo
(\030)sh
-160.203 -228.348 mo
(\031)sh
-157.668 -228.348 mo
(\030)sh
-155.129 -228.348 mo
(\030)sh
-152.594 -228.348 mo
(\031)sh
-150.055 -228.348 mo
(\032)sh
-144.98 -228.348 mo
(\033)sh
-142.445 -228.348 mo
(\026)sh
-139.406 -228.348 mo
(\034)sh
-134.078 -228.348 mo
(\015)sh
-126.477 -228.348 mo
(\012)sh
-121.402 -228.348 mo
(\016)sh
-116.84 -228.348 mo
(\014)sh
-113.801 -228.348 mo
(\017)sh
-109.238 -228.348 mo
(\012)sh
-104.164 -228.348 mo
(\010)sh
-101.125 -228.348 mo
(\014)sh
-98.0859 -228.348 mo
(\020)sh
-94.8477 -228.348 mo
(\021)sh
-88.2617 -228.348 mo
(\022)sh
-83.1875 -228.348 mo
(\023)sh
-78.1133 -228.348 mo
(\003)sh
-73.0391 -228.348 mo
(\024)sh
-70.5039 -228.348 mo
(\034)sh
-65.1719 -228.348 mo
(\020)sh
-61.9336 -228.348 mo
(\026)sh
-58.8945 -228.348 mo
(\027)sh
-56.3594 -228.348 mo
(\030)sh
-53.8203 -228.348 mo
(\030)sh
-51.2852 -228.348 mo
(\031)sh
-48.7461 -228.348 mo
(\030)sh
-46.2109 -228.348 mo
(\030)sh
-43.6758 -228.348 mo
(\031)sh
-41.1367 -228.348 mo
(\032)sh
-36.0625 -228.348 mo
(\033)sh
-33.5273 -228.348 mo
(\026)sh
-30.4883 -228.348 mo
(\006)sh
-27.9531 -228.348 mo
(\026)sh
-24.9141 -228.348 mo
(\006)sh
-22.375 -228.348 mo
(\035)sh
-19.8398 -228.348 mo
(\006)sh
-17.3008 -228.348 mo
(\004)sh
-11.2148 -228.348 mo
(\036)sh
-9.19141 -228.348 mo
(\024)sh
-6.65234 -228.348 mo
(\037)sh
-2.08984 -228.348 mo
(\027)sh
.445312 -228.348 mo
(\032)sh
5.51953 -228.348 mo
(\031)sh
8.05469 -228.348 mo
(\032)sh
13.1289 -228.348 mo
(\033)sh
-307.801 -314.508 mo
-307.801 -300.949 li
-289.801 -300.949 li
-289.801 -314.508 li
-307.801 -314.508 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-307.801 -304.188 mo
(\001)sh
-301.715 -304.188 mo
(\002)sh
-296.641 -304.188 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBY+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g32 <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC1
17C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C
47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0
EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-
/g33 <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B9
6470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F43633
0DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F5
56CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672
C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/g34 <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0ED
CE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9
F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF3414
8C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36
548FE63FC8465B1B685766E782F0> |-
/g35 <1C60D8A8C9B7EF3224BB0E94C1F3EA8D5F87D58A9CCE> |-
/g36 <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6F
EA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7
264371419D7043A117419C0FAF4C> |-
/g37 <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g38 <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C
5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61
CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-
/g39 <1C60D8A8C9B64EDFF4DFD017B43F7EAB96365BACFBED2D71ADAE4E00FD
12B461A7F13C64E3A175013F8F17B0F966419CDFD1925B86CBC99EE22C73270B
3DB758F48A1908F21BEE4A7E0F431996B89DD71E609DF64575A71FFC> |-
/g40 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g41 <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B45
382285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-
/g42 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BC
D9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB6
3F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200
B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49
372EF96DD9EB13A793559C13CFDFE477> |-
/g43 <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0
DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551
414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E5
25278C31C213B6FF1A25> |-
/g44 <1C60D8A8C9B6FF86FBC793890B55178BE49EEC5102DE4765B31919F6E9
8C7D78C667A3BB4B4E624B689DA4C385DFD1B29DE65FB8AA7AB2EF69B5E095C4
AF9914BE00567D04850B7313AA11B0D0EAADB46E151A37395ABF4FDE5690DD20
8A8203F33BC5AE42ABB3FA5CE6CC7C2FF1141A09489DA9290F5991FC3FADB6E8
008CAB5CAA6CE68D612C9A2AD14F1DB3B2ED2760EC1A22B5BECD6F37DA404DC4
340669554C25AFCF53AD025C5AA750C1F3F80E3A98BEF6E511E50C5B0BE2D927
EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBY+Arial /Encoding get
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
dup 35 /g35 put
dup 36 /g36 put
dup 37 /g37 put
dup 38 /g38 put
dup 39 /g39 put
dup 40 /g40 put
dup 41 /g41 put
dup 42 /g42 put
dup 43 /g43 put
dup 44 /g44 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBY+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 211{/.notdef}rp]
NNOJBY+Arial nf
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-287.879 -305.148 mo
( )sh
-281.793 -305.148 mo
(\037)sh
-277.23 -305.148 mo
(\006)sh
-274.695 -305.148 mo
(\007)sh
-269.363 -305.148 mo
(\006)sh
-266.828 -305.148 mo
(\037)sh
-262.266 -305.148 mo
(!)sh
-257.191 -305.148 mo
(\011)sh
-252.117 -305.148 mo
(")sh
-247.555 -305.148 mo
(#)sh
-242.48 -305.148 mo
(!)sh
-237.41 -305.148 mo
(\022)sh
-232.336 -305.148 mo
($)sh
-225.746 -305.148 mo
(\011)sh
-220.672 -305.148 mo
(\010)sh
-217.633 -305.148 mo
(\014)sh
-214.594 -305.148 mo
(%)sh
-209.523 -305.148 mo
(\004)sh
-203.434 -305.148 mo
(\015)sh
-195.836 -305.148 mo
(\014)sh
-192.797 -305.148 mo
(&)sh
-190.258 -305.148 mo
(\037)sh
-185.695 -305.148 mo
(\014)sh
-182.656 -305.148 mo
(\005)sh
-176.07 -305.148 mo
(')sh
-169.98 -305.148 mo
(#)sh
-164.91 -305.148 mo
(\036)sh
-162.883 -305.148 mo
(\003)sh
-157.809 -305.148 mo
(\027)sh
-155.273 -305.148 mo
(\030)sh
-152.734 -305.148 mo
(\030)sh
-150.199 -305.148 mo
(\031)sh
-147.66 -305.148 mo
(\030)sh
-145.125 -305.148 mo
(\030)sh
-142.59 -305.148 mo
(\031)sh
-140.051 -305.148 mo
(\()sh
-134.977 -305.148 mo
(\033)sh
-132.441 -305.148 mo
(\031)sh
-129.906 -305.148 mo
(\031)sh
-127.367 -305.148 mo
(\031)sh
-124.832 -305.148 mo
(\031)sh
-122.293 -305.148 mo
(\031)sh
-119.758 -305.148 mo
(\020)sh
-116.52 -305.148 mo
(\))sh
-110.43 -305.148 mo
(\012)sh
-105.359 -305.148 mo
(\036)sh
-103.332 -305.148 mo
(\037)sh
-98.7695 -305.148 mo
(\011)sh
-93.6953 -305.148 mo
(\010)sh
-90.6563 -305.148 mo
(\020)sh
-87.418 -305.148 mo
(\026)sh
-84.3789 -305.148 mo
(\026)sh
-81.3398 -305.148 mo
(\031)sh
-78.8047 -305.148 mo
(\025)sh
-75.7656 -305.148 mo
(\()sh
-70.6914 -305.148 mo
(\011)sh
-65.6172 -305.148 mo
(*)sh
-60.543 -305.148 mo
(\031)sh
-58.0078 -305.148 mo
(\()sh
-52.9336 -305.148 mo
(\011)sh
-47.8594 -305.148 mo
(*)sh
-42.7852 -305.148 mo
(\026)sh
-39.7461 -305.148 mo
(\006)sh
-37.2109 -305.148 mo
(\025)sh
-34.1719 -305.148 mo
(\006)sh
-31.6367 -305.148 mo
(+)sh
-23.0195 -305.148 mo
(\036)sh
-20.9961 -305.148 mo
(\003)sh
-15.9219 -305.148 mo
(%)sh
-10.8477 -305.148 mo
(\022)sh
-5.77344 -305.148 mo
($)sh
.8125 -305.148 mo
(,)sh
7.91406 -305.148 mo
(\012)sh
12.9883 -305.148 mo
(\036)sh
15.0117 -305.148 mo
(\003)sh
-307.441 -299.629 mo
-307.441 -286.066 li
-289.32 -286.066 li
-289.32 -299.629 li
-307.441 -299.629 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-307.441 -289.309 mo
(\001)sh
-301.352 -289.309 mo
(\002)sh
-296.281 -289.309 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBY+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g45 <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D
06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A
81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648C
F626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CA
DA1EAAF79B76AA2B52CCF0307B360E6D> |-
/g46 <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE0
23151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/g47 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE
548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C
10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698
FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14
A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C
0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF
6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBY+Arial /Encoding get
dup 45 /g45 put
dup 46 /g46 put
dup 47 /g47 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBY+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
208{/.notdef}rp]
NNOJBY+Arial nf
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-287.52 -290.27 mo
( )sh
-281.434 -290.27 mo
(\003)sh
-276.359 -290.27 mo
(\006)sh
-273.824 -290.27 mo
(\007)sh
-268.492 -290.27 mo
(\006)sh
-265.957 -290.27 mo
($)sh
-259.367 -290.27 mo
(\024)sh
-256.832 -290.27 mo
(\022)sh
-251.758 -290.27 mo
(%)sh
-246.684 -290.27 mo
(-)sh
-241.609 -290.27 mo
(\015)sh
-234.008 -290.27 mo
(\014)sh
-230.973 -290.27 mo
(\006)sh
-228.434 -290.27 mo
(%)sh
-223.359 -290.27 mo
(-)sh
-218.285 -290.27 mo
(\015)sh
-210.688 -290.27 mo
(\024)sh
-208.148 -290.27 mo
(\022)sh
-203.074 -290.27 mo
($)sh
-196.488 -290.27 mo
(\014)sh
-193.449 -290.27 mo
(\037)sh
-188.887 -290.27 mo
(!)sh
-183.813 -290.27 mo
(\011)sh
-178.738 -290.27 mo
(")sh
-174.176 -290.27 mo
(#)sh
-169.102 -290.27 mo
(!)sh
-164.027 -290.27 mo
(\022)sh
-158.953 -290.27 mo
($)sh
-152.367 -290.27 mo
(\011)sh
-147.293 -290.27 mo
(\010)sh
-144.254 -290.27 mo
(\014)sh
-141.215 -290.27 mo
(%)sh
-136.141 -290.27 mo
(\004)sh
-130.055 -290.27 mo
(\015)sh
-122.453 -290.27 mo
(\014)sh
-119.414 -290.27 mo
(&)sh
-116.879 -290.27 mo
(\037)sh
-112.316 -290.27 mo
(\014)sh
-109.277 -290.27 mo
(\005)sh
-102.688 -290.27 mo
(')sh
-96.6016 -290.27 mo
(#)sh
-91.5273 -290.27 mo
(\036)sh
-89.5039 -290.27 mo
(\003)sh
-84.4297 -290.27 mo
(\027)sh
-81.8945 -290.27 mo
(\030)sh
-79.3555 -290.27 mo
(\030)sh
-76.8203 -290.27 mo
(\031)sh
-74.2813 -290.27 mo
(\030)sh
-71.7461 -290.27 mo
(\030)sh
-69.207 -290.27 mo
(\031)sh
-66.6719 -290.27 mo
(\()sh
-61.5977 -290.27 mo
(\033)sh
-59.0625 -290.27 mo
(\031)sh
-56.5234 -290.27 mo
(\031)sh
-53.9883 -290.27 mo
(\031)sh
-51.4492 -290.27 mo
(\031)sh
-48.9141 -290.27 mo
(\031)sh
-46.3789 -290.27 mo
(\020)sh
-43.1367 -290.27 mo
(\))sh
-37.0508 -290.27 mo
(\012)sh
-31.9766 -290.27 mo
(\036)sh
-29.9531 -290.27 mo
(\037)sh
-25.3906 -290.27 mo
(\011)sh
-20.3164 -290.27 mo
(\010)sh
-17.2773 -290.27 mo
(\020)sh
-14.0391 -290.27 mo
(\026)sh
-11 -290.27 mo
(\026)sh
-7.96094 -290.27 mo
(\031)sh
-5.42188 -290.27 mo
(\025)sh
-2.38672 -290.27 mo
(.)sh
2.6875 -290.27 mo
(\011)sh
7.76172 -290.27 mo
(*)sh
12.8359 -290.27 mo
(\031)sh
15.3711 -290.27 mo
(\025)sh
18.4102 -290.27 mo
(/)sh
23.4844 -290.27 mo
(\011)sh
28.5586 -290.27 mo
(*)sh
33.6328 -290.27 mo
(\026)sh
36.6719 -290.27 mo
(\026)sh
39.7109 -290.27 mo
(\006)sh
42.2461 -290.27 mo
(\034)sh
47.5742 -290.27 mo
(\006)sh
50.1133 -290.27 mo
(%)sh
55.1875 -290.27 mo
(-)sh
60.2578 -290.27 mo
(\015)sh
67.8594 -290.27 mo
(\024)sh
70.3984 -290.27 mo
(\022)sh
75.4727 -290.27 mo
($)sh
82.0586 -290.27 mo
(\014)sh
85.0977 -290.27 mo
(\037)sh
89.6602 -290.27 mo
(!)sh
94.7344 -290.27 mo
(\011)sh
99.8086 -290.27 mo
(")sh
104.371 -290.27 mo
(#)sh
109.445 -290.27 mo
(!)sh
114.52 -290.27 mo
(\022)sh
119.59 -290.27 mo
($)sh
126.18 -290.27 mo
(\011)sh
131.254 -290.27 mo
(\010)sh
134.293 -290.27 mo
(\014)sh
137.332 -290.27 mo
(%)sh
142.406 -290.27 mo
(\004)sh
148.492 -290.27 mo
(\015)sh
156.094 -290.27 mo
(\014)sh
159.133 -290.27 mo
(&)sh
161.668 -290.27 mo
(\037)sh
166.23 -290.27 mo
(\014)sh
169.27 -290.27 mo
(\005)sh
175.859 -290.27 mo
(')sh
181.945 -290.27 mo
(#)sh
187.02 -290.27 mo
(\036)sh
189.043 -290.27 mo
(\003)sh
194.117 -290.27 mo
(\027)sh
196.652 -290.27 mo
(\030)sh
199.191 -290.27 mo
(\030)sh
201.727 -290.27 mo
(\031)sh
204.266 -290.27 mo
(\030)sh
206.801 -290.27 mo
(\030)sh
209.34 -290.27 mo
(\031)sh
211.875 -290.27 mo
(\()sh
216.949 -290.27 mo
(\033)sh
219.484 -290.27 mo
(\031)sh
222.023 -290.27 mo
(\031)sh
224.559 -290.27 mo
(\031)sh
227.094 -290.27 mo
(\031)sh
229.633 -290.27 mo
(\031)sh
232.168 -290.27 mo
(\020)sh
235.41 -290.27 mo
(\))sh
241.496 -290.27 mo
(\012)sh
246.57 -290.27 mo
(\036)sh
248.594 -290.27 mo
(\037)sh
253.156 -290.27 mo
(\011)sh
258.23 -290.27 mo
(\010)sh
261.27 -290.27 mo
(\020)sh
264.508 -290.27 mo
(\026)sh
267.547 -290.27 mo
(\026)sh
270.586 -290.27 mo
(\031)sh
273.121 -290.27 mo
(/)sh
278.195 -290.27 mo
(\011)sh
283.27 -290.27 mo
(*)sh
288.344 -290.27 mo
(\031)sh
290.879 -290.27 mo
(.)sh
295.953 -290.27 mo
(\011)sh
301.027 -290.27 mo
(*)sh
306.102 -290.27 mo
(\026)sh
309.141 -290.27 mo
(\026)sh
312.18 -290.27 mo
(\006)sh
314.715 -290.27 mo
(\026)sh
317.754 -290.27 mo
(\006)sh
320.293 -290.27 mo
(\025)sh
323.328 -290.27 mo
(\006)sh
325.867 -290.27 mo
(+)sh
334.48 -290.27 mo
(\036)sh
336.508 -290.27 mo
(\003)sh
341.582 -290.27 mo
(%)sh
346.652 -290.27 mo
(\022)sh
351.727 -290.27 mo
($)sh
358.316 -290.27 mo
(,)sh
365.414 -290.27 mo
(\012)sh
370.488 -290.27 mo
(\036)sh
372.516 -290.27 mo
(\003)sh
-307.32 -255.226 mo
-307.32 -241.668 li
-289.199 -241.668 li
-289.199 -255.226 li
-307.32 -255.226 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-307.32 -244.91 mo
(\001)sh
-301.234 -244.91 mo
(\002)sh
-296.16 -244.91 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: QJJAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBY+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g48 <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
/g49 <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106
F3AC927984C1E464F121F968> |-
/g50 <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AF
B379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE
8F80AF5A83421F8F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBY+Arial /Encoding get
dup 48 /g48 put
dup 49 /g49 put
dup 50 /g50 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBY+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 205{/.notdef}rp]
NNOJBY+Arial nf
NNOJBY+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-287.398 -245.867 mo
(0)sh
-281.313 -245.867 mo
(1)sh
-274.727 -245.867 mo
(\005)sh
-268.137 -245.867 mo
(\006)sh
-265.602 -245.867 mo
(\007)sh
-260.27 -245.867 mo
(\006)sh
-257.734 -245.867 mo
( )sh
-251.648 -245.867 mo
(\037)sh
-247.086 -245.867 mo
(\006)sh
-244.547 -245.867 mo
(\025)sh
-241.508 -245.867 mo
(\006)sh
-238.973 -245.867 mo
(2)sh
-231.371 -245.867 mo
(\011)sh
-226.297 -245.867 mo
(\012)sh
-221.223 -245.867 mo
(\003)sh
-216.148 -245.867 mo
( )sh
-210.063 -245.867 mo
(\003)sh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g25 <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-
/g26 <1C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A
320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |-
/g27 <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D
06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A
81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648C
F626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CA
DA1EAAF79B76AA2B52CCF0307B360E6D> |-
/g28 <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g29 <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817
A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D
559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0
C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667
DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FB
D88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF
575C72F67F4BEBB98F8AFA57505EC9> |-
/g30 <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 225{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
155.281 5.41016 mo
(\031)sh
159.484 5.41016 mo
(\002)sh
161.164 5.41016 mo
(\021)sh
165.371 5.41016 mo
(\032)sh
169.152 5.41016 mo
(\006)sh
171.258 5.41016 mo
(\033)sh
175.461 5.41016 mo
(\020)sh
179.668 5.41016 mo
(\034)sh
183.875 5.41016 mo
(\035)sh
188.078 5.41016 mo
(\004)sh
192.285 5.41016 mo
(\001)sh
194.387 5.41016 mo
(\006)sh
196.492 5.41016 mo
(\007)sh
200.273 5.41016 mo
(\002)sh
201.953 5.41016 mo
(\003)sh
208.254 5.41016 mo
(\020)sh
212.457 5.41016 mo
(\036)sh
214.137 5.41016 mo
(\012)sh
218.344 5.41016 mo
(\001)sh
220.445 5.41016 mo
(\002)sh
222.125 5.41016 mo
(\017)sh
226.332 5.41016 mo
(\021)sh
230.535 5.41016 mo
(\006)sh
232.641 5.41016 mo
(\013)sh
235.16 5.41016 mo
(\004)sh
239.363 5.41016 mo
(\007)sh
243.148 5.41016 mo
(\020)sh
247.352 5.41016 mo
(\036)sh
249.031 5.41016 mo
(\001)sh
251.133 5.41016 mo
(\007)sh
.72 lw
0 lj
.359 12.852 mo
.359 194.172 li
411.602 194.172 li
411.602 12.852 li
.359 12.852 li
cp
@
.12 lw
.84 23.051 mo
411.238 23.051 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g31 <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4
F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F
2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA4260
9FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D29
5257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3
F0B222> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 31 /g31 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
224{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
32.2813 20.6523 mo
(\037)sh
69.238 13.211 mo
69.238 23.051 li
@
69.238 23.051 mo
69.238 193.934 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g32 <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE0
23151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/g33 <1C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |-
/g34 <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C07
1A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17
DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1
FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603
BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7E
FB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C9521957
1FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A
19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A55
977C35> |-
/g35 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g36 <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/g37 <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/g38 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE
548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C
10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698
FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14
A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C
0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF
6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
/g39 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BC
D9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB6
3F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200
B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49
372EF96DD9EB13A793559C13CFDFE477> |-
/g40 <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB
3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F5
5546101EE3> |-
/g41 <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC1
17C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C
47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0
EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
dup 35 /g35 put
dup 36 /g36 put
dup 37 /g37 put
dup 38 /g38 put
dup 39 /g39 put
dup 40 /g40 put
dup 41 /g41 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 214{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
27.9609 33.4922 mo
( )sh
32.168 33.4922 mo
(\025)sh
36.3711 33.4922 mo
(!)sh
38.4766 33.4922 mo
(\025)sh
42.6797 33.4922 mo
(\025)sh
46.8867 33.4922 mo
(\025)sh
51.0938 33.4922 mo
(\025)sh
55.2969 33.4922 mo
(\025)sh
59.5039 33.4922 mo
(\025)sh
27.9609 41.1719 mo
(")sh
32.168 41.1719 mo
(\025)sh
36.3711 41.1719 mo
(!)sh
38.4766 41.1719 mo
(\025)sh
42.6797 41.1719 mo
(\025)sh
46.8867 41.1719 mo
(\025)sh
51.0938 41.1719 mo
(\025)sh
55.2969 41.1719 mo
(\025)sh
59.5039 41.1719 mo
(\025)sh
23.7617 48.8516 mo
(#)sh
27.9648 48.8516 mo
($)sh
32.1719 48.8516 mo
(\025)sh
36.3789 48.8516 mo
(!)sh
38.4805 48.8516 mo
(\025)sh
42.6875 48.8516 mo
(\025)sh
46.8906 48.8516 mo
(\025)sh
51.0977 48.8516 mo
(\025)sh
55.3047 48.8516 mo
(\025)sh
59.5078 48.8516 mo
(\025)sh
23.7617 56.5313 mo
(#)sh
27.9648 56.5313 mo
(%)sh
32.1719 56.5313 mo
(\025)sh
36.3789 56.5313 mo
(!)sh
38.4805 56.5313 mo
(\025)sh
42.6875 56.5313 mo
(\025)sh
46.8906 56.5313 mo
(\025)sh
51.0977 56.5313 mo
(\025)sh
55.3047 56.5313 mo
(\025)sh
59.5078 56.5313 mo
(\025)sh
23.7617 64.2109 mo
($)sh
27.9648 64.2109 mo
(\025)sh
32.1719 64.2109 mo
(\025)sh
36.3789 64.2109 mo
(!)sh
38.4805 64.2109 mo
(\025)sh
42.6875 64.2109 mo
(\025)sh
46.8906 64.2109 mo
(\025)sh
51.0977 64.2109 mo
(\025)sh
55.3047 64.2109 mo
(\025)sh
59.5078 64.2109 mo
(\025)sh
23.7617 71.8906 mo
($)sh
27.9648 71.8906 mo
( )sh
32.1719 71.8906 mo
(\025)sh
36.3789 71.8906 mo
(!)sh
38.4805 71.8906 mo
(\025)sh
42.6875 71.8906 mo
(\025)sh
46.8906 71.8906 mo
(\025)sh
51.0977 71.8906 mo
(\025)sh
55.3047 71.8906 mo
(\025)sh
59.5078 71.8906 mo
(\025)sh
23.7617 79.5703 mo
($)sh
27.9648 79.5703 mo
(")sh
32.1719 79.5703 mo
(\025)sh
36.3789 79.5703 mo
(!)sh
38.4805 79.5703 mo
(\025)sh
42.6875 79.5703 mo
(\025)sh
46.8906 79.5703 mo
(\025)sh
51.0977 79.5703 mo
(\025)sh
55.3047 79.5703 mo
(\025)sh
59.5078 79.5703 mo
(\025)sh
23.7617 87.25 mo
(&)sh
27.9648 87.25 mo
($)sh
32.1719 87.25 mo
(\025)sh
36.3789 87.25 mo
(!)sh
38.4805 87.25 mo
(\025)sh
42.6875 87.25 mo
(\025)sh
46.8906 87.25 mo
(\025)sh
51.0977 87.25 mo
(\025)sh
55.3047 87.25 mo
(\025)sh
59.5078 87.25 mo
(\025)sh
23.7617 94.9297 mo
(&)sh
27.9648 94.9297 mo
(%)sh
32.1719 94.9297 mo
(\025)sh
36.3789 94.9297 mo
(!)sh
38.4805 94.9297 mo
(\025)sh
42.6875 94.9297 mo
(\025)sh
46.8906 94.9297 mo
(\025)sh
51.0977 94.9297 mo
(\025)sh
55.3047 94.9297 mo
(\025)sh
59.5078 94.9297 mo
(\025)sh
23.7617 102.613 mo
( )sh
27.9648 102.613 mo
(\025)sh
32.1719 102.613 mo
(\025)sh
36.3789 102.613 mo
(!)sh
38.4805 102.613 mo
(\025)sh
42.6875 102.613 mo
(\025)sh
46.8906 102.613 mo
(\025)sh
51.0977 102.613 mo
(\025)sh
55.3047 102.613 mo
(\025)sh
59.5078 102.613 mo
(\025)sh
23.7617 110.293 mo
( )sh
27.9648 110.293 mo
( )sh
32.1719 110.293 mo
(\025)sh
36.3789 110.293 mo
(!)sh
38.4805 110.293 mo
(\025)sh
42.6875 110.293 mo
(\025)sh
46.8906 110.293 mo
(\025)sh
51.0977 110.293 mo
(\025)sh
55.3047 110.293 mo
(\025)sh
59.5078 110.293 mo
(\025)sh
23.7617 117.852 mo
( )sh
27.9648 117.852 mo
(")sh
32.1719 117.852 mo
(\025)sh
36.3789 117.852 mo
(!)sh
38.4805 117.852 mo
(\025)sh
42.6875 117.852 mo
(\025)sh
46.8906 117.852 mo
(\025)sh
51.0977 117.852 mo
(\025)sh
55.3047 117.852 mo
(\025)sh
59.5078 117.852 mo
(\025)sh
23.7617 125.531 mo
(')sh
27.9648 125.531 mo
($)sh
32.1719 125.531 mo
(\025)sh
36.3789 125.531 mo
(!)sh
38.4805 125.531 mo
(\025)sh
42.6875 125.531 mo
(\025)sh
46.8906 125.531 mo
(\025)sh
51.0977 125.531 mo
(\025)sh
55.3047 125.531 mo
(\025)sh
59.5078 125.531 mo
(\025)sh
23.7617 133.211 mo
(')sh
27.9648 133.211 mo
(%)sh
32.1719 133.211 mo
(\025)sh
36.3789 133.211 mo
(!)sh
38.4805 133.211 mo
(\025)sh
42.6875 133.211 mo
(\025)sh
46.8906 133.211 mo
(\025)sh
51.0977 133.211 mo
(\025)sh
55.3047 133.211 mo
(\025)sh
59.5078 133.211 mo
(\025)sh
23.7617 140.891 mo
(%)sh
27.9648 140.891 mo
(\025)sh
32.1719 140.891 mo
(\025)sh
36.3789 140.891 mo
(!)sh
38.4805 140.891 mo
(\025)sh
42.6875 140.891 mo
(\025)sh
46.8906 140.891 mo
(\025)sh
51.0977 140.891 mo
(\025)sh
55.3047 140.891 mo
(\025)sh
59.5078 140.891 mo
(\025)sh
23.7617 148.57 mo
(%)sh
27.9648 148.57 mo
( )sh
32.1719 148.57 mo
(\025)sh
36.3789 148.57 mo
(!)sh
38.4805 148.57 mo
(\025)sh
42.6875 148.57 mo
(\025)sh
46.8906 148.57 mo
(\025)sh
51.0977 148.57 mo
(\025)sh
55.3047 148.57 mo
(\025)sh
59.5078 148.57 mo
(\025)sh
23.7617 156.25 mo
(%)sh
27.9648 156.25 mo
(")sh
32.1719 156.25 mo
(\025)sh
36.3789 156.25 mo
(!)sh
38.4805 156.25 mo
(\025)sh
42.6875 156.25 mo
(\025)sh
46.8906 156.25 mo
(\025)sh
51.0977 156.25 mo
(\025)sh
55.3047 156.25 mo
(\025)sh
59.5078 156.25 mo
(\025)sh
23.7617 163.93 mo
(\()sh
27.9648 163.93 mo
($)sh
32.1719 163.93 mo
(\025)sh
36.3789 163.93 mo
(!)sh
38.4805 163.93 mo
(\025)sh
42.6875 163.93 mo
(\025)sh
46.8906 163.93 mo
(\025)sh
51.0977 163.93 mo
(\025)sh
55.3047 163.93 mo
(\025)sh
59.5078 163.93 mo
(\025)sh
23.7617 171.613 mo
(\()sh
27.9648 171.613 mo
(%)sh
32.1719 171.613 mo
(\025)sh
36.3789 171.613 mo
(!)sh
38.4805 171.613 mo
(\025)sh
42.6875 171.613 mo
(\025)sh
46.8906 171.613 mo
(\025)sh
51.0977 171.613 mo
(\025)sh
55.3047 171.613 mo
(\025)sh
59.5078 171.613 mo
(\025)sh
23.7617 179.293 mo
(")sh
27.9648 179.293 mo
(\025)sh
32.1719 179.293 mo
(\025)sh
36.3789 179.293 mo
(!)sh
38.4805 179.293 mo
(\025)sh
42.6875 179.293 mo
(\025)sh
46.8906 179.293 mo
(\025)sh
51.0977 179.293 mo
(\025)sh
55.3047 179.293 mo
(\025)sh
59.5078 179.293 mo
(\025)sh
99 20.6523 mo
(\))sh
104.047 20.6523 mo
(\007)sh
69.238 23.051 mo
137.641 23.051 li
@
137.641 13.211 mo
137.641 23.051 li
@
137.641 23.051 mo
137.641 193.934 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g42 <1C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6D
EBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C
3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5
BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E
169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD30
72425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA2
7D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E1
7188994F16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 42 /g42 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 213{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
93.9609 33.4922 mo
(\022)sh
96.4805 33.4922 mo
(')sh
100.684 33.4922 mo
( )sh
104.891 33.4922 mo
(!)sh
106.992 33.4922 mo
(#)sh
111.199 33.4922 mo
(#)sh
115.406 33.4922 mo
(\025)sh
119.609 33.4922 mo
(%)sh
123.816 33.4922 mo
(&)sh
128.023 33.4922 mo
(&)sh
93.9609 41.1719 mo
(\022)sh
96.4805 41.1719 mo
(%)sh
100.684 41.1719 mo
(%)sh
104.891 41.1719 mo
(!)sh
106.992 41.1719 mo
(#)sh
111.199 41.1719 mo
(')sh
115.406 41.1719 mo
(#)sh
119.609 41.1719 mo
(*)sh
123.816 41.1719 mo
(#)sh
128.023 41.1719 mo
(\()sh
93.9609 48.8516 mo
(\022)sh
96.4805 48.8516 mo
(\()sh
100.684 48.8516 mo
(&)sh
104.891 48.8516 mo
(!)sh
106.992 48.8516 mo
(#)sh
111.199 48.8516 mo
(*)sh
115.406 48.8516 mo
(&)sh
119.609 48.8516 mo
(\()sh
123.816 48.8516 mo
(')sh
128.023 48.8516 mo
( )sh
93.9609 56.5313 mo
(\022)sh
96.4805 56.5313 mo
(\()sh
100.684 56.5313 mo
(")sh
104.891 56.5313 mo
(!)sh
106.992 56.5313 mo
(#)sh
111.199 56.5313 mo
(*)sh
115.406 56.5313 mo
(#)sh
119.609 56.5313 mo
(\()sh
123.816 56.5313 mo
(#)sh
128.023 56.5313 mo
(%)sh
93.9609 64.2109 mo
(\022)sh
96.4805 64.2109 mo
(")sh
100.684 64.2109 mo
($)sh
104.891 64.2109 mo
(!)sh
106.992 64.2109 mo
(\025)sh
111.199 64.2109 mo
(%)sh
115.406 64.2109 mo
(')sh
119.609 64.2109 mo
( )sh
123.816 64.2109 mo
(%)sh
128.023 64.2109 mo
(')sh
93.9609 71.8906 mo
(\022)sh
96.4805 71.8906 mo
(")sh
100.684 71.8906 mo
(')sh
104.891 71.8906 mo
(!)sh
106.992 71.8906 mo
($)sh
111.199 71.8906 mo
(&)sh
115.406 71.8906 mo
( )sh
119.609 71.8906 mo
(%)sh
123.816 71.8906 mo
(%)sh
128.023 71.8906 mo
(%)sh
93.9609 79.5703 mo
(\022)sh
96.4805 79.5703 mo
(")sh
100.684 79.5703 mo
(\()sh
104.891 79.5703 mo
(!)sh
106.992 79.5703 mo
(")sh
111.199 79.5703 mo
(*)sh
115.406 79.5703 mo
(%)sh
119.609 79.5703 mo
(%)sh
123.816 79.5703 mo
(&)sh
128.023 79.5703 mo
(%)sh
93.9609 87.25 mo
(\022)sh
96.4805 87.25 mo
(*)sh
100.684 87.25 mo
(\025)sh
104.891 87.25 mo
(!)sh
106.992 87.25 mo
($)sh
111.199 87.25 mo
($)sh
115.406 87.25 mo
(#)sh
119.609 87.25 mo
(")sh
123.816 87.25 mo
(#)sh
128.023 87.25 mo
(&)sh
93.9609 94.9297 mo
(\022)sh
96.4805 94.9297 mo
(*)sh
100.684 94.9297 mo
($)sh
104.891 94.9297 mo
(!)sh
106.992 94.9297 mo
($)sh
111.199 94.9297 mo
(\()sh
115.406 94.9297 mo
( )sh
119.609 94.9297 mo
(')sh
123.816 94.9297 mo
(")sh
128.023 94.9297 mo
( )sh
93.9609 102.613 mo
(\022)sh
96.4805 102.613 mo
(*)sh
100.684 102.613 mo
( )sh
104.891 102.613 mo
(!)sh
106.992 102.613 mo
(#)sh
111.199 102.613 mo
(\025)sh
115.406 102.613 mo
($)sh
119.609 102.613 mo
(")sh
123.816 102.613 mo
( )sh
128.023 102.613 mo
(\025)sh
93.9609 110.293 mo
(\022)sh
96.4805 110.293 mo
(*)sh
100.684 110.293 mo
(')sh
104.891 110.293 mo
(!)sh
106.992 110.293 mo
(\()sh
111.199 110.293 mo
(\025)sh
115.406 110.293 mo
(")sh
119.609 110.293 mo
(")sh
123.816 110.293 mo
(\025)sh
128.023 110.293 mo
($)sh
93.9609 117.852 mo
(\022)sh
96.4805 117.852 mo
(*)sh
100.684 117.852 mo
(\()sh
104.891 117.852 mo
(!)sh
106.992 117.852 mo
($)sh
111.199 117.852 mo
( )sh
115.406 117.852 mo
(&)sh
119.609 117.852 mo
(%)sh
123.816 117.852 mo
(%)sh
128.023 117.852 mo
( )sh
93.9609 125.531 mo
(\022)sh
96.4805 125.531 mo
(*)sh
100.684 125.531 mo
(")sh
104.891 125.531 mo
(!)sh
106.992 125.531 mo
(%)sh
111.199 125.531 mo
( )sh
115.406 125.531 mo
( )sh
119.609 125.531 mo
(\025)sh
123.816 125.531 mo
(*)sh
128.023 125.531 mo
($)sh
93.9609 133.211 mo
(\022)sh
96.4805 133.211 mo
(*)sh
100.684 133.211 mo
(*)sh
104.891 133.211 mo
(!)sh
106.992 133.211 mo
(")sh
111.199 133.211 mo
(")sh
115.406 133.211 mo
(*)sh
119.609 133.211 mo
($)sh
123.816 133.211 mo
(&)sh
128.023 133.211 mo
(\()sh
89.6406 140.891 mo
(\022)sh
92.1602 140.891 mo
(#)sh
96.3633 140.891 mo
(\025)sh
100.57 140.891 mo
(#)sh
104.777 140.891 mo
(!)sh
106.879 140.891 mo
(\025)sh
111.086 140.891 mo
(&)sh
115.289 140.891 mo
(%)sh
119.496 140.891 mo
( )sh
123.703 140.891 mo
(\()sh
127.906 140.891 mo
(#)sh
89.6406 148.57 mo
(\022)sh
92.1602 148.57 mo
(#)sh
96.3633 148.57 mo
(\025)sh
100.57 148.57 mo
($)sh
104.777 148.57 mo
(!)sh
106.879 148.57 mo
(#)sh
111.086 148.57 mo
(%)sh
115.289 148.57 mo
( )sh
119.496 148.57 mo
(\025)sh
123.703 148.57 mo
(\()sh
127.906 148.57 mo
(%)sh
89.6406 156.25 mo
(\022)sh
92.1602 156.25 mo
(#)sh
96.3633 156.25 mo
(\025)sh
100.57 156.25 mo
(&)sh
104.777 156.25 mo
(!)sh
106.879 156.25 mo
(#)sh
111.086 156.25 mo
(")sh
115.289 156.25 mo
( )sh
119.496 156.25 mo
(")sh
123.703 156.25 mo
(\()sh
127.906 156.25 mo
( )sh
89.6406 163.93 mo
(\022)sh
92.1602 163.93 mo
(#)sh
96.3633 163.93 mo
(\025)sh
100.57 163.93 mo
( )sh
104.777 163.93 mo
(!)sh
106.879 163.93 mo
($)sh
111.086 163.93 mo
($)sh
115.289 163.93 mo
(#)sh
119.496 163.93 mo
( )sh
123.703 163.93 mo
(')sh
127.906 163.93 mo
(&)sh
89.6406 171.613 mo
(\022)sh
92.1602 171.613 mo
(#)sh
96.3633 171.613 mo
(\025)sh
100.57 171.613 mo
(')sh
104.777 171.613 mo
(!)sh
106.879 171.613 mo
(#)sh
111.086 171.613 mo
(\025)sh
115.289 171.613 mo
(\()sh
119.496 171.613 mo
($)sh
123.703 171.613 mo
(\()sh
127.906 171.613 mo
(\025)sh
89.6406 179.293 mo
(\022)sh
92.1602 179.293 mo
(#)sh
96.3633 179.293 mo
(\025)sh
100.57 179.293 mo
(')sh
104.777 179.293 mo
(!)sh
106.879 179.293 mo
(")sh
111.086 179.293 mo
(')sh
115.289 179.293 mo
(&)sh
119.496 179.293 mo
($)sh
123.703 179.293 mo
(\025)sh
127.906 179.293 mo
($)sh
167.16 20.6523 mo
(\))sh
172.207 20.6523 mo
(\021)sh
137.641 23.051 mo
206.039 23.051 li
@
206.039 13.211 mo
206.039 23.051 li
@
206.039 23.051 mo
206.039 193.934 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g43 <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F
1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886
D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5
C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AA
B4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F
1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174
E0C619907BEEF9FED49CD2B96F29B7B01884> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 43 /g43 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 212{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
158.039 33.4922 mo
(\022)sh
160.559 33.4922 mo
(#)sh
164.766 33.4922 mo
(#)sh
168.969 33.4922 mo
(\()sh
173.176 33.4922 mo
(!)sh
175.277 33.4922 mo
(\025)sh
179.484 33.4922 mo
(')sh
183.691 33.4922 mo
($)sh
187.895 33.4922 mo
(\()sh
192.102 33.4922 mo
(\()sh
196.309 33.4922 mo
(\025)sh
158.039 41.1719 mo
(\022)sh
160.559 41.1719 mo
(#)sh
164.766 41.1719 mo
(#)sh
168.969 41.1719 mo
(\()sh
173.176 41.1719 mo
(!)sh
175.277 41.1719 mo
(%)sh
179.484 41.1719 mo
(#)sh
183.691 41.1719 mo
(\()sh
187.895 41.1719 mo
(")sh
192.102 41.1719 mo
($)sh
196.309 41.1719 mo
($)sh
158.039 48.8516 mo
(\022)sh
160.559 48.8516 mo
(#)sh
164.766 48.8516 mo
(#)sh
168.969 48.8516 mo
(")sh
173.176 48.8516 mo
(!)sh
175.277 48.8516 mo
(\025)sh
179.484 48.8516 mo
(&)sh
183.691 48.8516 mo
($)sh
187.895 48.8516 mo
(&)sh
192.102 48.8516 mo
(#)sh
196.309 48.8516 mo
(&)sh
158.039 56.5313 mo
(\022)sh
160.559 56.5313 mo
(#)sh
164.766 56.5313 mo
(#)sh
168.969 56.5313 mo
(\()sh
173.176 56.5313 mo
(!)sh
175.277 56.5313 mo
(\()sh
179.484 56.5313 mo
(\025)sh
183.691 56.5313 mo
(&)sh
187.895 56.5313 mo
( )sh
192.102 56.5313 mo
(")sh
196.309 56.5313 mo
(\()sh
158.039 64.2109 mo
(\022)sh
160.559 64.2109 mo
(#)sh
164.766 64.2109 mo
(#)sh
168.969 64.2109 mo
(")sh
173.176 64.2109 mo
(!)sh
175.277 64.2109 mo
(\025)sh
179.484 64.2109 mo
( )sh
183.691 64.2109 mo
($)sh
187.895 64.2109 mo
($)sh
192.102 64.2109 mo
(')sh
196.309 64.2109 mo
($)sh
158.039 71.8906 mo
(\022)sh
160.559 71.8906 mo
(#)sh
164.766 71.8906 mo
(#)sh
168.969 71.8906 mo
(\()sh
173.176 71.8906 mo
(!)sh
175.277 71.8906 mo
(")sh
179.484 71.8906 mo
($)sh
183.691 71.8906 mo
(\()sh
187.895 71.8906 mo
(')sh
192.102 71.8906 mo
(")sh
196.309 71.8906 mo
(\025)sh
158.039 79.5703 mo
(\022)sh
160.559 79.5703 mo
(#)sh
164.766 79.5703 mo
(#)sh
168.969 79.5703 mo
(\()sh
173.176 79.5703 mo
(!)sh
175.277 79.5703 mo
(")sh
179.484 79.5703 mo
(#)sh
183.691 79.5703 mo
(")sh
187.895 79.5703 mo
(*)sh
192.102 79.5703 mo
( )sh
196.309 79.5703 mo
(%)sh
158.039 87.25 mo
(\022)sh
160.559 87.25 mo
(#)sh
164.766 87.25 mo
(#)sh
168.969 87.25 mo
(\()sh
173.176 87.25 mo
(!)sh
175.277 87.25 mo
(%)sh
179.484 87.25 mo
(*)sh
183.691 87.25 mo
(&)sh
187.895 87.25 mo
(\025)sh
192.102 87.25 mo
(#)sh
196.309 87.25 mo
(#)sh
158.039 94.9297 mo
(\022)sh
160.559 94.9297 mo
(#)sh
164.766 94.9297 mo
(#)sh
168.969 94.9297 mo
(\()sh
173.176 94.9297 mo
(!)sh
175.277 94.9297 mo
(*)sh
179.484 94.9297 mo
( )sh
183.691 94.9297 mo
(&)sh
187.895 94.9297 mo
(#)sh
192.102 94.9297 mo
(\025)sh
196.309 94.9297 mo
(*)sh
158.039 102.613 mo
(\022)sh
160.559 102.613 mo
(#)sh
164.766 102.613 mo
(#)sh
168.969 102.613 mo
(\()sh
173.176 102.613 mo
(!)sh
175.277 102.613 mo
(")sh
179.484 102.613 mo
(*)sh
183.691 102.613 mo
(\()sh
187.895 102.613 mo
(&)sh
192.102 102.613 mo
(\025)sh
196.309 102.613 mo
(&)sh
158.039 110.293 mo
(\022)sh
160.559 110.293 mo
(#)sh
164.766 110.293 mo
(#)sh
168.969 110.293 mo
(\()sh
173.176 110.293 mo
(!)sh
175.277 110.293 mo
(\()sh
179.484 110.293 mo
(#)sh
183.691 110.293 mo
($)sh
187.895 110.293 mo
($)sh
192.102 110.293 mo
(\025)sh
196.309 110.293 mo
($)sh
158.039 117.852 mo
(\022)sh
160.559 117.852 mo
(#)sh
164.766 117.852 mo
(#)sh
168.969 117.852 mo
(\()sh
173.176 117.852 mo
(!)sh
175.277 117.852 mo
(%)sh
179.484 117.852 mo
(")sh
183.691 117.852 mo
(\()sh
187.895 117.852 mo
(*)sh
192.102 117.852 mo
( )sh
196.309 117.852 mo
(\025)sh
158.039 125.531 mo
(\022)sh
160.559 125.531 mo
(#)sh
164.766 125.531 mo
(#)sh
168.969 125.531 mo
(\()sh
173.176 125.531 mo
(!)sh
175.277 125.531 mo
(*)sh
179.484 125.531 mo
(")sh
183.691 125.531 mo
(&)sh
187.895 125.531 mo
(%)sh
192.102 125.531 mo
(\()sh
196.309 125.531 mo
(\025)sh
158.039 133.211 mo
(\022)sh
160.559 133.211 mo
(#)sh
164.766 133.211 mo
(#)sh
168.969 133.211 mo
(\()sh
173.176 133.211 mo
(!)sh
175.277 133.211 mo
(\()sh
179.484 133.211 mo
(#)sh
183.691 133.211 mo
($)sh
187.895 133.211 mo
(#)sh
192.102 133.211 mo
(&)sh
196.309 133.211 mo
(\025)sh
158.039 140.891 mo
(\022)sh
160.559 140.891 mo
(#)sh
164.766 140.891 mo
(#)sh
168.969 140.891 mo
(\()sh
173.176 140.891 mo
(!)sh
175.277 140.891 mo
( )sh
179.484 140.891 mo
( )sh
183.691 140.891 mo
(#)sh
187.895 140.891 mo
($)sh
192.102 140.891 mo
(*)sh
196.309 140.891 mo
(")sh
158.039 148.57 mo
(\022)sh
160.559 148.57 mo
(#)sh
164.766 148.57 mo
(#)sh
168.969 148.57 mo
(\()sh
173.176 148.57 mo
(!)sh
175.277 148.57 mo
(%)sh
179.484 148.57 mo
( )sh
183.691 148.57 mo
(\()sh
187.895 148.57 mo
($)sh
192.102 148.57 mo
(\()sh
196.309 148.57 mo
(%)sh
158.039 156.25 mo
(\022)sh
160.559 156.25 mo
(#)sh
164.766 156.25 mo
(#)sh
168.969 156.25 mo
(\()sh
173.176 156.25 mo
(!)sh
175.277 156.25 mo
(*)sh
179.484 156.25 mo
($)sh
183.691 156.25 mo
( )sh
187.895 156.25 mo
(\()sh
192.102 156.25 mo
(*)sh
196.309 156.25 mo
(*)sh
158.039 163.93 mo
(\022)sh
160.559 163.93 mo
(#)sh
164.766 163.93 mo
(#)sh
168.969 163.93 mo
(")sh
173.176 163.93 mo
(!)sh
175.277 163.93 mo
(\025)sh
179.484 163.93 mo
(\025)sh
183.691 163.93 mo
(\()sh
187.895 163.93 mo
(%)sh
192.102 163.93 mo
(&)sh
196.309 163.93 mo
($)sh
158.039 171.613 mo
(\022)sh
160.559 171.613 mo
(#)sh
164.766 171.613 mo
(#)sh
168.969 171.613 mo
(\()sh
173.176 171.613 mo
(!)sh
175.277 171.613 mo
(\()sh
179.484 171.613 mo
( )sh
183.691 171.613 mo
(*)sh
187.895 171.613 mo
(%)sh
192.102 171.613 mo
(&)sh
196.309 171.613 mo
(\025)sh
158.039 179.293 mo
(\022)sh
160.559 179.293 mo
(#)sh
164.766 179.293 mo
(#)sh
168.969 179.293 mo
(\()sh
173.176 179.293 mo
(!)sh
175.277 179.293 mo
(")sh
179.484 179.293 mo
(')sh
183.691 179.293 mo
(")sh
187.895 179.293 mo
($)sh
192.102 179.293 mo
( )sh
196.309 179.293 mo
( )sh
232.441 20.6523 mo
(+)sh
237.484 20.6523 mo
(\030)sh
242.531 20.6523 mo
(\037)sh
206.039 23.051 mo
274.441 23.051 li
@
274.441 13.211 mo
274.441 23.051 li
@
274.441 23.051 mo
274.441 193.934 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g44 <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
/g45 <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106
F3AC927984C1E464F121F968> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 44 /g44 put
dup 45 /g45 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 210{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
237.359 33.4922 mo
(\025)sh
241.566 33.4922 mo
(!)sh
243.668 33.4922 mo
(\025)sh
247.875 33.4922 mo
(\025)sh
252.082 33.4922 mo
(\025)sh
256.285 33.4922 mo
(\025)sh
260.492 33.4922 mo
(\025)sh
264.699 33.4922 mo
(\025)sh
237.359 41.1719 mo
(\025)sh
241.566 41.1719 mo
(!)sh
243.668 41.1719 mo
(\025)sh
247.875 41.1719 mo
(\025)sh
252.082 41.1719 mo
(\025)sh
256.285 41.1719 mo
(\025)sh
260.492 41.1719 mo
(\025)sh
264.699 41.1719 mo
(\025)sh
237.359 48.8516 mo
(\025)sh
241.566 48.8516 mo
(!)sh
243.668 48.8516 mo
(\025)sh
247.875 48.8516 mo
(\025)sh
252.082 48.8516 mo
(\025)sh
256.285 48.8516 mo
(\025)sh
260.492 48.8516 mo
(\025)sh
264.699 48.8516 mo
(\025)sh
237.359 56.5313 mo
(\025)sh
241.566 56.5313 mo
(!)sh
243.668 56.5313 mo
(\025)sh
247.875 56.5313 mo
(\025)sh
252.082 56.5313 mo
(\025)sh
256.285 56.5313 mo
(\025)sh
260.492 56.5313 mo
(\025)sh
264.699 56.5313 mo
(\025)sh
237.359 64.2109 mo
(\025)sh
241.566 64.2109 mo
(!)sh
243.668 64.2109 mo
(\025)sh
247.875 64.2109 mo
(\025)sh
252.082 64.2109 mo
(\025)sh
256.285 64.2109 mo
(\025)sh
260.492 64.2109 mo
(\025)sh
264.699 64.2109 mo
(\025)sh
237.359 71.8906 mo
(\025)sh
241.566 71.8906 mo
(!)sh
243.668 71.8906 mo
(\025)sh
247.875 71.8906 mo
(\025)sh
252.082 71.8906 mo
(\025)sh
256.285 71.8906 mo
(\025)sh
260.492 71.8906 mo
(\025)sh
264.699 71.8906 mo
(\025)sh
237.359 79.5703 mo
(\025)sh
241.566 79.5703 mo
(!)sh
243.668 79.5703 mo
(\025)sh
247.875 79.5703 mo
(\025)sh
252.082 79.5703 mo
(\025)sh
256.285 79.5703 mo
(\025)sh
260.492 79.5703 mo
(\025)sh
264.699 79.5703 mo
(\025)sh
237.359 87.25 mo
(\025)sh
241.566 87.25 mo
(!)sh
243.668 87.25 mo
(\025)sh
247.875 87.25 mo
(\025)sh
252.082 87.25 mo
(\025)sh
256.285 87.25 mo
(\025)sh
260.492 87.25 mo
(\025)sh
264.699 87.25 mo
(\025)sh
237.359 94.9297 mo
(\025)sh
241.566 94.9297 mo
(!)sh
243.668 94.9297 mo
(\025)sh
247.875 94.9297 mo
(\025)sh
252.082 94.9297 mo
( )sh
256.285 94.9297 mo
(\025)sh
260.492 94.9297 mo
(\025)sh
264.699 94.9297 mo
(\025)sh
237.359 102.613 mo
(\025)sh
241.566 102.613 mo
(!)sh
243.668 102.613 mo
(\025)sh
247.875 102.613 mo
(\025)sh
252.082 102.613 mo
(\025)sh
256.285 102.613 mo
(\025)sh
260.492 102.613 mo
(\025)sh
264.699 102.613 mo
(\025)sh
237.359 110.293 mo
(\025)sh
241.566 110.293 mo
(!)sh
243.668 110.293 mo
(\025)sh
247.875 110.293 mo
(#)sh
252.082 110.293 mo
($)sh
256.285 110.293 mo
(\025)sh
260.492 110.293 mo
(\025)sh
264.699 110.293 mo
(\025)sh
237.359 117.852 mo
(\025)sh
241.566 117.852 mo
(!)sh
243.668 117.852 mo
(\025)sh
247.875 117.852 mo
(#)sh
252.082 117.852 mo
($)sh
256.285 117.852 mo
(\025)sh
260.492 117.852 mo
(\025)sh
264.699 117.852 mo
(\025)sh
237.359 125.531 mo
(\025)sh
241.566 125.531 mo
(!)sh
243.668 125.531 mo
(\025)sh
247.875 125.531 mo
($)sh
252.082 125.531 mo
(")sh
256.285 125.531 mo
(\025)sh
260.492 125.531 mo
(\025)sh
264.699 125.531 mo
(\025)sh
237.359 133.211 mo
(\025)sh
241.566 133.211 mo
(!)sh
243.668 133.211 mo
(#)sh
247.875 133.211 mo
(\025)sh
252.082 133.211 mo
(")sh
256.285 133.211 mo
(\025)sh
260.492 133.211 mo
(\025)sh
264.699 133.211 mo
(\025)sh
237.359 140.891 mo
(\025)sh
241.566 140.891 mo
(!)sh
243.668 140.891 mo
(#)sh
247.875 140.891 mo
(%)sh
252.082 140.891 mo
(\025)sh
256.285 140.891 mo
(\025)sh
260.492 140.891 mo
(\025)sh
264.699 140.891 mo
(\025)sh
237.359 148.57 mo
(\025)sh
241.566 148.57 mo
(!)sh
243.668 148.57 mo
($)sh
247.875 148.57 mo
(\025)sh
252.082 148.57 mo
(")sh
256.285 148.57 mo
(\025)sh
260.492 148.57 mo
(\025)sh
264.699 148.57 mo
(\025)sh
237.359 156.25 mo
(\025)sh
241.566 156.25 mo
(!)sh
243.668 156.25 mo
($)sh
247.875 156.25 mo
(\025)sh
252.082 156.25 mo
( )sh
256.285 156.25 mo
(\025)sh
260.492 156.25 mo
(\025)sh
264.699 156.25 mo
(\025)sh
237.359 163.93 mo
(\025)sh
241.566 163.93 mo
(!)sh
243.668 163.93 mo
(&)sh
247.875 163.93 mo
(\025)sh
252.082 163.93 mo
(\025)sh
256.285 163.93 mo
(\025)sh
260.492 163.93 mo
(\025)sh
264.699 163.93 mo
(\025)sh
237.359 171.613 mo
(\025)sh
241.566 171.613 mo
(!)sh
243.668 171.613 mo
($)sh
247.875 171.613 mo
(")sh
252.082 171.613 mo
( )sh
256.285 171.613 mo
(\025)sh
260.492 171.613 mo
(\025)sh
264.699 171.613 mo
(\025)sh
237.359 179.293 mo
(\025)sh
241.566 179.293 mo
(!)sh
243.668 179.293 mo
(&)sh
247.875 179.293 mo
(\025)sh
252.082 179.293 mo
(")sh
256.285 179.293 mo
(\025)sh
260.492 179.293 mo
(\025)sh
264.699 179.293 mo
(\025)sh
300.719 20.6523 mo
(,)sh
305.766 20.6523 mo
(-)sh
311.227 20.6523 mo
(\037)sh
274.441 23.051 mo
342.84 23.051 li
@
342.84 13.211 mo
342.84 23.051 li
@
342.84 23.051 mo
342.84 193.934 li
@
true set_gvm
%ADOBeginSubsetFont: HIBBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBX+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g46 <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AF
B379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE
8F80AF5A83421F8F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBX+Arial /Encoding get
dup 46 /g46 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBX+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 209{/.notdef}rp]
NNOJBX+Arial nf
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
301.68 33.4922 mo
(%)sh
305.887 33.4922 mo
(&)sh
310.09 33.4922 mo
(!)sh
312.195 33.4922 mo
(%)sh
316.398 33.4922 mo
(')sh
320.605 33.4922 mo
(\()sh
324.813 33.4922 mo
(\025)sh
329.016 33.4922 mo
(&)sh
333.223 33.4922 mo
(")sh
301.68 41.1719 mo
(')sh
305.887 41.1719 mo
(#)sh
310.09 41.1719 mo
(!)sh
312.195 41.1719 mo
(%)sh
316.398 41.1719 mo
(#)sh
320.605 41.1719 mo
(')sh
324.813 41.1719 mo
(\()sh
329.016 41.1719 mo
(')sh
333.223 41.1719 mo
(&)sh
301.68 48.8516 mo
( )sh
305.887 48.8516 mo
( )sh
310.09 48.8516 mo
(!)sh
312.195 48.8516 mo
(')sh
316.398 48.8516 mo
(\()sh
320.605 48.8516 mo
(&)sh
324.813 48.8516 mo
(*)sh
329.016 48.8516 mo
(#)sh
333.223 48.8516 mo
(\()sh
301.68 56.5313 mo
(&)sh
305.887 56.5313 mo
(*)sh
310.09 56.5313 mo
(!)sh
312.195 56.5313 mo
(')sh
316.398 56.5313 mo
(\()sh
320.605 56.5313 mo
(')sh
324.813 56.5313 mo
(*)sh
329.016 56.5313 mo
(')sh
333.223 56.5313 mo
(')sh
301.68 64.2109 mo
(&)sh
305.887 64.2109 mo
(')sh
310.09 64.2109 mo
(!)sh
312.195 64.2109 mo
(\()sh
316.398 64.2109 mo
(\025)sh
320.605 64.2109 mo
($)sh
324.813 64.2109 mo
($)sh
329.016 64.2109 mo
(\025)sh
333.223 64.2109 mo
(%)sh
301.68 71.8906 mo
(&)sh
305.887 71.8906 mo
($)sh
310.09 71.8906 mo
(!)sh
312.195 71.8906 mo
(')sh
316.398 71.8906 mo
(&)sh
320.605 71.8906 mo
(&)sh
324.813 71.8906 mo
(\025)sh
329.016 71.8906 mo
(\025)sh
333.223 71.8906 mo
(')sh
301.68 79.5703 mo
($)sh
305.887 79.5703 mo
(*)sh
310.09 79.5703 mo
(!)sh
312.195 79.5703 mo
(")sh
316.398 79.5703 mo
(\()sh
320.605 79.5703 mo
(#)sh
324.813 79.5703 mo
(\025)sh
329.016 79.5703 mo
(&)sh
333.223 79.5703 mo
(')sh
301.68 87.25 mo
($)sh
305.887 87.25 mo
(\()sh
310.09 87.25 mo
(!)sh
312.195 87.25 mo
(')sh
316.398 87.25 mo
( )sh
320.605 87.25 mo
(')sh
324.813 87.25 mo
(")sh
329.016 87.25 mo
(')sh
333.223 87.25 mo
(\()sh
301.68 94.9297 mo
($)sh
305.887 94.9297 mo
(')sh
310.09 94.9297 mo
(!)sh
312.195 94.9297 mo
( )sh
316.398 94.9297 mo
(*)sh
320.605 94.9297 mo
(&)sh
324.813 94.9297 mo
(\025)sh
329.016 94.9297 mo
(")sh
333.223 94.9297 mo
(%)sh
301.68 102.613 mo
($)sh
305.887 102.613 mo
(&)sh
310.09 102.613 mo
(!)sh
312.195 102.613 mo
(%)sh
316.398 102.613 mo
(%)sh
320.605 102.613 mo
( )sh
324.813 102.613 mo
(")sh
329.016 102.613 mo
(&)sh
333.223 102.613 mo
(#)sh
301.68 110.293 mo
($)sh
305.887 110.293 mo
($)sh
310.09 110.293 mo
(!)sh
312.195 110.293 mo
(\025)sh
316.398 110.293 mo
(')sh
320.605 110.293 mo
(")sh
324.813 110.293 mo
(")sh
329.016 110.293 mo
(%)sh
333.223 110.293 mo
(*)sh
301.68 117.852 mo
($)sh
305.887 117.852 mo
(\025)sh
310.09 117.852 mo
(!)sh
312.195 117.852 mo
(')sh
316.398 117.852 mo
($)sh
320.605 117.852 mo
( )sh
324.813 117.852 mo
(\025)sh
329.016 117.852 mo
(\025)sh
333.223 117.852 mo
(%)sh
301.68 125.531 mo
(#)sh
305.887 125.531 mo
(*)sh
310.09 125.531 mo
(!)sh
312.195 125.531 mo
(#)sh
316.398 125.531 mo
($)sh
320.605 125.531 mo
(&)sh
324.813 125.531 mo
(')sh
329.016 125.531 mo
(\()sh
333.223 125.531 mo
(*)sh
301.68 133.211 mo
(#)sh
305.887 133.211 mo
(\()sh
310.09 133.211 mo
(!)sh
312.195 133.211 mo
(")sh
316.398 133.211 mo
(\()sh
320.605 133.211 mo
(")sh
324.813 133.211 mo
( )sh
329.016 133.211 mo
(&)sh
333.223 133.211 mo
( )sh
301.68 140.891 mo
(#)sh
305.887 140.891 mo
(%)sh
310.09 140.891 mo
(!)sh
312.195 140.891 mo
(\()sh
316.398 140.891 mo
(&)sh
320.605 140.891 mo
(#)sh
324.813 140.891 mo
(#)sh
329.016 140.891 mo
(*)sh
333.223 140.891 mo
(*)sh
301.68 148.57 mo
(#)sh
305.887 148.57 mo
(')sh
310.09 148.57 mo
(!)sh
312.195 148.57 mo
(%)sh
316.398 148.57 mo
(\025)sh
320.605 148.57 mo
(&)sh
324.813 148.57 mo
(')sh
329.016 148.57 mo
(*)sh
333.223 148.57 mo
( )sh
301.68 156.25 mo
(#)sh
305.887 156.25 mo
( )sh
310.09 156.25 mo
(!)sh
312.195 156.25 mo
(')sh
316.398 156.25 mo
(")sh
320.605 156.25 mo
($)sh
324.813 156.25 mo
(\()sh
329.016 156.25 mo
(*)sh
333.223 156.25 mo
(%)sh
301.68 163.93 mo
(#)sh
305.887 163.93 mo
(&)sh
310.09 163.93 mo
(!)sh
312.195 163.93 mo
(')sh
316.398 163.93 mo
( )sh
320.605 163.93 mo
(%)sh
324.813 163.93 mo
($)sh
329.016 163.93 mo
(#)sh
333.223 163.93 mo
(")sh
301.68 171.613 mo
(#)sh
305.887 171.613 mo
($)sh
310.09 171.613 mo
(!)sh
312.195 171.613 mo
(%)sh
316.398 171.613 mo
(%)sh
320.605 171.613 mo
(\025)sh
324.813 171.613 mo
( )sh
329.016 171.613 mo
(\025)sh
333.223 171.613 mo
(#)sh
301.68 179.293 mo
(#)sh
305.887 179.293 mo
(#)sh
310.09 179.293 mo
(!)sh
312.195 179.293 mo
(*)sh
316.398 179.293 mo
(#)sh
320.605 179.293 mo
( )sh
324.813 179.293 mo
( )sh
329.016 179.293 mo
(%)sh
333.223 179.293 mo
(*)sh
362.879 20.6523 mo
(.)sh
369.18 20.6523 mo
(\004)sh
373.387 20.6523 mo
(\012)sh
377.594 20.6523 mo
(\021)sh
381.797 20.6523 mo
(\))sh
386.844 20.6523 mo
(\021)sh
342.84 23.051 mo
411.238 23.051 li
@
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
363.242 33.4922 mo
(\022)sh
365.758 33.4922 mo
(#)sh
369.965 33.4922 mo
(#)sh
374.172 33.4922 mo
(\()sh
378.375 33.4922 mo
(!)sh
380.48 33.4922 mo
(\()sh
384.684 33.4922 mo
(%)sh
388.891 33.4922 mo
(\()sh
393.098 33.4922 mo
(%)sh
397.301 33.4922 mo
(\()sh
401.508 33.4922 mo
(#)sh
.36 lw
1 lj
-238.32 -37.789 mo
-238.32 -200.27 li
.284153 .225864 .228733 3.0518e-5 cmyk
@
-219.602 -37.789 mo
-219.602 -200.27 li
@
-200.762 -37.789 mo
-200.762 -200.27 li
@
-181.922 -37.789 mo
-181.922 -200.27 li
@
-163.199 -37.789 mo
-163.199 -200.27 li
@
-144.359 -37.789 mo
-144.359 -200.27 li
@
-125.641 -37.789 mo
-125.641 -200.27 li
@
-106.801 -37.789 mo
-106.801 -200.27 li
@
-88.078 -37.789 mo
-88.078 -200.27 li
@
-69.238 -37.789 mo
-69.238 -200.27 li
@
-257.16 -32.387 mo
-257.16 -200.27 li
.750179 .679652 .670191 .901488 cmyk
@
-238.32 -37.789 mo
-238.32 -32.387 li
@
-219.602 -37.789 mo
-219.602 -32.387 li
@
-200.762 -37.789 mo
-200.762 -32.387 li
@
-181.922 -37.789 mo
-181.922 -32.387 li
@
-163.199 -37.789 mo
-163.199 -32.387 li
@
-144.359 -37.789 mo
-144.359 -32.387 li
@
-125.641 -37.789 mo
-125.641 -32.387 li
@
-106.801 -37.789 mo
-106.801 -32.387 li
@
-88.078 -37.789 mo
-88.078 -32.387 li
@
-69.238 -37.789 mo
-69.238 -32.387 li
@
-50.52 -32.387 mo
-50.52 -200.27 li
@
true set_gvm
%ADOBeginSubsetFont: GFNBAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE
1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g2 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD
9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63
F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B
50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC493
72EF96DD9EB13A793559C13CFDFE477> |-
/g3 <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D
1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E
2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7A
DC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0
C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/g4 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC
1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A104
25162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D
888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60
C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B
546505C954A88> |-
/g5 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE5
48E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C1
0DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698F
DFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A
0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0
A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6
A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
/g6 <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE02
3151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/g7 <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F1
2980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA3
0490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF19362
8C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA
7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B
2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D9
1DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJBZ+Arial /GFNBAA+Arial findfont ct_VMDictPut
/NNOJBZ+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
248{/.notdef}rp]
NNOJBZ+Arial nf
NNOJBZ+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
-241.68 -26.1484 mo
(\001)sh
-238.273 -26.1484 mo
(\002)sh
-222.961 -26.1484 mo
(\003)sh
-219.559 -26.1484 mo
(\004)sh
-204.125 -26.1484 mo
(\003)sh
-200.719 -26.1484 mo
(\002)sh
-185.285 -26.1484 mo
(\005)sh
-181.879 -26.1484 mo
(\004)sh
-166.566 -26.1484 mo
(\005)sh
-163.164 -26.1484 mo
(\002)sh
-147.848 -26.1484 mo
(\006)sh
-144.445 -26.1484 mo
(\004)sh
-129.012 -26.1484 mo
(\006)sh
-125.605 -26.1484 mo
(\002)sh
-110.293 -26.1484 mo
(\002)sh
-106.887 -26.1484 mo
(\004)sh
-91.4531 -26.1484 mo
(\002)sh
-88.0508 -26.1484 mo
(\002)sh
-72.6172 -26.1484 mo
(\007)sh
-69.2109 -26.1484 mo
(\004)sh
-260.52 -26.1484 mo
(\001)sh
-257.113 -26.1484 mo
(\004)sh
-53.8789 -26.1484 mo
(\007)sh
-50.4727 -26.1484 mo
(\002)sh
-257.16 -45.949 mo
-50.52 -45.949 li
.284153 .225864 .228733 3.0518e-5 cmyk
@
-257.16 -50.75 mo
-50.52 -50.75 li
@
-257.16 -54.109 mo
-50.52 -54.109 li
@
-257.16 -56.75 mo
-50.52 -56.75 li
@
-257.16 -58.91 mo
-50.52 -58.91 li
@
-257.16 -60.707 mo
-50.52 -60.707 li
@
-257.16 -62.27 mo
-50.52 -62.27 li
@
-257.16 -63.707 mo
-50.52 -63.707 li
@
-257.16 -64.91 mo
-50.52 -64.91 li
@
-257.16 -73.066 mo
-50.52 -73.066 li
@
-257.16 -77.867 mo
-50.52 -77.867 li
@
-257.16 -81.227 mo
-50.52 -81.227 li
@
-257.16 -83.867 mo
-50.52 -83.867 li
@
-257.16 -86.027 mo
-50.52 -86.027 li
@
-257.16 -87.828 mo
-50.52 -87.828 li
@
-257.16 -89.387 mo
-50.52 -89.387 li
@
-257.16 -90.707 mo
-50.52 -90.707 li
@
-257.16 -92.027 mo
-50.52 -92.027 li
@
-257.16 -100.188 mo
-50.52 -100.188 li
@
-257.16 -104.867 mo
-50.52 -104.867 li
@
-257.16 -108.348 mo
-50.52 -108.348 li
@
-257.16 -110.867 mo
-50.52 -110.867 li
@
-257.16 -113.027 mo
-50.52 -113.027 li
@
-257.16 -114.828 mo
-50.52 -114.828 li
@
-257.16 -116.387 mo
-50.52 -116.387 li
@
-257.16 -117.828 mo
-50.52 -117.828 li
@
-257.16 -119.027 mo
-50.52 -119.027 li
@
-257.16 -127.188 mo
-50.52 -127.188 li
@
-257.16 -131.988 mo
-50.52 -131.988 li
@
-257.16 -135.348 mo
-50.52 -135.348 li
@
-257.16 -137.988 mo
-50.52 -137.988 li
@
-257.16 -140.148 mo
-50.52 -140.148 li
@
-257.16 -141.949 mo
-50.52 -141.949 li
@
-257.16 -143.508 mo
-50.52 -143.508 li
@
-257.16 -144.828 mo
-50.52 -144.828 li
@
-257.16 -146.148 mo
-50.52 -146.148 li
@
-257.16 -154.309 mo
-50.52 -154.309 li
@
-257.16 -158.988 mo
-50.52 -158.988 li
@
-257.16 -162.469 mo
-50.52 -162.469 li
@
-257.16 -165.109 mo
-50.52 -165.109 li
@
-257.16 -167.148 mo
-50.52 -167.148 li
@
-257.16 -168.949 mo
-50.52 -168.949 li
@
-257.16 -170.508 mo
-50.52 -170.508 li
@
-257.16 -171.949 mo
-50.52 -171.949 li
@
-257.16 -173.148 mo
-50.52 -173.148 li
@
-257.16 -181.309 mo
-50.52 -181.309 li
@
-257.16 -186.109 mo
-50.52 -186.109 li
@
-257.16 -189.469 mo
-50.52 -189.469 li
@
-257.16 -192.109 mo
-50.52 -192.109 li
@
-257.16 -194.27 mo
-50.52 -194.27 li
@
-257.16 -196.066 mo
-50.52 -196.066 li
@
-257.16 -197.629 mo
-50.52 -197.629 li
@
-257.16 -199.066 mo
-50.52 -199.066 li
@
-262.559 -37.789 mo
-50.52 -37.789 li
.750179 .679652 .670191 .901488 cmyk
@
-262.559 -64.91 mo
-257.16 -64.91 li
@
-262.559 -92.027 mo
-257.16 -92.027 li
@
-262.559 -119.027 mo
-257.16 -119.027 li
@
-262.559 -146.148 mo
-257.16 -146.148 li
@
-262.559 -173.148 mo
-257.16 -173.148 li
@
-262.559 -200.27 mo
-50.52 -200.27 li
@
true set_gvm
%ADOBeginSubsetFont: GFNBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJBZ+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g8 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B
66E9361DDE78FC667AB91EF9824> |-
/g9 <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJBZ+Arial /Encoding get
dup 8 /g8 put
dup 9 /g9 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJBZ+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 246{/.notdef}rp]
NNOJBZ+Arial nf
NNOJBZ+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
-276 -63.1094 mo
(\001)sh
-272.594 -63.1094 mo
(\010)sh
-268.512 -63.1094 mo
(\011)sh
-266.473 -63.1094 mo
(\002)sh
-276 -90.2265 mo
(\001)sh
-272.594 -90.2265 mo
(\010)sh
-268.512 -90.2265 mo
(\011)sh
-266.473 -90.2265 mo
(\006)sh
-276 -117.348 mo
(\001)sh
-272.594 -117.348 mo
(\010)sh
-268.512 -117.348 mo
(\011)sh
-266.473 -117.348 mo
(\005)sh
-276 -144.348 mo
(\001)sh
-272.594 -144.348 mo
(\010)sh
-268.512 -144.348 mo
(\011)sh
-266.473 -144.348 mo
(\003)sh
-276 -171.469 mo
(\001)sh
-272.594 -171.469 mo
(\010)sh
-268.512 -171.469 mo
(\011)sh
-266.473 -171.469 mo
(\001)sh
-276 -36.1094 mo
(\001)sh
-272.594 -36.1094 mo
(\010)sh
-268.512 -36.1094 mo
(\011)sh
-266.473 -36.1094 mo
(\007)sh
-266.641 -198.59 mo
(\001)sh
-191.16 7921.33 mo
-198.84 -135.348 li
3.0518e-5 .990631 1 .000396735 cmyk
@
-198.84 -135.348 mo
-205.801 7921.33 li
@
-205.801 7921.33 mo
-211.801 -148.188 li
@
-211.801 -148.188 mo
-217.559 -148.188 li
@
-217.559 -148.188 mo
-222.84 -158.148 li
@
-222.84 -158.148 mo
-227.52 -174.109 li
@
-227.52 -174.109 mo
-231.84 -178.668 li
@
-231.84 -178.668 mo
-236.039 -181.789 li
@
-236.039 -181.789 mo
-239.879 -181.547 li
@
-239.879 -181.547 mo
-243.84 -186.109 li
@
-243.84 -186.109 mo
-247.078 -185.508 li
@
-247.078 -185.508 mo
-249.961 -186.469 li
@
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
-162.238 -12.1094 mo
(,)sh
-157.195 -12.1094 mo
(-)sh
-151.734 -12.1094 mo
(\037)sh
NNOJBX+Arial*1 [0 -7.56347 -7.55924 0 0 0 ]msf
-284.52 -110.988 mo
(+)sh
-284.52 -116.027 mo
(\030)sh
-284.52 -121.07 mo
(\037)sh
.750179 .679652 .670191 .901488 cmyk
NNOJBX+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
-177.48 -208.789 mo
(+)sh
-172.434 -208.789 mo
(\030)sh
-167.391 -208.789 mo
(\037)sh
-161.926 -208.789 mo
(\006)sh
-159.824 -208.789 mo
(\011)sh
-156.043 -208.789 mo
(\007)sh
-152.262 -208.789 mo
(\006)sh
-150.156 -208.789 mo
(,)sh
-145.113 -208.789 mo
(-)sh
-139.652 -208.789 mo
(\037)sh
-307.32 -269.988 mo
-307.32 -256.429 li
-289.32 -256.429 li
-289.32 -269.988 li
-307.32 -269.988 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
true set_gvm
%ADOBeginSubsetFont: HJCBAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HJCBAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B
66E9361DDE78FC667AB91EF9824> |-
/g2 <1C60D8A8C9B7EF322408646A760FED70F2D8214740020E61993A1FFE895
74C96FDDD947618591671EEE89936F7D0F90E6B11CE96BDCBF7B2C20479CB610
D934D0AFBB0721CA3EA49A2D6AB8F9A4A9273E60BD1ACDAB1F7447DBAAB4DD12
4EC36ECC57CEC13712AB1CAC8625150F69DBA3C4F574D88196863F5C61CC51A6
1AE68D44A27F86FFD139CDEF75DF80AB81E> |-
/g3 <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285
C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDA
DE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A52
03A8015DD09B7CE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJCA+Arial /HJCBAA+Arial findfont ct_VMDictPut
/NNOJCA+Arial*1 
[/.notdef /g1 /g2 /g3 252{/.notdef}rp]
NNOJCA+Arial nf
NNOJCA+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-307.32 -259.668 mo
(\001)sh
-301.234 -259.668 mo
(\002)sh
-296.16 -259.668 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: HJCBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCA+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4 <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB
379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8
F80AF5A83421F8F> |-
/g5 <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B
0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8
B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EE
A03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C372
95284C077711C162623860AACA404F650F8D516970257> |-
/g6 <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7
DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883C
A6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBB
A48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405F
D710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5C
EC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D5
3463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B
2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D17
7B5D88A> |-
/g7 <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC11
7C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C4
7CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0E
FBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-
/g8 <1C60D8A8C9B854D00D> |-
/g9 <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F74
68DA1474C45> |-
/g10 <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |-
/g11 <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D30
2C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC2
35F833AFCC30669C812FBF097879E1> |-
/g12 <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE
4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52A
BD0227B6CDD854C568D5A6F3817645C5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCA+Arial /Encoding get
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCA+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 243{/.notdef}rp]
NNOJCA+Arial nf
NNOJCA+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-287.398 -260.629 mo
(\004)sh
-279.797 -260.629 mo
(\005)sh
-274.727 -260.629 mo
(\006)sh
-269.652 -260.629 mo
(\003)sh
-264.578 -260.629 mo
(\007)sh
-258.492 -260.629 mo
(\003)sh
-253.418 -260.629 mo
(\010)sh
-250.879 -260.629 mo
(\011)sh
-245.551 -260.629 mo
(\010)sh
-243.016 -260.629 mo
(\012)sh
-235.414 -260.629 mo
(\005)sh
-230.34 -260.629 mo
(\006)sh
-225.266 -260.629 mo
(\003)sh
-220.191 -260.629 mo
(\013)sh
-217.152 -260.629 mo
(\007)sh
-211.066 -260.629 mo
(\003)sh
-205.992 -260.629 mo
(\014)sh
68.398 -253.91 mo
68.398 -240.226 li
86.52 -240.226 li
86.52 -253.91 li
68.398 -253.91 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJCA+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
68.4023 -243.59 mo
(\001)sh
74.4883 -243.59 mo
(\002)sh
79.5586 -243.59 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: HJCBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCA+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB2
9ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D458220
8BD16D82> |-
/g14 <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D916
2B37724F74F272B140D258652D102C2EAC46833C73F9> |-
/g15 <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857
894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619
ADD420F549AB7C795751D32E8EE6> |-
/g16 <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817
A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D
559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0
C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667
DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FB
D88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF
575C72F67F4BEBB98F8AFA57505EC9> |-
/g17 <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g18 <1C60D8A8C9B7EF3224BB0E94C1F3EA8D5F87D58A9CCE> |-
/g19 <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F
1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886
D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5
C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AA
B4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F
1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174
E0C619907BEEF9FED49CD2B96F29B7B01884> |-
/g20 <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4
F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F
2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA4260
9FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D29
5257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3
F0B222> |-
/g21 <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |-
/g22 <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |-
/g23 <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B9
6470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F43633
0DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F5
56CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672
C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/g24 <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |-
/g25 <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/g26 <1C60D8A8C9B8096E37F88C8CE86595C6DB8D7364ABD11096FDCAF5A3E9
D76C85AB63D3F346E42ED9D2AEF8A5EA4DF58A64FEEC> |-
/g27 <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000
A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-
/g28 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g29 <1C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA
37FE8A> |-
/g30 <1C60D8A8C9B854D0F461D1A979903F917C33CF6EDB0A437B4DDC715015
0B60E1> |-
/g31 <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E16
29C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDA
FEAD7BE7BD65F1051699CCF4B0> |-
/g32 <1C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C11
15332A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCA+Arial /Encoding get
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
dup 31 /g31 put
dup 32 /g32 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCA+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 223{/.notdef}rp]
NNOJCA+Arial nf
NNOJCA+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
88.3203 -244.43 mo
(\015)sh
94.4063 -244.43 mo
(\016)sh
98.9688 -244.43 mo
(\005)sh
104.043 -244.43 mo
(\017)sh
107.082 -244.43 mo
(\006)sh
112.156 -244.43 mo
(\020)sh
117.23 -244.43 mo
(\005)sh
122.301 -244.43 mo
(\021)sh
127.375 -244.43 mo
(\022)sh
132.449 -244.43 mo
(\023)sh
138.535 -244.43 mo
(\001)sh
144.621 -244.43 mo
(\024)sh
151.211 -244.43 mo
(\010)sh
153.75 -244.43 mo
(\011)sh
159.078 -244.43 mo
(\010)sh
161.613 -244.43 mo
(\025)sh
163.641 -244.43 mo
(\003)sh
168.715 -244.43 mo
(\026)sh
171.25 -244.43 mo
(\005)sh
176.324 -244.43 mo
(\017)sh
179.363 -244.43 mo
(\027)sh
184.438 -244.43 mo
(\030)sh
189.508 -244.43 mo
(\031)sh
191.535 -244.43 mo
(\006)sh
196.609 -244.43 mo
(\026)sh
199.145 -244.43 mo
(\005)sh
204.219 -244.43 mo
(\013)sh
207.258 -244.43 mo
(\032)sh
210.496 -244.43 mo
(\031)sh
212.523 -244.43 mo
(\025)sh
214.551 -244.43 mo
(\003)sh
219.621 -244.43 mo
(\005)sh
224.695 -244.43 mo
(\006)sh
229.77 -244.43 mo
(\017)sh
232.809 -244.43 mo
(\032)sh
236.047 -244.43 mo
(\033)sh
238.586 -244.43 mo
(\023)sh
244.672 -244.43 mo
(\001)sh
250.758 -244.43 mo
(\024)sh
257.348 -244.43 mo
(\033)sh
259.883 -244.43 mo
(\034)sh
264.957 -244.43 mo
(\033)sh
267.492 -244.43 mo
(\035)sh
270.031 -244.43 mo
(\012)sh
277.633 -244.43 mo
(\025)sh
279.656 -244.43 mo
(\003)sh
284.73 -244.43 mo
(\013)sh
287.77 -244.43 mo
(\024)sh
294.359 -244.43 mo
(\014)sh
297.398 -244.43 mo
(\036)sh
299.934 -244.43 mo
(\036)sh
302.469 -244.43 mo
(\034)sh
307.543 -244.43 mo
(\036)sh
310.082 -244.43 mo
(\036)sh
312.617 -244.43 mo
(\012)sh
320.219 -244.43 mo
(\006)sh
325.293 -244.43 mo
(\037)sh
329.855 -244.43 mo
(\013)sh
332.895 -244.43 mo
(\024)sh
339.48 -244.43 mo
(\014)sh
342.52 -244.43 mo
( )sh
345.059 -244.43 mo
(\014)sh
129.602 -40.188 mo
129.602 -200.387 li
.284153 .225864 .228733 3.0518e-5 cmyk
@
149.039 -40.188 mo
149.039 -200.387 li
@
168.48 -40.188 mo
168.48 -200.387 li
@
188.039 -40.188 mo
188.039 -200.387 li
@
207.48 -40.188 mo
207.48 -200.387 li
@
226.922 -40.188 mo
226.922 -200.387 li
@
246.48 -40.188 mo
246.48 -200.387 li
@
265.922 -40.188 mo
265.922 -200.387 li
@
285.359 -40.188 mo
285.359 -200.387 li
@
304.801 -40.188 mo
304.801 -200.387 li
@
110.16 -34.789 mo
110.16 -200.387 li
.750179 .679652 .670191 .901488 cmyk
@
129.602 -40.188 mo
129.602 -34.789 li
@
149.039 -40.188 mo
149.039 -34.789 li
@
168.48 -40.188 mo
168.48 -34.789 li
@
188.039 -40.188 mo
188.039 -34.789 li
@
207.48 -40.188 mo
207.48 -34.789 li
@
226.922 -40.188 mo
226.922 -34.789 li
@
246.48 -40.188 mo
246.48 -34.789 li
@
265.922 -40.188 mo
265.922 -34.789 li
@
285.359 -40.188 mo
285.359 -34.789 li
@
304.801 -40.188 mo
304.801 -34.789 li
@
324.359 -34.789 mo
324.359 -200.387 li
@
true set_gvm
%ADOBeginSubsetFont: UGXAAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /UGXAAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE
1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g2 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD
9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63
F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B
50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC493
72EF96DD9EB13A793559C13CFDFE477> |-
/g3 <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D
1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E
2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7A
DC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0
C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/g4 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC
1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A104
25162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D
888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60
C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B
546505C954A88> |-
/g5 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE5
48E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C1
0DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698F
DFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A
0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0
A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6
A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
/g6 <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE02
3151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/g7 <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F1
2980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA3
0490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF19362
8C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA
7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B
2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D9
1DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJCB+Arial /UGXAAA+Arial findfont ct_VMDictPut
/NNOJCB+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
248{/.notdef}rp]
NNOJCB+Arial nf
NNOJCB+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
126.242 -28.5469 mo
(\001)sh
129.645 -28.5469 mo
(\002)sh
145.68 -28.5469 mo
(\003)sh
149.082 -28.5469 mo
(\004)sh
165.117 -28.5469 mo
(\003)sh
168.52 -28.5469 mo
(\002)sh
184.676 -28.5469 mo
(\005)sh
188.078 -28.5469 mo
(\004)sh
204.113 -28.5469 mo
(\005)sh
207.516 -28.5469 mo
(\002)sh
223.551 -28.5469 mo
(\006)sh
226.957 -28.5469 mo
(\004)sh
243.109 -28.5469 mo
(\006)sh
246.512 -28.5469 mo
(\002)sh
262.547 -28.5469 mo
(\002)sh
265.953 -28.5469 mo
(\004)sh
281.984 -28.5469 mo
(\002)sh
285.391 -28.5469 mo
(\002)sh
301.422 -28.5469 mo
(\007)sh
304.828 -28.5469 mo
(\004)sh
106.801 -28.5469 mo
(\001)sh
110.203 -28.5469 mo
(\004)sh
321 -28.5469 mo
(\007)sh
324.406 -28.5469 mo
(\002)sh
110.16 -48.227 mo
324.359 -48.227 li
.284153 .225864 .228733 3.0518e-5 cmyk
@
110.16 -52.91 mo
324.359 -52.91 li
@
110.16 -56.27 mo
324.359 -56.27 li
@
110.16 -58.91 mo
324.359 -58.91 li
@
110.16 -61.066 mo
324.359 -61.066 li
@
110.16 -62.867 mo
324.359 -62.867 li
@
110.16 -64.309 mo
324.359 -64.309 li
@
110.16 -65.75 mo
324.359 -65.75 li
@
110.16 -66.949 mo
324.359 -66.949 li
@
110.16 -74.988 mo
324.359 -74.988 li
@
110.16 -79.668 mo
324.359 -79.668 li
@
110.16 -83.027 mo
324.359 -83.027 li
@
110.16 -85.668 mo
324.359 -85.668 li
@
110.16 -87.707 mo
324.359 -87.707 li
@
110.16 -89.508 mo
324.359 -89.508 li
@
110.16 -91.066 mo
324.359 -91.066 li
@
110.16 -92.387 mo
324.359 -92.387 li
@
110.16 -93.59 mo
324.359 -93.59 li
@
110.16 -101.629 mo
324.359 -101.629 li
@
110.16 -106.309 mo
324.359 -106.309 li
@
110.16 -109.668 mo
324.359 -109.668 li
@
110.16 -112.309 mo
324.359 -112.309 li
@
110.16 -114.348 mo
324.359 -114.348 li
@
110.16 -116.148 mo
324.359 -116.148 li
@
110.16 -117.707 mo
324.359 -117.707 li
@
110.16 -119.148 mo
324.359 -119.148 li
@
110.16 -120.348 mo
324.359 -120.348 li
@
110.16 -128.387 mo
324.359 -128.387 li
@
110.16 -133.066 mo
324.359 -133.066 li
@
110.16 -136.43 mo
324.359 -136.43 li
@
110.16 -138.949 mo
324.359 -138.949 li
@
110.16 -141.109 mo
324.359 -141.109 li
@
110.16 -142.91 mo
324.359 -142.91 li
@
110.16 -144.469 mo
324.359 -144.469 li
@
110.16 -145.789 mo
324.359 -145.789 li
@
110.16 -147.109 mo
324.359 -147.109 li
@
110.16 -155.027 mo
324.359 -155.027 li
@
110.16 -159.828 mo
324.359 -159.828 li
@
110.16 -163.066 mo
324.359 -163.066 li
@
110.16 -165.707 mo
324.359 -165.707 li
@
110.16 -167.75 mo
324.359 -167.75 li
@
110.16 -169.547 mo
324.359 -169.547 li
@
110.16 -171.109 mo
324.359 -171.109 li
@
110.16 -172.547 mo
324.359 -172.547 li
@
110.16 -173.75 mo
324.359 -173.75 li
@
110.16 -181.789 mo
324.359 -181.789 li
@
110.16 -186.469 mo
324.359 -186.469 li
@
110.16 -189.828 mo
324.359 -189.828 li
@
110.16 -192.348 mo
324.359 -192.348 li
@
110.16 -194.508 mo
324.359 -194.508 li
@
110.16 -196.309 mo
324.359 -196.309 li
@
110.16 -197.867 mo
324.359 -197.867 li
@
110.16 -199.188 mo
324.359 -199.188 li
@
104.641 -40.188 mo
324.359 -40.188 li
.750179 .679652 .670191 .901488 cmyk
@
104.641 -66.949 mo
110.16 -66.949 li
@
104.641 -93.59 mo
110.16 -93.59 li
@
104.641 -120.348 mo
110.16 -120.348 li
@
104.641 -147.109 mo
110.16 -147.109 li
@
104.641 -173.75 mo
110.16 -173.75 li
@
104.641 -200.387 mo
324.359 -200.387 li
@
true set_gvm
%ADOBeginSubsetFont: UGXAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCB+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g8 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B
66E9361DDE78FC667AB91EF9824> |-
/g9 <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCB+Arial /Encoding get
dup 8 /g8 put
dup 9 /g9 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCB+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 246{/.notdef}rp]
NNOJCB+Arial nf
NNOJCB+Arial*1 [6.12304 0 0 -6.1198 0 0 ]msf
91.3203 -65.2695 mo
(\001)sh
94.7266 -65.2695 mo
(\010)sh
98.8086 -65.2695 mo
(\011)sh
100.848 -65.2695 mo
(\002)sh
91.3203 -91.9102 mo
(\001)sh
94.7266 -91.9102 mo
(\010)sh
98.8086 -91.9102 mo
(\011)sh
100.848 -91.9102 mo
(\006)sh
91.3203 -118.547 mo
(\001)sh
94.7266 -118.547 mo
(\010)sh
98.8086 -118.547 mo
(\011)sh
100.848 -118.547 mo
(\005)sh
91.3203 -145.309 mo
(\001)sh
94.7266 -145.309 mo
(\010)sh
98.8086 -145.309 mo
(\011)sh
100.848 -145.309 mo
(\003)sh
91.3203 -171.949 mo
(\001)sh
94.7266 -171.949 mo
(\010)sh
98.8086 -171.949 mo
(\011)sh
100.848 -171.949 mo
(\001)sh
91.3203 -38.5078 mo
(\001)sh
94.7266 -38.5078 mo
(\010)sh
98.8086 -38.5078 mo
(\011)sh
100.848 -38.5078 mo
(\007)sh
100.559 -198.707 mo
(\001)sh
179.398 7809.62 mo
178.203 -93.586 li
3.0518e-5 .990631 1 .000396735 cmyk
@
178.199 -93.59 mo
178.078 -101.629 li
@
178.078 -101.629 mo
177.84 -106.309 li
@
177.84 -106.309 mo
177.602 -109.668 li
@
177.602 -109.668 mo
177.48 -112.309 li
@
177.48 -112.309 mo
177.238 -114.348 li
@
177.238 -114.348 mo
177.121 -116.148 li
@
177.121 -116.148 mo
176.879 -117.707 li
@
176.879 -117.707 mo
176.641 -119.148 li
@
176.641 -119.148 mo
176.52 -120.348 li
@
176.52 -120.348 mo
176.281 -121.43 li
@
176.281 -121.43 mo
176.039 -122.508 li
@
176.039 -122.508 mo
175.922 -123.348 li
@
175.922 -123.348 mo
175.441 -125.027 li
@
175.441 -125.027 mo
175.078 -126.469 li
@
175.078 -126.469 mo
174.719 -127.789 li
@
174.719 -127.789 mo
174.238 -128.867 li
@
174.238 -128.867 mo
173.879 -129.949 li
@
173.879 -129.949 mo
173.52 -130.91 li
@
173.52 -130.91 mo
173.039 -131.867 li
@
173.039 -131.867 mo
172.441 -133.066 li
@
172.441 -133.066 mo
171.84 -134.148 li
@
171.84 -134.148 mo
171.238 -135.227 li
@
171.238 -135.227 mo
170.641 -136.066 li
@
170.641 -136.066 mo
169.801 -135.227 li
@
169.801 -135.227 mo
169.199 -134.148 li
@
169.199 -134.148 mo
168.719 -133.066 li
@
168.719 -133.066 mo
168.121 -131.867 li
@
168.121 -131.867 mo
167.762 -130.91 li
@
167.762 -130.91 mo
167.398 -129.949 li
@
167.398 -129.949 mo
167.16 -128.867 li
@
167.16 -128.867 mo
166.68 -127.789 li
@
166.68 -127.789 mo
166.441 -126.469 li
@
166.441 -126.469 mo
165.961 -125.027 li
@
165.961 -125.027 mo
165.602 -123.348 li
@
165.602 -123.348 mo
165.48 -122.508 li
@
165.48 -122.508 mo
165.359 -121.43 li
@
165.359 -121.43 mo
165.121 -120.348 li
@
165.121 -120.348 mo
164.879 -119.148 li
@
164.879 -119.148 mo
164.762 -117.707 li
@
164.762 -117.707 mo
164.641 -116.148 li
@
164.641 -116.148 mo
164.398 -114.348 li
@
164.398 -114.348 mo
164.16 -112.309 li
@
164.16 -112.309 mo
164.039 -109.668 li
@
164.039 -109.668 mo
163.922 -106.309 li
@
163.922 -106.309 mo
163.68 -101.629 li
@
163.68 -101.629 mo
163.559 -93.59 li
@
163.563 -93.586 mo
163.32 7809.62 li
@
163.32 7809.62 mo
163.203 -106.309 li
@
163.199 -106.309 mo
162.961 -114.348 li
@
162.961 -114.348 mo
162.84 -119.148 li
@
162.84 -119.148 mo
162.719 -122.508 li
@
162.719 -122.508 mo
162.602 -125.027 li
@
162.602 -125.027 mo
162.48 -127.188 li
@
162.48 -127.188 mo
162.238 -128.867 li
@
162.238 -128.867 mo
162.121 -130.547 li
@
162.121 -130.547 mo
161.879 -131.867 li
@
161.879 -131.867 mo
161.762 -133.066 li
@
161.762 -133.066 mo
161.641 -134.148 li
@
161.641 -134.148 mo
161.398 -135.227 li
@
161.398 -135.227 mo
161.281 -136.066 li
@
161.281 -136.066 mo
161.039 -137.75 li
@
161.039 -137.75 mo
160.68 -139.188 li
@
160.68 -139.188 mo
160.32 -140.508 li
@
160.32 -140.508 mo
160.078 -141.707 li
@
160.078 -141.707 mo
159.719 -142.789 li
@
159.719 -142.789 mo
159.48 -143.629 li
@
159.48 -143.629 mo
159.121 -144.59 li
@
159.121 -144.59 mo
158.641 -145.789 li
@
158.641 -145.789 mo
158.16 -146.988 li
@
158.16 -146.988 mo
157.68 -147.949 li
@
157.68 -147.949 mo
157.199 -148.789 li
@
157.199 -148.789 mo
156.359 -149.148 li
@
156.359 -149.148 mo
155.281 -149.148 li
@
155.281 -149.148 mo
154.199 -149.148 li
@
154.199 -149.148 mo
153.359 -149.148 li
@
153.359 -149.148 mo
152.281 -149.148 li
@
152.281 -149.148 mo
151.32 -149.148 li
@
151.32 -149.148 mo
150.719 -150.227 li
@
150.719 -150.227 mo
150.238 -151.188 li
@
150.238 -151.188 mo
149.879 -152.148 li
@
149.879 -152.148 mo
149.398 -153.348 li
@
149.398 -153.348 mo
148.801 -154.309 li
@
148.801 -154.309 mo
148.32 -155.27 li
@
148.32 -155.27 mo
147.602 -156.469 li
@
147.602 -156.469 mo
146.879 -157.43 li
@
146.879 -157.43 mo
146.16 -158.27 li
@
146.16 -158.27 mo
145.559 -159.828 li
@
145.559 -159.828 mo
145.32 -161.148 li
@
145.32 -161.148 mo
145.078 -162.469 li
@
145.078 -162.469 mo
144.84 -163.668 li
@
144.84 -163.668 mo
144.602 -164.75 li
@
144.602 -164.75 mo
144.238 -165.707 li
@
144.238 -165.707 mo
144 -167.027 li
@
144 -167.027 mo
143.641 -168.109 li
@
143.641 -168.109 mo
143.16 -169.309 li
@
143.16 -169.309 mo
142.922 -170.27 li
@
142.922 -170.27 mo
142.559 -171.109 li
@
142.559 -171.109 mo
141.961 -172.188 li
@
141.961 -172.188 mo
141.48 -173.27 li
@
141.48 -173.27 mo
141 -174.227 li
@
141 -174.227 mo
140.398 -175.188 li
@
140.398 -175.188 mo
139.441 -176.148 li
@
139.441 -176.148 mo
138.602 -177.109 li
@
138.602 -177.109 mo
137.641 -178.066 li
@
137.641 -178.066 mo
136.68 -178.91 li
@
136.68 -178.91 mo
135.719 -179.75 li
@
135.719 -179.75 mo
134.762 -180.348 li
@
134.762 -180.348 mo
133.801 -180.949 li
@
133.801 -180.949 mo
132.84 -181.668 li
@
132.84 -181.668 mo
131.879 -182.148 li
@
131.879 -182.148 mo
130.801 -182.148 li
@
130.801 -182.148 mo
129.961 -182.148 li
@
129.961 -182.148 mo
129 -182.027 li
@
129 -182.027 mo
127.922 -182.027 li
@
127.922 -182.027 mo
127.32 -182.867 li
@
127.32 -182.867 mo
126.48 -183.949 li
@
126.48 -183.949 mo
125.52 -184.91 li
@
125.52 -184.91 mo
124.68 -185.75 li
@
124.68 -185.75 mo
123.719 -186.469 li
@
123.719 -186.469 mo
122.762 -186.227 li
@
122.762 -186.227 mo
121.801 -186.109 li
@
121.801 -186.109 mo
120.84 -185.867 li
@
120.84 -185.867 mo
119.879 -185.988 li
@
119.879 -185.988 mo
118.922 -186.348 li
@
118.922 -186.348 mo
117.961 -186.707 li
@
true set_gvm
%ADOBeginSubsetFont: MZQAAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MZQAAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29
ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208
BD16D82> |-
/g2 <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162
B37724F74F272B140D258652D102C2EAC46833C73F9> |-
/g3 <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B
0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8
B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EE
A03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C372
95284C077711C162623860AACA404F650F8D516970257> |-
/g4 <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE1128578
94FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619A
DD420F549AB7C795751D32E8EE6> |-
/g5 <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7
DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883C
A6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBB
A48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405F
D710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5C
EC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D5
3463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B
2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D17
7B5D88A> |-
/g6 <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A
065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D5
59B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C
247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667D
C9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD
88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF5
75C72F67F4BEBB98F8AFA57505EC9> |-
/g7 <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621
458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6D
D52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB61
2941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF1
3CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g8 <1C60D8A8C9B7EF3224BB0E94C1F3EA8D5F87D58A9CCE> |-
/g9 <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558
E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051B
E47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB3
91537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B1
3B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96
A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8F
E12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE4
50B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
/g10 <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106
F3AC927984C1E464F121F968> |-
/g11 <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4
F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F
2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA4260
9FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D29
5257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3
F0B222> |-
/g12 <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F
1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886
D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5
C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AA
B4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F
1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174
E0C619907BEEF9FED49CD2B96F29B7B01884> |-
/g13 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411
B66E9361DDE78FC667AB91EF9824> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJCC+Arial /MZQAAA+Arial findfont ct_VMDictPut
/NNOJCC+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 242{/.notdef}rp]
NNOJCC+Arial nf
NNOJCC+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
189.84 -14.5078 mo
(\001)sh
194.887 -14.5078 mo
(\002)sh
198.668 -14.5078 mo
(\003)sh
202.875 -14.5078 mo
(\004)sh
205.391 -14.5078 mo
(\005)sh
209.598 -14.5078 mo
(\006)sh
213.805 -14.5078 mo
(\003)sh
218.008 -14.5078 mo
(\007)sh
222.215 -14.5078 mo
(\010)sh
226.422 -14.5078 mo
(\011)sh
231.465 -14.5078 mo
(\012)sh
236.926 -14.5078 mo
(\013)sh
NNOJCC+Arial*1 [0 -7.56347 -7.55924 0 0 0 ]msf
82.6797 -93.2227 mo
(\001)sh
82.6797 -98.2695 mo
(\002)sh
82.6797 -102.109 mo
(\003)sh
82.6797 -106.309 mo
(\004)sh
82.6797 -108.828 mo
(\005)sh
82.6797 -113.027 mo
(\006)sh
82.6797 -117.227 mo
(\003)sh
82.6797 -121.422 mo
(\007)sh
82.6797 -125.617 mo
(\010)sh
82.6797 -129.82 mo
(\014)sh
82.6797 -134.863 mo
(\015)sh
82.6797 -139.902 mo
(\013)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: MZQAAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCC+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g14 <1C60D8A8C9B854D00D> |-
/g15 <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCC+Arial /Encoding get
dup 14 /g14 put
dup 15 /g15 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCC+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
240{/.notdef}rp]
NNOJCC+Arial nf
NNOJCC+Arial*1 [7.56347 0 0 -7.55924 0 0 ]msf
175.32 -208.91 mo
(\001)sh
180.367 -208.91 mo
(\002)sh
184.148 -208.91 mo
(\003)sh
188.355 -208.91 mo
(\004)sh
190.871 -208.91 mo
(\005)sh
195.078 -208.91 mo
(\006)sh
199.285 -208.91 mo
(\003)sh
203.488 -208.91 mo
(\007)sh
207.695 -208.91 mo
(\016)sh
209.797 -208.91 mo
(\014)sh
214.844 -208.91 mo
(\015)sh
219.891 -208.91 mo
(\013)sh
225.352 -208.91 mo
(\016)sh
227.453 -208.91 mo
(\002)sh
231.234 -208.91 mo
(\017)sh
235.016 -208.91 mo
(\016)sh
237.121 -208.91 mo
(\011)sh
242.164 -208.91 mo
(\012)sh
247.625 -208.91 mo
(\013)sh
68.039 -237.469 mo
68.039 -223.91 li
86.16 -223.91 li
86.16 -237.469 li
68.039 -237.469 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
true set_gvm
%ADOBeginSubsetFont: ELRBAA+Arial Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ELRBAA+Arial def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/g1 <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B
66E9361DDE78FC667AB91EF9824> |-
/g2 <1C60D8A8C9B7EF322408646A760FED70F2D8214740020E61993A1FFE895
74C96FDDD947618591671EEE89936F7D0F90E6B11CE96BDCBF7B2C20479CB610
D934D0AFBB0721CA3EA49A2D6AB8F9A4A9273E60BD1ACDAB1F7447DBAAB4DD12
4EC36ECC57CEC13712AB1CAC8625150F69DBA3C4F574D88196863F5C61CC51A6
1AE68D44A27F86FFD139CDEF75DF80AB81E> |-
/g3 <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285
C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDA
DE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A52
03A8015DD09B7CE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/NNOJCD+Arial /ELRBAA+Arial findfont ct_VMDictPut
/NNOJCD+Arial*1 
[/.notdef /g1 /g2 /g3 252{/.notdef}rp]
NNOJCD+Arial nf
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
68.0391 -227.148 mo
(\001)sh
74.125 -227.148 mo
(\002)sh
79.1992 -227.148 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: ELRBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCD+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4 <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29
ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208
BD16D82> |-
/g5 <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162
B37724F74F272B140D258652D102C2EAC46833C73F9> |-
/g6 <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B
0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8
B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EE
A03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C372
95284C077711C162623860AACA404F650F8D516970257> |-
/g7 <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE1128578
94FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619A
DD420F549AB7C795751D32E8EE6> |-
/g8 <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7
DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883C
A6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBB
A48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405F
D710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5C
EC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D5
3463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B
2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D17
7B5D88A> |-
/g9 <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A
065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D5
59B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C
247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667D
C9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD
88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF5
75C72F67F4BEBB98F8AFA57505EC9> |-
/g10 <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/g11 <1C60D8A8C9B7EF3224BB0E94C1F3EA8D5F87D58A9CCE> |-
/g12 <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-
/g13 <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106
F3AC927984C1E464F121F968> |-
/g14 <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4
F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F
2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA4260
9FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D29
5257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3
F0B222> |-
/g15 <1C60D8A8C9B854D00D> |-
/g16 <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F7
468DA1474C45> |-
/g17 <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |-
/g18 <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |-
/g19 <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B9
6470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F43633
0DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F5
56CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672
C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/g20 <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |-
/g21 <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/g22 <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D30
2C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC2
35F833AFCC30669C812FBF097879E1> |-
/g23 <1C60D8A8C9B8096E37F88C8CE86595C6DB8D7364ABD11096FDCAF5A3E9
D76C85AB63D3F346E42ED9D2AEF8A5EA4DF58A64FEEC> |-
/g24 <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000
A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-
/g25 <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/g26 <1C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA
37FE8A> |-
/g27 <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |-
/g28 <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE
4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52A
BD0227B6CDD854C568D5A6F3817645C5> |-
/g29 <1C60D8A8C9B854D0F461D1A979903F917C33CF6EDB0A437B4DDC715015
0B60E1> |-
/g30 <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E16
29C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDA
FEAD7BE7BD65F1051699CCF4B0> |-
/g31 <1C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C11
15332A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCD+Arial /Encoding get
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
dup 31 /g31 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCD+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
224{/.notdef}rp]
NNOJCD+Arial nf
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
87.9609 -228.109 mo
(\004)sh
94.0469 -228.109 mo
(\005)sh
98.6094 -228.109 mo
(\006)sh
103.684 -228.109 mo
(\007)sh
106.723 -228.109 mo
(\010)sh
111.797 -228.109 mo
(\011)sh
116.867 -228.109 mo
(\006)sh
121.941 -228.109 mo
(\012)sh
127.016 -228.109 mo
(\013)sh
132.09 -228.109 mo
(\014)sh
138.176 -228.109 mo
(\015)sh
144.766 -228.109 mo
(\016)sh
151.352 -228.109 mo
(\017)sh
153.891 -228.109 mo
(\020)sh
159.219 -228.109 mo
(\017)sh
161.758 -228.109 mo
(\021)sh
163.781 -228.109 mo
(\003)sh
168.855 -228.109 mo
(\022)sh
171.391 -228.109 mo
(\006)sh
176.465 -228.109 mo
(\007)sh
179.504 -228.109 mo
(\023)sh
184.578 -228.109 mo
(\024)sh
189.652 -228.109 mo
(\025)sh
191.676 -228.109 mo
(\010)sh
196.75 -228.109 mo
(\022)sh
199.289 -228.109 mo
(\006)sh
204.363 -228.109 mo
(\026)sh
207.398 -228.109 mo
(\027)sh
210.641 -228.109 mo
(\025)sh
212.664 -228.109 mo
(\021)sh
214.691 -228.109 mo
(\003)sh
219.766 -228.109 mo
(\006)sh
224.84 -228.109 mo
(\010)sh
229.91 -228.109 mo
(\007)sh
232.949 -228.109 mo
(\027)sh
236.191 -228.109 mo
(\030)sh
238.727 -228.109 mo
(\014)sh
244.813 -228.109 mo
(\015)sh
251.402 -228.109 mo
(\016)sh
257.988 -228.109 mo
(\030)sh
260.527 -228.109 mo
(\031)sh
265.602 -228.109 mo
(\030)sh
268.137 -228.109 mo
(\032)sh
270.676 -228.109 mo
(\033)sh
278.277 -228.109 mo
(\021)sh
280.301 -228.109 mo
(\003)sh
285.375 -228.109 mo
(\026)sh
288.414 -228.109 mo
(\016)sh
295.004 -228.109 mo
(\034)sh
298.039 -228.109 mo
(\035)sh
300.578 -228.109 mo
(\035)sh
303.113 -228.109 mo
(\031)sh
308.188 -228.109 mo
(\035)sh
310.727 -228.109 mo
(\035)sh
313.262 -228.109 mo
(\033)sh
320.863 -228.109 mo
(\010)sh
325.938 -228.109 mo
(\036)sh
330.5 -228.109 mo
(\026)sh
333.539 -228.109 mo
(\016)sh
340.125 -228.109 mo
(\034)sh
343.164 -228.109 mo
(\037)sh
345.703 -228.109 mo
(\034)sh
-188.762 -285.226 mo
-188.762 -271.547 li
-170.641 -271.547 li
-170.641 -285.226 li
-188.762 -285.226 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-188.758 -274.91 mo
(\001)sh
-182.672 -274.91 mo
(\002)sh
-177.598 -274.91 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: ELRBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCD+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g32 <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0
DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551
414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E5
25278C31C213B6FF1A25> |-
/g33 <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6F
EA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7
264371419D7043A117419C0FAF4C> |-
/g34 <1C60D8A8C9B6FF86FBC793890B55178BE49EEC5102DE4765B31919F6E9
8C7D78C667A3BB4B4E624B689DA4C385DFD1B29DE65FB8AA7AB2EF69B5E095C4
AF9914BE00567D04850B7313AA11B0D0EAADB46E151A37395ABF4FDE5690DD20
8A8203F33BC5AE42ABB3FA5CE6CC7C2FF1141A09489DA9290F5991FC3FADB6E8
008CAB5CAA6CE68D612C9A2AD14F1DB3B2ED2760EC1A22B5BECD6F37DA404DC4
340669554C25AFCF53AD025C5AA750C1F3F80E3A98BEF6E511E50C5B0BE2D927
EF> |-
/g35 <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3AB
C1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10
425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31
D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC6
0C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5
B546505C954A88> |-
/g36 <1C60D8A8C9B7361F029BA98E8009911CF482C1C857CBE589E37D9A1982
A7DBDD3195F89E2C6022B037A854A7BF1931D8EFEA5631A8AF345DD2E737C1E3
54B06DEC6E11AB4D71707767CA1076E0E28ADF8EB1761EA2E2D596E2663AED02
52CA9E55ED4E> |-
/g37 <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B45
382285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-
/g38 <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |-
/g39 <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F
1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886
D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5
C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AA
B4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F
1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174
E0C619907BEEF9FED49CD2B96F29B7B01884> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCD+Arial /Encoding get
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
dup 35 /g35 put
dup 36 /g36 put
dup 37 /g37 put
dup 38 /g38 put
dup 39 /g39 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCD+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
216{/.notdef}rp]
NNOJCD+Arial nf
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-168.84 -275.867 mo
( )sh
-160.227 -275.867 mo
(\021)sh
-158.199 -275.867 mo
(\003)sh
-153.125 -275.867 mo
(\012)sh
-148.051 -275.867 mo
(\024)sh
-142.98 -275.867 mo
(!)sh
-136.391 -275.867 mo
(")sh
-129.289 -275.867 mo
(\010)sh
-124.219 -275.867 mo
(\021)sh
-122.191 -275.867 mo
(\003)sh
-117.117 -275.867 mo
(\017)sh
-114.582 -275.867 mo
(\020)sh
-109.254 -275.867 mo
(\017)sh
-106.715 -275.867 mo
(\031)sh
-101.641 -275.867 mo
(#)sh
-96.5664 -275.867 mo
($)sh
-93.0195 -275.867 mo
(\025)sh
-90.9922 -275.867 mo
(\024)sh
-85.918 -275.867 mo
(\011)sh
-80.8438 -275.867 mo
(\031)sh
-75.7734 -275.867 mo
(#)sh
-70.6992 -275.867 mo
(\026)sh
-67.6602 -275.867 mo
(%)sh
-61.5742 -275.867 mo
(\010)sh
-56.5 -275.867 mo
(\021)sh
-54.4727 -275.867 mo
(&)sh
-49.9102 -275.867 mo
(\006)sh
-44.8359 -275.867 mo
(\007)sh
-41.7969 -275.867 mo
(\015)sh
-35.2109 -275.867 mo
(\001)sh
-29.125 -275.867 mo
(\015)sh
-22.5352 -275.867 mo
(')sh
-16.4492 -275.867 mo
( )sh
-7.83594 -275.867 mo
(\034)sh
-307.559 -284.867 mo
-307.559 -271.187 li
-289.441 -271.187 li
-289.441 -284.867 li
-307.559 -284.867 li
cp
f
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-307.559 -274.547 mo
(\001)sh
-301.473 -274.547 mo
(\002)sh
-296.398 -274.547 mo
(\003)sh
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: ELRBAA+Arial AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
systemdict begin
NNOJCD+Arial dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g40 <1C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |-
/g41 <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/g42 <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BC
D9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB6
3F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200
B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49
372EF96DD9EB13A793559C13CFDFE477> |-
/g43 <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE
548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C
10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698
FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14
A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C
0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF
6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
NNOJCD+Arial /Encoding get
dup 40 /g40 put
dup 41 /g41 put
dup 42 /g42 put
dup 43 /g43 put
pop
%ADOEndSubsetFont
reset_gvm
/NNOJCD+Arial*1 
[/.notdef /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 212{/.notdef}rp]
NNOJCD+Arial nf
NNOJCD+Arial*1 [9.125 0 0 -9.1198 0 0 ]msf
-287.641 -275.387 mo
(%)sh
-281.555 -275.387 mo
(\010)sh
-276.48 -275.387 mo
(\021)sh
-274.453 -275.387 mo
(&)sh
-269.891 -275.387 mo
(\006)sh
-264.816 -275.387 mo
(\007)sh
-261.777 -275.387 mo
(\015)sh
-255.191 -275.387 mo
(\001)sh
-249.105 -275.387 mo
(\015)sh
-242.516 -275.387 mo
(')sh
-236.43 -275.387 mo
( )sh
-227.816 -275.387 mo
(\017)sh
-225.277 -275.387 mo
(\020)sh
-219.949 -275.387 mo
(\017)sh
-217.414 -275.387 mo
(\031)sh
-212.34 -275.387 mo
(\()sh
-209.801 -275.387 mo
(\))sh
-204.727 -275.387 mo
(*)sh
-199.656 -275.387 mo
(+)sh
grestore
grestore
pgrs
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
grestore

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
%%PageTrailer

%%Trailer

Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
